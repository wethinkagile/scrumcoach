{
  "version": 3,
  "sources": ["../../puppeteer-core/src/api/Browser.ts", "../../puppeteer-core/src/api/BrowserContext.ts", "../../puppeteer-core/src/api/Dialog.ts", "../../puppeteer-core/src/util/ErrorLike.ts", "../../puppeteer-core/src/common/HandleIterator.ts", "../../puppeteer-core/src/common/LazyArg.ts", "../../puppeteer-core/src/api/ElementHandleSymbol.ts", "../../puppeteer-core/src/util/Function.ts", "../../puppeteer-core/src/common/QueryHandler.ts", "../../puppeteer-core/src/util/AsyncIterableUtil.ts", "../../puppeteer-core/src/cdp/AriaQueryHandler.ts", "../../puppeteer-core/src/generated/injected.ts", "../../puppeteer-core/src/common/ScriptInjector.ts", "../../puppeteer-core/src/common/CustomQueryHandler.ts", "../../puppeteer-core/src/common/PierceQueryHandler.ts", "../../puppeteer-core/src/common/PQueryHandler.ts", "../../puppeteer-core/src/common/TextQueryHandler.ts", "../../puppeteer-core/src/common/XPathQueryHandler.ts", "../../puppeteer-core/src/common/GetQueryHandler.ts", "../../puppeteer-core/src/api/JSHandle.ts", "../../puppeteer-core/src/api/ElementHandle.ts", "../../puppeteer-core/src/api/locators/locators.ts", "../../puppeteer-core/src/api/Frame.ts", "../../puppeteer-core/src/api/HTTPRequest.ts", "../../puppeteer-core/src/api/HTTPResponse.ts", "../../puppeteer-core/src/api/Input.ts", "../../puppeteer-core/src/common/TimeoutSettings.ts", "../../puppeteer-core/src/api/Page.ts", "../../puppeteer-core/src/common/WaitTask.ts", "../../puppeteer-core/src/api/Realm.ts", "../../puppeteer-core/src/api/Target.ts", "../../puppeteer-core/src/api/WebWorker.ts", "../../puppeteer-core/src/cdp/Accessibility.ts", "../../puppeteer-core/src/common/CallbackRegistry.ts", "../../puppeteer-core/src/common/ConsoleMessage.ts", "../../puppeteer-core/src/cdp/Coverage.ts", "../../puppeteer-core/src/cdp/EmulationManager.ts", "../../puppeteer-core/src/cdp/Tracing.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {ChildProcess} from 'child_process';\n\nimport type {Protocol} from 'devtools-protocol';\n\nimport {\n  firstValueFrom,\n  from,\n  merge,\n  raceWith,\n} from '../../third_party/rxjs/rxjs.js';\nimport type {ProtocolType} from '../common/ConnectOptions.js';\nimport {EventEmitter, type EventType} from '../common/EventEmitter.js';\nimport {\n  debugError,\n  fromEmitterEvent,\n  filterAsync,\n  timeout,\n} from '../common/util.js';\nimport {asyncDisposeSymbol, disposeSymbol} from '../util/disposable.js';\n\nimport type {BrowserContext} from './BrowserContext.js';\nimport type {Page} from './Page.js';\nimport type {Target} from './Target.js';\n/**\n * @public\n */\nexport interface BrowserContextOptions {\n  /**\n   * Proxy server with optional port to use for all requests.\n   * Username and password can be set in `Page.authenticate`.\n   */\n  proxyServer?: string;\n  /**\n   * Bypass the proxy for the given list of hosts.\n   */\n  proxyBypassList?: string[];\n}\n\n/**\n * @internal\n */\nexport type BrowserCloseCallback = () => Promise<void> | void;\n\n/**\n * @public\n */\nexport type TargetFilterCallback = (target: Target) => boolean;\n\n/**\n * @internal\n */\nexport type IsPageTargetCallback = (target: Target) => boolean;\n\n/**\n * @internal\n */\nexport const WEB_PERMISSION_TO_PROTOCOL_PERMISSION = new Map<\n  Permission,\n  Protocol.Browser.PermissionType\n>([\n  ['geolocation', 'geolocation'],\n  ['midi', 'midi'],\n  ['notifications', 'notifications'],\n  // TODO: push isn't a valid type?\n  // ['push', 'push'],\n  ['camera', 'videoCapture'],\n  ['microphone', 'audioCapture'],\n  ['background-sync', 'backgroundSync'],\n  ['ambient-light-sensor', 'sensors'],\n  ['accelerometer', 'sensors'],\n  ['gyroscope', 'sensors'],\n  ['magnetometer', 'sensors'],\n  ['accessibility-events', 'accessibilityEvents'],\n  ['clipboard-read', 'clipboardReadWrite'],\n  ['clipboard-write', 'clipboardReadWrite'],\n  ['clipboard-sanitized-write', 'clipboardSanitizedWrite'],\n  ['payment-handler', 'paymentHandler'],\n  ['persistent-storage', 'durableStorage'],\n  ['idle-detection', 'idleDetection'],\n  // chrome-specific permissions we have.\n  ['midi-sysex', 'midiSysex'],\n]);\n\n/**\n * @public\n */\nexport type Permission =\n  | 'geolocation'\n  | 'midi'\n  | 'notifications'\n  | 'camera'\n  | 'microphone'\n  | 'background-sync'\n  | 'ambient-light-sensor'\n  | 'accelerometer'\n  | 'gyroscope'\n  | 'magnetometer'\n  | 'accessibility-events'\n  | 'clipboard-read'\n  | 'clipboard-write'\n  | 'clipboard-sanitized-write'\n  | 'payment-handler'\n  | 'persistent-storage'\n  | 'idle-detection'\n  | 'midi-sysex';\n\n/**\n * @public\n */\nexport interface WaitForTargetOptions {\n  /**\n   * Maximum wait time in milliseconds. Pass `0` to disable the timeout.\n   *\n   * @defaultValue `30_000`\n   */\n  timeout?: number;\n}\n\n/**\n * All the events a {@link Browser | browser instance} may emit.\n *\n * @public\n */\nexport const enum BrowserEvent {\n  /**\n   * Emitted when Puppeteer gets disconnected from the browser instance. This\n   * might happen because either:\n   *\n   * - The browser closes/crashes or\n   * - {@link Browser.disconnect} was called.\n   */\n  Disconnected = 'disconnected',\n  /**\n   * Emitted when the URL of a target changes. Contains a {@link Target}\n   * instance.\n   *\n   * @remarks Note that this includes target changes in all browser\n   * contexts.\n   */\n  TargetChanged = 'targetchanged',\n  /**\n   * Emitted when a target is created, for example when a new page is opened by\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/open | window.open}\n   * or by {@link Browser.newPage | browser.newPage}\n   *\n   * Contains a {@link Target} instance.\n   *\n   * @remarks Note that this includes target creations in all browser\n   * contexts.\n   */\n  TargetCreated = 'targetcreated',\n  /**\n   * Emitted when a target is destroyed, for example when a page is closed.\n   * Contains a {@link Target} instance.\n   *\n   * @remarks Note that this includes target destructions in all browser\n   * contexts.\n   */\n  TargetDestroyed = 'targetdestroyed',\n  /**\n   * @internal\n   */\n  TargetDiscovered = 'targetdiscovered',\n}\n\n/**\n * @public\n */\nexport interface BrowserEvents extends Record<EventType, unknown> {\n  [BrowserEvent.Disconnected]: undefined;\n  [BrowserEvent.TargetCreated]: Target;\n  [BrowserEvent.TargetDestroyed]: Target;\n  [BrowserEvent.TargetChanged]: Target;\n  /**\n   * @internal\n   */\n  [BrowserEvent.TargetDiscovered]: Protocol.Target.TargetInfo;\n}\n\n/**\n * @public\n * @experimental\n */\nexport interface DebugInfo {\n  pendingProtocolErrors: Error[];\n}\n\n/**\n * {@link Browser} represents a browser instance that is either:\n *\n * - connected to via {@link Puppeteer.connect} or\n * - launched by {@link PuppeteerNode.launch}.\n *\n * {@link Browser} {@link EventEmitter.emit | emits} various events which are\n * documented in the {@link BrowserEvent} enum.\n *\n * @example Using a {@link Browser} to create a {@link Page}:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * const browser = await puppeteer.launch();\n * const page = await browser.newPage();\n * await page.goto('https://example.com');\n * await browser.close();\n * ```\n *\n * @example Disconnecting from and reconnecting to a {@link Browser}:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * const browser = await puppeteer.launch();\n * // Store the endpoint to be able to reconnect to the browser.\n * const browserWSEndpoint = browser.wsEndpoint();\n * // Disconnect puppeteer from the browser.\n * await browser.disconnect();\n *\n * // Use the endpoint to reestablish a connection\n * const browser2 = await puppeteer.connect({browserWSEndpoint});\n * // Close the browser.\n * await browser2.close();\n * ```\n *\n * @public\n */\nexport abstract class Browser extends EventEmitter<BrowserEvents> {\n  /**\n   * @internal\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Gets the associated\n   * {@link https://nodejs.org/api/child_process.html#class-childprocess | ChildProcess}.\n   *\n   * @returns `null` if this instance was connected to via\n   * {@link Puppeteer.connect}.\n   */\n  abstract process(): ChildProcess | null;\n\n  /**\n   * Creates a new {@link BrowserContext | browser context}.\n   *\n   * This won't share cookies/cache with other {@link BrowserContext | browser contexts}.\n   *\n   * @example\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   *\n   * const browser = await puppeteer.launch();\n   * // Create a new browser context.\n   * const context = await browser.createBrowserContext();\n   * // Create a new page in a pristine context.\n   * const page = await context.newPage();\n   * // Do stuff\n   * await page.goto('https://example.com');\n   * ```\n   */\n  abstract createBrowserContext(\n    options?: BrowserContextOptions\n  ): Promise<BrowserContext>;\n\n  /**\n   * Gets a list of open {@link BrowserContext | browser contexts}.\n   *\n   * In a newly-created {@link Browser | browser}, this will return a single\n   * instance of {@link BrowserContext}.\n   */\n  abstract browserContexts(): BrowserContext[];\n\n  /**\n   * Gets the default {@link BrowserContext | browser context}.\n   *\n   * @remarks The default {@link BrowserContext | browser context} cannot be\n   * closed.\n   */\n  abstract defaultBrowserContext(): BrowserContext;\n\n  /**\n   * Gets the WebSocket URL to connect to this {@link Browser | browser}.\n   *\n   * This is usually used with {@link Puppeteer.connect}.\n   *\n   * You can find the debugger URL (`webSocketDebuggerUrl`) from\n   * `http://HOST:PORT/json/version`.\n   *\n   * See {@link\n   * https://chromedevtools.github.io/devtools-protocol/#how-do-i-access-the-browser-target\n   * | browser endpoint} for more information.\n   *\n   * @remarks The format is always `ws://HOST:PORT/devtools/browser/<id>`.\n   */\n  abstract wsEndpoint(): string;\n\n  /**\n   * Creates a new {@link Page | page} in the\n   * {@link Browser.defaultBrowserContext | default browser context}.\n   */\n  abstract newPage(): Promise<Page>;\n\n  /**\n   * Gets all active {@link Target | targets}.\n   *\n   * In case of multiple {@link BrowserContext | browser contexts}, this returns\n   * all {@link Target | targets} in all\n   * {@link BrowserContext | browser contexts}.\n   */\n  abstract targets(): Target[];\n\n  /**\n   * Gets the {@link Target | target} associated with the\n   * {@link Browser.defaultBrowserContext | default browser context}).\n   */\n  abstract target(): Target;\n\n  /**\n   * Waits until a {@link Target | target} matching the given `predicate`\n   * appears and returns it.\n   *\n   * This will look all open {@link BrowserContext | browser contexts}.\n   *\n   * @example Finding a target for a page opened via `window.open`:\n   *\n   * ```ts\n   * await page.evaluate(() => window.open('https://www.example.com/'));\n   * const newWindowTarget = await browser.waitForTarget(\n   *   target => target.url() === 'https://www.example.com/'\n   * );\n   * ```\n   */\n  async waitForTarget(\n    predicate: (x: Target) => boolean | Promise<boolean>,\n    options: WaitForTargetOptions = {}\n  ): Promise<Target> {\n    const {timeout: ms = 30000} = options;\n    return await firstValueFrom(\n      merge(\n        fromEmitterEvent(this, BrowserEvent.TargetCreated),\n        fromEmitterEvent(this, BrowserEvent.TargetChanged),\n        from(this.targets())\n      ).pipe(filterAsync(predicate), raceWith(timeout(ms)))\n    );\n  }\n\n  /**\n   * Gets a list of all open {@link Page | pages} inside this {@link Browser}.\n   *\n   * If there ar multiple {@link BrowserContext | browser contexts}, this\n   * returns all {@link Page | pages} in all\n   * {@link BrowserContext | browser contexts}.\n   *\n   * @remarks Non-visible {@link Page | pages}, such as `\"background_page\"`,\n   * will not be listed here. You can find them using {@link Target.page}.\n   */\n  async pages(): Promise<Page[]> {\n    const contextPages = await Promise.all(\n      this.browserContexts().map(context => {\n        return context.pages();\n      })\n    );\n    // Flatten array.\n    return contextPages.reduce((acc, x) => {\n      return acc.concat(x);\n    }, []);\n  }\n\n  /**\n   * Gets a string representing this {@link Browser | browser's} name and\n   * version.\n   *\n   * For headless browser, this is similar to `\"HeadlessChrome/61.0.3153.0\"`. For\n   * non-headless or new-headless, this is similar to `\"Chrome/61.0.3153.0\"`. For\n   * Firefox, it is similar to `\"Firefox/116.0a1\"`.\n   *\n   * The format of {@link Browser.version} might change with future releases of\n   * browsers.\n   */\n  abstract version(): Promise<string>;\n\n  /**\n   * Gets this {@link Browser | browser's} original user agent.\n   *\n   * {@link Page | Pages} can override the user agent with\n   * {@link Page.setUserAgent}.\n   *\n   */\n  abstract userAgent(): Promise<string>;\n\n  /**\n   * Closes this {@link Browser | browser} and all associated\n   * {@link Page | pages}.\n   */\n  abstract close(): Promise<void>;\n\n  /**\n   * Disconnects Puppeteer from this {@link Browser | browser}, but leaves the\n   * process running.\n   */\n  abstract disconnect(): Promise<void>;\n\n  /**\n   * Whether Puppeteer is connected to this {@link Browser | browser}.\n   *\n   * @deprecated Use {@link Browser | Browser.connected}.\n   */\n  isConnected(): boolean {\n    return this.connected;\n  }\n\n  /**\n   * Whether Puppeteer is connected to this {@link Browser | browser}.\n   */\n  abstract get connected(): boolean;\n\n  /** @internal */\n  [disposeSymbol](): void {\n    if (this.process()) {\n      return void this.close().catch(debugError);\n    }\n    return void this.disconnect().catch(debugError);\n  }\n\n  /** @internal */\n  [asyncDisposeSymbol](): Promise<void> {\n    if (this.process()) {\n      return this.close();\n    }\n    return this.disconnect();\n  }\n\n  /**\n   * @internal\n   */\n  abstract get protocol(): ProtocolType;\n\n  /**\n   * Get debug information from Puppeteer.\n   *\n   * @remarks\n   *\n   * Currently, includes pending protocol calls. In the future, we might add more info.\n   *\n   * @public\n   * @experimental\n   */\n  abstract get debugInfo(): DebugInfo;\n}\n", "/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  firstValueFrom,\n  from,\n  merge,\n  raceWith,\n} from '../../third_party/rxjs/rxjs.js';\nimport {EventEmitter, type EventType} from '../common/EventEmitter.js';\nimport {\n  debugError,\n  fromEmitterEvent,\n  filterAsync,\n  timeout,\n} from '../common/util.js';\nimport {asyncDisposeSymbol, disposeSymbol} from '../util/disposable.js';\n\nimport type {Browser, Permission, WaitForTargetOptions} from './Browser.js';\nimport type {Page} from './Page.js';\nimport type {Target} from './Target.js';\n\n/**\n * @public\n */\nexport const enum BrowserContextEvent {\n  /**\n   * Emitted when the url of a target inside the browser context changes.\n   * Contains a {@link Target} instance.\n   */\n  TargetChanged = 'targetchanged',\n\n  /**\n   * Emitted when a target is created within the browser context, for example\n   * when a new page is opened by\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/open | window.open}\n   * or by {@link BrowserContext.newPage | browserContext.newPage}\n   *\n   * Contains a {@link Target} instance.\n   */\n  TargetCreated = 'targetcreated',\n  /**\n   * Emitted when a target is destroyed within the browser context, for example\n   * when a page is closed. Contains a {@link Target} instance.\n   */\n  TargetDestroyed = 'targetdestroyed',\n}\n\n/**\n * @public\n */\nexport interface BrowserContextEvents extends Record<EventType, unknown> {\n  [BrowserContextEvent.TargetChanged]: Target;\n  [BrowserContextEvent.TargetCreated]: Target;\n  [BrowserContextEvent.TargetDestroyed]: Target;\n}\n\n/**\n * {@link BrowserContext} represents individual user contexts within a\n * {@link Browser | browser}.\n *\n * When a {@link Browser | browser} is launched, it has a single\n * {@link BrowserContext | browser context} by default. Others can be created\n * using {@link Browser.createBrowserContext}. Each context has isolated storage\n * (cookies/localStorage/etc.)\n *\n * {@link BrowserContext} {@link EventEmitter | emits} various events which are\n * documented in the {@link BrowserContextEvent} enum.\n *\n * If a {@link Page | page} opens another {@link Page | page}, e.g. using\n * `window.open`, the popup will belong to the parent {@link Page.browserContext\n * | page's browser context}.\n *\n * @example Creating a new {@link BrowserContext | browser context}:\n *\n * ```ts\n * // Create a new browser context\n * const context = await browser.createBrowserContext();\n * // Create a new page inside context.\n * const page = await context.newPage();\n * // ... do stuff with page ...\n * await page.goto('https://example.com');\n * // Dispose context once it's no longer needed.\n * await context.close();\n * ```\n *\n * @public\n */\n\nexport abstract class BrowserContext extends EventEmitter<BrowserContextEvents> {\n  /**\n   * @internal\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Gets all active {@link Target | targets} inside this\n   * {@link BrowserContext | browser context}.\n   */\n  abstract targets(): Target[];\n\n  /**\n   * Waits until a {@link Target | target} matching the given `predicate`\n   * appears and returns it.\n   *\n   * This will look all open {@link BrowserContext | browser contexts}.\n   *\n   * @example Finding a target for a page opened via `window.open`:\n   *\n   * ```ts\n   * await page.evaluate(() => window.open('https://www.example.com/'));\n   * const newWindowTarget = await browserContext.waitForTarget(\n   *   target => target.url() === 'https://www.example.com/'\n   * );\n   * ```\n   */\n  async waitForTarget(\n    predicate: (x: Target) => boolean | Promise<boolean>,\n    options: WaitForTargetOptions = {}\n  ): Promise<Target> {\n    const {timeout: ms = 30000} = options;\n    return await firstValueFrom(\n      merge(\n        fromEmitterEvent(this, BrowserContextEvent.TargetCreated),\n        fromEmitterEvent(this, BrowserContextEvent.TargetChanged),\n        from(this.targets())\n      ).pipe(filterAsync(predicate), raceWith(timeout(ms)))\n    );\n  }\n\n  /**\n   * Gets a list of all open {@link Page | pages} inside this\n   * {@link BrowserContext | browser context}.\n   *\n   * @remarks Non-visible {@link Page | pages}, such as `\"background_page\"`,\n   * will not be listed here. You can find them using {@link Target.page}.\n   */\n  abstract pages(): Promise<Page[]>;\n\n  /**\n   * Whether this {@link BrowserContext | browser context} is incognito.\n   *\n   * In Chrome, the\n   * {@link Browser.defaultBrowserContext | default browser context} is the only\n   * non-incognito browser context.\n   *\n   * @deprecated In Chrome, the\n   * {@link Browser.defaultBrowserContext | default browser context} can also be\n   * \"incognito\" if configured via the arguments and in such cases this getter\n   * returns wrong results (see\n   * https://github.com/puppeteer/puppeteer/issues/8836). Also, the term\n   * \"incognito\" is not applicable to other browsers. To migrate, check the\n   * {@link Browser.defaultBrowserContext | default browser context} instead: in\n   * Chrome all non-default contexts are incognito, and the default context\n   * might be incognito if you provide the `--incognito` argument when launching\n   * the browser.\n   */\n  abstract isIncognito(): boolean;\n\n  /**\n   * Grants this {@link BrowserContext | browser context} the given\n   * `permissions` within the given `origin`.\n   *\n   * @example Overriding permissions in the\n   * {@link Browser.defaultBrowserContext | default browser context}:\n   *\n   * ```ts\n   * const context = browser.defaultBrowserContext();\n   * await context.overridePermissions('https://html5demos.com', [\n   *   'geolocation',\n   * ]);\n   * ```\n   *\n   * @param origin - The origin to grant permissions to, e.g.\n   * \"https://example.com\".\n   * @param permissions - An array of permissions to grant. All permissions that\n   * are not listed here will be automatically denied.\n   */\n  abstract overridePermissions(\n    origin: string,\n    permissions: Permission[]\n  ): Promise<void>;\n\n  /**\n   * Clears all permission overrides for this\n   * {@link BrowserContext | browser context}.\n   *\n   * @example Clearing overridden permissions in the\n   * {@link Browser.defaultBrowserContext | default browser context}:\n   *\n   * ```ts\n   * const context = browser.defaultBrowserContext();\n   * context.overridePermissions('https://example.com', ['clipboard-read']);\n   * // do stuff ..\n   * context.clearPermissionOverrides();\n   * ```\n   */\n  abstract clearPermissionOverrides(): Promise<void>;\n\n  /**\n   * Creates a new {@link Page | page} in this\n   * {@link BrowserContext | browser context}.\n   */\n  abstract newPage(): Promise<Page>;\n\n  /**\n   * Gets the {@link Browser | browser} associated with this\n   * {@link BrowserContext | browser context}.\n   */\n  abstract browser(): Browser;\n\n  /**\n   * Closes this {@link BrowserContext | browser context} and all associated\n   * {@link Page | pages}.\n   *\n   * @remarks The\n   * {@link Browser.defaultBrowserContext | default browser context} cannot be\n   * closed.\n   */\n  abstract close(): Promise<void>;\n\n  /**\n   * Whether this {@link BrowserContext | browser context} is closed.\n   */\n  get closed(): boolean {\n    return !this.browser().browserContexts().includes(this);\n  }\n\n  /**\n   * Identifier for this {@link BrowserContext | browser context}.\n   */\n  get id(): string | undefined {\n    return undefined;\n  }\n\n  /** @internal */\n  [disposeSymbol](): void {\n    return void this.close().catch(debugError);\n  }\n\n  /** @internal */\n  [asyncDisposeSymbol](): Promise<void> {\n    return this.close();\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {Protocol} from 'devtools-protocol';\n\nimport {assert} from '../util/assert.js';\n\n/**\n * Dialog instances are dispatched by the {@link Page} via the `dialog` event.\n *\n * @remarks\n *\n * @example\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   page.on('dialog', async dialog => {\n *     console.log(dialog.message());\n *     await dialog.dismiss();\n *     await browser.close();\n *   });\n *   page.evaluate(() => alert('1'));\n * })();\n * ```\n *\n * @public\n */\nexport abstract class Dialog {\n  #type: Protocol.Page.DialogType;\n  #message: string;\n  #defaultValue: string;\n  #handled = false;\n\n  /**\n   * @internal\n   */\n  constructor(\n    type: Protocol.Page.DialogType,\n    message: string,\n    defaultValue = ''\n  ) {\n    this.#type = type;\n    this.#message = message;\n    this.#defaultValue = defaultValue;\n  }\n\n  /**\n   * The type of the dialog.\n   */\n  type(): Protocol.Page.DialogType {\n    return this.#type;\n  }\n\n  /**\n   * The message displayed in the dialog.\n   */\n  message(): string {\n    return this.#message;\n  }\n\n  /**\n   * The default value of the prompt, or an empty string if the dialog\n   * is not a `prompt`.\n   */\n  defaultValue(): string {\n    return this.#defaultValue;\n  }\n\n  /**\n   * @internal\n   */\n  protected abstract handle(options: {\n    accept: boolean;\n    text?: string;\n  }): Promise<void>;\n\n  /**\n   * A promise that resolves when the dialog has been accepted.\n   *\n   * @param promptText - optional text that will be entered in the dialog\n   * prompt. Has no effect if the dialog's type is not `prompt`.\n   *\n   */\n  async accept(promptText?: string): Promise<void> {\n    assert(!this.#handled, 'Cannot accept dialog which is already handled!');\n    this.#handled = true;\n    await this.handle({\n      accept: true,\n      text: promptText,\n    });\n  }\n\n  /**\n   * A promise which will resolve once the dialog has been dismissed\n   */\n  async dismiss(): Promise<void> {\n    assert(!this.#handled, 'Cannot dismiss dialog which is already handled!');\n    this.#handled = true;\n    await this.handle({\n      accept: false,\n    });\n  }\n}\n", "/**\n * @license\n * Copyright 2022 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {ProtocolError} from '../common/Errors.js';\n\n/**\n * @internal\n */\nexport interface ErrorLike extends Error {\n  name: string;\n  message: string;\n}\n\n/**\n * @internal\n */\nexport function isErrorLike(obj: unknown): obj is ErrorLike {\n  return (\n    typeof obj === 'object' && obj !== null && 'name' in obj && 'message' in obj\n  );\n}\n\n/**\n * @internal\n */\nexport function isErrnoException(obj: unknown): obj is NodeJS.ErrnoException {\n  return (\n    isErrorLike(obj) &&\n    ('errno' in obj || 'code' in obj || 'path' in obj || 'syscall' in obj)\n  );\n}\n\n/**\n * @internal\n */\nexport function rewriteError(\n  error: ProtocolError,\n  message: string,\n  originalMessage?: string\n): Error {\n  error.message = message;\n  error.originalMessage = originalMessage ?? error.originalMessage;\n  return error;\n}\n\n/**\n * @internal\n */\nexport function createProtocolErrorMessage(object: {\n  error: {message: string; data: any; code: number};\n}): string {\n  let message = object.error.message;\n  // TODO: remove the type checks when we stop connecting to BiDi with a CDP\n  // client.\n  if (\n    object.error &&\n    typeof object.error === 'object' &&\n    'data' in object.error\n  ) {\n    message += ` ${object.error.data}`;\n  }\n  return message;\n}\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {JSHandle} from '../api/JSHandle.js';\nimport {DisposableStack, disposeSymbol} from '../util/disposable.js';\n\nimport type {AwaitableIterable, HandleFor} from './types.js';\n\nconst DEFAULT_BATCH_SIZE = 20;\n\n/**\n * This will transpose an iterator JSHandle into a fast, Puppeteer-side iterator\n * of JSHandles.\n *\n * @param size - The number of elements to transpose. This should be something\n * reasonable.\n */\nasync function* fastTransposeIteratorHandle<T>(\n  iterator: JSHandle<AwaitableIterator<T>>,\n  size: number\n) {\n  using array = await iterator.evaluateHandle(async (iterator, size) => {\n    const results = [];\n    while (results.length < size) {\n      const result = await iterator.next();\n      if (result.done) {\n        break;\n      }\n      results.push(result.value);\n    }\n    return results;\n  }, size);\n  const properties = (await array.getProperties()) as Map<string, HandleFor<T>>;\n  const handles = properties.values();\n  using stack = new DisposableStack();\n  stack.defer(() => {\n    for (using handle of handles) {\n      handle[disposeSymbol]();\n    }\n  });\n  yield* handles;\n  return properties.size === 0;\n}\n\n/**\n * This will transpose an iterator JSHandle in batches based on the default size\n * of {@link fastTransposeIteratorHandle}.\n */\n\nasync function* transposeIteratorHandle<T>(\n  iterator: JSHandle<AwaitableIterator<T>>\n) {\n  let size = DEFAULT_BATCH_SIZE;\n  while (!(yield* fastTransposeIteratorHandle(iterator, size))) {\n    size <<= 1;\n  }\n}\n\ntype AwaitableIterator<T> = Iterator<T> | AsyncIterator<T>;\n\n/**\n * @internal\n */\nexport async function* transposeIterableHandle<T>(\n  handle: JSHandle<AwaitableIterable<T>>\n): AsyncIterableIterator<HandleFor<T>> {\n  using generatorHandle = await handle.evaluateHandle(iterable => {\n    return (async function* () {\n      yield* iterable;\n    })();\n  });\n  yield* transposeIteratorHandle(generatorHandle);\n}\n", "/**\n * @license\n * Copyright 2022 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {JSHandle} from '../api/JSHandle.js';\nimport type PuppeteerUtil from '../injected/injected.js';\n\n/**\n * @internal\n */\nexport interface PuppeteerUtilWrapper {\n  puppeteerUtil: Promise<JSHandle<PuppeteerUtil>>;\n}\n\n/**\n * @internal\n */\nexport class LazyArg<T, Context = PuppeteerUtilWrapper> {\n  static create = <T>(\n    get: (context: PuppeteerUtilWrapper) => Promise<T> | T\n  ): T => {\n    // We don't want to introduce LazyArg to the type system, otherwise we would\n    // have to make it public.\n    return new LazyArg(get) as unknown as T;\n  };\n\n  #get: (context: Context) => Promise<T> | T;\n  private constructor(get: (context: Context) => Promise<T> | T) {\n    this.#get = get;\n  }\n\n  async get(context: Context): Promise<T> {\n    return await this.#get(context);\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @internal\n */\nexport const _isElementHandle = Symbol('_isElementHandle');\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nconst createdFunctions = new Map<string, (...args: unknown[]) => unknown>();\n\n/**\n * Creates a function from a string.\n *\n * @internal\n */\nexport const createFunction = (\n  functionValue: string\n): ((...args: unknown[]) => unknown) => {\n  let fn = createdFunctions.get(functionValue);\n  if (fn) {\n    return fn;\n  }\n  fn = new Function(`return ${functionValue}`)() as (\n    ...args: unknown[]\n  ) => unknown;\n  createdFunctions.set(functionValue, fn);\n  return fn;\n};\n\n/**\n * @internal\n */\nexport function stringifyFunction(fn: (...args: never) => unknown): string {\n  let value = fn.toString();\n  try {\n    new Function(`(${value})`);\n  } catch (err) {\n    if (\n      (err as Error).message.includes(\n        `Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of script in the following Content Security Policy directive`\n      )\n    ) {\n      // The content security policy does not allow Function eval. Let's\n      // assume the value might be valid as is.\n      return value;\n    }\n    // This means we might have a function shorthand (e.g. `test(){}`). Let's\n    // try prefixing.\n    let prefix = 'function ';\n    if (value.startsWith('async ')) {\n      prefix = `async ${prefix}`;\n      value = value.substring('async '.length);\n    }\n    value = `${prefix}${value}`;\n    try {\n      new Function(`(${value})`);\n    } catch {\n      // We tried hard to serialize, but there's a weird beast here.\n      throw new Error('Passed function cannot be serialized!');\n    }\n  }\n  return value;\n}\n\n/**\n * Replaces `PLACEHOLDER`s with the given replacements.\n *\n * All replacements must be valid JS code.\n *\n * @example\n *\n * ```ts\n * interpolateFunction(() => PLACEHOLDER('test'), {test: 'void 0'});\n * // Equivalent to () => void 0\n * ```\n *\n * @internal\n */\nexport const interpolateFunction = <T extends (...args: never[]) => unknown>(\n  fn: T,\n  replacements: Record<string, string>\n): T => {\n  let value = stringifyFunction(fn);\n  for (const [name, jsValue] of Object.entries(replacements)) {\n    value = value.replace(\n      new RegExp(`PLACEHOLDER\\\\(\\\\s*(?:'${name}'|\"${name}\")\\\\s*\\\\)`, 'g'),\n      // Wrapping this ensures tersers that accidentally inline PLACEHOLDER calls\n      // are still valid. Without, we may get calls like ()=>{...}() which is\n      // not valid.\n      `(${jsValue})`\n    );\n  }\n  return createFunction(value) as unknown as T;\n};\n\ndeclare global {\n  /**\n   * Used for interpolation with {@link interpolateFunction}.\n   *\n   * @internal\n   */\n  function PLACEHOLDER<T>(name: string): T;\n}\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {ElementHandle} from '../api/ElementHandle.js';\nimport {_isElementHandle} from '../api/ElementHandleSymbol.js';\nimport type {Frame} from '../api/Frame.js';\nimport type {WaitForSelectorOptions} from '../api/Page.js';\nimport type PuppeteerUtil from '../injected/injected.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\nimport {interpolateFunction, stringifyFunction} from '../util/Function.js';\n\nimport {transposeIterableHandle} from './HandleIterator.js';\nimport {LazyArg} from './LazyArg.js';\nimport type {Awaitable, AwaitableIterable} from './types.js';\n\n/**\n * @internal\n */\nexport type QuerySelectorAll = (\n  node: Node,\n  selector: string,\n  PuppeteerUtil: PuppeteerUtil\n) => AwaitableIterable<Node>;\n\n/**\n * @internal\n */\nexport type QuerySelector = (\n  node: Node,\n  selector: string,\n  PuppeteerUtil: PuppeteerUtil\n) => Awaitable<Node | null>;\n\n/**\n * @internal\n */\nexport class QueryHandler {\n  // Either one of these may be implemented, but at least one must be.\n  static querySelectorAll?: QuerySelectorAll;\n  static querySelector?: QuerySelector;\n\n  static get _querySelector(): QuerySelector {\n    if (this.querySelector) {\n      return this.querySelector;\n    }\n    if (!this.querySelectorAll) {\n      throw new Error('Cannot create default `querySelector`.');\n    }\n\n    return (this.querySelector = interpolateFunction(\n      async (node, selector, PuppeteerUtil) => {\n        const querySelectorAll: QuerySelectorAll =\n          PLACEHOLDER('querySelectorAll');\n        const results = querySelectorAll(node, selector, PuppeteerUtil);\n        for await (const result of results) {\n          return result;\n        }\n        return null;\n      },\n      {\n        querySelectorAll: stringifyFunction(this.querySelectorAll),\n      }\n    ));\n  }\n\n  static get _querySelectorAll(): QuerySelectorAll {\n    if (this.querySelectorAll) {\n      return this.querySelectorAll;\n    }\n    if (!this.querySelector) {\n      throw new Error('Cannot create default `querySelectorAll`.');\n    }\n\n    return (this.querySelectorAll = interpolateFunction(\n      async function* (node, selector, PuppeteerUtil) {\n        const querySelector: QuerySelector = PLACEHOLDER('querySelector');\n        const result = await querySelector(node, selector, PuppeteerUtil);\n        if (result) {\n          yield result;\n        }\n      },\n      {\n        querySelector: stringifyFunction(this.querySelector),\n      }\n    ));\n  }\n\n  /**\n   * Queries for multiple nodes given a selector and {@link ElementHandle}.\n   *\n   * Akin to {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll | Document.querySelectorAll()}.\n   */\n  static async *queryAll(\n    element: ElementHandle<Node>,\n    selector: string\n  ): AwaitableIterable<ElementHandle<Node>> {\n    using handle = await element.evaluateHandle(\n      this._querySelectorAll,\n      selector,\n      LazyArg.create(context => {\n        return context.puppeteerUtil;\n      })\n    );\n    yield* transposeIterableHandle(handle);\n  }\n\n  /**\n   * Queries for a single node given a selector and {@link ElementHandle}.\n   *\n   * Akin to {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector}.\n   */\n  static async queryOne(\n    element: ElementHandle<Node>,\n    selector: string\n  ): Promise<ElementHandle<Node> | null> {\n    using result = await element.evaluateHandle(\n      this._querySelector,\n      selector,\n      LazyArg.create(context => {\n        return context.puppeteerUtil;\n      })\n    );\n    if (!(_isElementHandle in result)) {\n      return null;\n    }\n    return result.move();\n  }\n\n  /**\n   * Waits until a single node appears for a given selector and\n   * {@link ElementHandle}.\n   *\n   * This will always query the handle in the Puppeteer world and migrate the\n   * result to the main world.\n   */\n  static async waitFor(\n    elementOrFrame: ElementHandle<Node> | Frame,\n    selector: string,\n    options: WaitForSelectorOptions\n  ): Promise<ElementHandle<Node> | null> {\n    let frame!: Frame;\n    using element = await (async () => {\n      if (!(_isElementHandle in elementOrFrame)) {\n        frame = elementOrFrame;\n        return;\n      }\n      frame = elementOrFrame.frame;\n      return await frame.isolatedRealm().adoptHandle(elementOrFrame);\n    })();\n\n    const {visible = false, hidden = false, timeout, signal} = options;\n\n    try {\n      signal?.throwIfAborted();\n\n      using handle = await frame.isolatedRealm().waitForFunction(\n        async (PuppeteerUtil, query, selector, root, visible) => {\n          const querySelector = PuppeteerUtil.createFunction(\n            query\n          ) as QuerySelector;\n          const node = await querySelector(\n            root ?? document,\n            selector,\n            PuppeteerUtil\n          );\n          return PuppeteerUtil.checkVisibility(node, visible);\n        },\n        {\n          polling: visible || hidden ? 'raf' : 'mutation',\n          root: element,\n          timeout,\n          signal,\n        },\n        LazyArg.create(context => {\n          return context.puppeteerUtil;\n        }),\n        stringifyFunction(this._querySelector),\n        selector,\n        element,\n        visible ? true : hidden ? false : undefined\n      );\n\n      if (signal?.aborted) {\n        throw signal.reason;\n      }\n\n      if (!(_isElementHandle in handle)) {\n        return null;\n      }\n      return await frame.mainRealm().transferHandle(handle);\n    } catch (error) {\n      if (!isErrorLike(error)) {\n        throw error;\n      }\n      if (error.name === 'AbortError') {\n        throw error;\n      }\n      error.message = `Waiting for selector \\`${selector}\\` failed: ${error.message}`;\n      throw error;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport type {AwaitableIterable} from '../common/types.js';\n\n/**\n * @internal\n */\nexport class AsyncIterableUtil {\n  static async *map<T, U>(\n    iterable: AwaitableIterable<T>,\n    map: (item: T) => Promise<U>\n  ): AsyncIterable<U> {\n    for await (const value of iterable) {\n      yield await map(value);\n    }\n  }\n\n  static async *flatMap<T, U>(\n    iterable: AwaitableIterable<T>,\n    map: (item: T) => AwaitableIterable<U>\n  ): AsyncIterable<U> {\n    for await (const value of iterable) {\n      yield* map(value);\n    }\n  }\n\n  static async collect<T>(iterable: AwaitableIterable<T>): Promise<T[]> {\n    const result = [];\n    for await (const value of iterable) {\n      result.push(value);\n    }\n    return result;\n  }\n\n  static async first<T>(\n    iterable: AwaitableIterable<T>\n  ): Promise<T | undefined> {\n    for await (const value of iterable) {\n      return value;\n    }\n    return;\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {ElementHandle} from '../api/ElementHandle.js';\nimport {QueryHandler, type QuerySelector} from '../common/QueryHandler.js';\nimport type {AwaitableIterable} from '../common/types.js';\nimport {assert} from '../util/assert.js';\nimport {AsyncIterableUtil} from '../util/AsyncIterableUtil.js';\n\ninterface ARIASelector {\n  name?: string;\n  role?: string;\n}\n\nconst isKnownAttribute = (\n  attribute: string\n): attribute is keyof ARIASelector => {\n  return ['name', 'role'].includes(attribute);\n};\n\nconst normalizeValue = (value: string): string => {\n  return value.replace(/ +/g, ' ').trim();\n};\n\n/**\n * The selectors consist of an accessible name to query for and optionally\n * further aria attributes on the form `[<attribute>=<value>]`.\n * Currently, we only support the `name` and `role` attribute.\n * The following examples showcase how the syntax works wrt. querying:\n *\n * - 'title[role=\"heading\"]' queries for elements with name 'title' and role 'heading'.\n * - '[role=\"image\"]' queries for elements with role 'image' and any name.\n * - 'label' queries for elements with name 'label' and any role.\n * - '[name=\"\"][role=\"button\"]' queries for elements with no name and role 'button'.\n */\nconst ATTRIBUTE_REGEXP =\n  /\\[\\s*(?<attribute>\\w+)\\s*=\\s*(?<quote>\"|')(?<value>\\\\.|.*?(?=\\k<quote>))\\k<quote>\\s*\\]/g;\nconst parseARIASelector = (selector: string): ARIASelector => {\n  const queryOptions: ARIASelector = {};\n  const defaultName = selector.replace(\n    ATTRIBUTE_REGEXP,\n    (_, attribute, __, value) => {\n      attribute = attribute.trim();\n      assert(\n        isKnownAttribute(attribute),\n        `Unknown aria attribute \"${attribute}\" in selector`\n      );\n      queryOptions[attribute] = normalizeValue(value);\n      return '';\n    }\n  );\n  if (defaultName && !queryOptions.name) {\n    queryOptions.name = normalizeValue(defaultName);\n  }\n  return queryOptions;\n};\n\n/**\n * @internal\n */\nexport class ARIAQueryHandler extends QueryHandler {\n  static override querySelector: QuerySelector = async (\n    node,\n    selector,\n    {ariaQuerySelector}\n  ) => {\n    return await ariaQuerySelector(node, selector);\n  };\n\n  static override async *queryAll(\n    element: ElementHandle<Node>,\n    selector: string\n  ): AwaitableIterable<ElementHandle<Node>> {\n    const {name, role} = parseARIASelector(selector);\n    yield* element.queryAXTree(name, role);\n  }\n\n  static override queryOne = async (\n    element: ElementHandle<Node>,\n    selector: string\n  ): Promise<ElementHandle<Node> | null> => {\n    return (\n      (await AsyncIterableUtil.first(this.queryAll(element, selector))) ?? null\n    );\n  };\n}\n", "/**\n * JavaScript code that provides the puppeteer utilities. See the\n * [README](https://github.com/puppeteer/puppeteer/blob/main/src/injected/README.md)\n * for injection for more information.\n *\n * @internal\n */\nexport const source = \"\\\"use strict\\\";var A=Object.defineProperty;var re=Object.getOwnPropertyDescriptor;var ne=Object.getOwnPropertyNames;var oe=Object.prototype.hasOwnProperty;var u=(t,e)=>{for(var n in e)A(t,n,{get:e[n],enumerable:!0})},se=(t,e,n,r)=>{if(e&&typeof e==\\\"object\\\"||typeof e==\\\"function\\\")for(let o of ne(e))!oe.call(t,o)&&o!==n&&A(t,o,{get:()=>e[o],enumerable:!(r=re(e,o))||r.enumerable});return t};var ie=t=>se(A({},\\\"__esModule\\\",{value:!0}),t);var Re={};u(Re,{default:()=>ke});module.exports=ie(Re);var C=class extends Error{constructor(e,n){super(e,n),this.name=this.constructor.name}get[Symbol.toStringTag](){return this.constructor.name}},b=class extends C{};var f=class t{static create(e){return new t(e)}static async race(e){let n=new Set;try{let r=e.map(o=>o instanceof t?(o.#s&&n.add(o),o.valueOrThrow()):o);return await Promise.race(r)}finally{for(let r of n)r.reject(new Error(\\\"Timeout cleared\\\"))}}#e=!1;#r=!1;#n;#t;#o=new Promise(e=>{this.#t=e});#s;#l;constructor(e){e&&e.timeout>0&&(this.#l=new b(e.message),this.#s=setTimeout(()=>{this.reject(this.#l)},e.timeout))}#a(e){clearTimeout(this.#s),this.#n=e,this.#t()}resolve(e){this.#r||this.#e||(this.#e=!0,this.#a(e))}reject(e){this.#r||this.#e||(this.#r=!0,this.#a(e))}resolved(){return this.#e}finished(){return this.#e||this.#r}value(){return this.#n}#i;valueOrThrow(){return this.#i||(this.#i=(async()=>{if(await this.#o,this.#r)throw this.#n;return this.#n})()),this.#i}};var X=new Map,z=t=>{let e=X.get(t);return e||(e=new Function(`return ${t}`)(),X.set(t,e),e)};var k={};u(k,{ariaQuerySelector:()=>le,ariaQuerySelectorAll:()=>I});var le=(t,e)=>globalThis.__ariaQuerySelector(t,e),I=async function*(t,e){yield*await globalThis.__ariaQuerySelectorAll(t,e)};var M={};u(M,{customQuerySelectors:()=>O});var R=class{#e=new Map;register(e,n){if(!n.queryOne&&n.queryAll){let r=n.queryAll;n.queryOne=(o,i)=>{for(let s of r(o,i))return s;return null}}else if(n.queryOne&&!n.queryAll){let r=n.queryOne;n.queryAll=(o,i)=>{let s=r(o,i);return s?[s]:[]}}else if(!n.queryOne||!n.queryAll)throw new Error(\\\"At least one query method must be defined.\\\");this.#e.set(e,{querySelector:n.queryOne,querySelectorAll:n.queryAll})}unregister(e){this.#e.delete(e)}get(e){return this.#e.get(e)}clear(){this.#e.clear()}},O=new R;var q={};u(q,{pierceQuerySelector:()=>ae,pierceQuerySelectorAll:()=>ce});var ae=(t,e)=>{let n=null,r=o=>{let i=document.createTreeWalker(o,NodeFilter.SHOW_ELEMENT);do{let s=i.currentNode;s.shadowRoot&&r(s.shadowRoot),!(s instanceof ShadowRoot)&&s!==o&&!n&&s.matches(e)&&(n=s)}while(!n&&i.nextNode())};return t instanceof Document&&(t=t.documentElement),r(t),n},ce=(t,e)=>{let n=[],r=o=>{let i=document.createTreeWalker(o,NodeFilter.SHOW_ELEMENT);do{let s=i.currentNode;s.shadowRoot&&r(s.shadowRoot),!(s instanceof ShadowRoot)&&s!==o&&s.matches(e)&&n.push(s)}while(i.nextNode())};return t instanceof Document&&(t=t.documentElement),r(t),n};var m=(t,e)=>{if(!t)throw new Error(e)};var T=class{#e;#r;#n;#t;constructor(e,n){this.#e=e,this.#r=n}async start(){let e=this.#t=f.create(),n=await this.#e();if(n){e.resolve(n);return}this.#n=new MutationObserver(async()=>{let r=await this.#e();r&&(e.resolve(r),await this.stop())}),this.#n.observe(this.#r,{childList:!0,subtree:!0,attributes:!0})}async stop(){m(this.#t,\\\"Polling never started.\\\"),this.#t.finished()||this.#t.reject(new Error(\\\"Polling stopped\\\")),this.#n&&(this.#n.disconnect(),this.#n=void 0)}result(){return m(this.#t,\\\"Polling never started.\\\"),this.#t.valueOrThrow()}},E=class{#e;#r;constructor(e){this.#e=e}async start(){let e=this.#r=f.create(),n=await this.#e();if(n){e.resolve(n);return}let r=async()=>{if(e.finished())return;let o=await this.#e();if(!o){window.requestAnimationFrame(r);return}e.resolve(o),await this.stop()};window.requestAnimationFrame(r)}async stop(){m(this.#r,\\\"Polling never started.\\\"),this.#r.finished()||this.#r.reject(new Error(\\\"Polling stopped\\\"))}result(){return m(this.#r,\\\"Polling never started.\\\"),this.#r.valueOrThrow()}},P=class{#e;#r;#n;#t;constructor(e,n){this.#e=e,this.#r=n}async start(){let e=this.#t=f.create(),n=await this.#e();if(n){e.resolve(n);return}this.#n=setInterval(async()=>{let r=await this.#e();r&&(e.resolve(r),await this.stop())},this.#r)}async stop(){m(this.#t,\\\"Polling never started.\\\"),this.#t.finished()||this.#t.reject(new Error(\\\"Polling stopped\\\")),this.#n&&(clearInterval(this.#n),this.#n=void 0)}result(){return m(this.#t,\\\"Polling never started.\\\"),this.#t.valueOrThrow()}};var F={};u(F,{pQuerySelector:()=>Ce,pQuerySelectorAll:()=>te});var c=class{static async*map(e,n){for await(let r of e)yield await n(r)}static async*flatMap(e,n){for await(let r of e)yield*n(r)}static async collect(e){let n=[];for await(let r of e)n.push(r);return n}static async first(e){for await(let n of e)return n}};var p={attribute:/\\\\[\\\\s*(?:(?<namespace>\\\\*|[-\\\\w\\\\P{ASCII}]*)\\\\|)?(?<name>[-\\\\w\\\\P{ASCII}]+)\\\\s*(?:(?<operator>\\\\W?=)\\\\s*(?<value>.+?)\\\\s*(\\\\s(?<caseSensitive>[iIsS]))?\\\\s*)?\\\\]/gu,id:/#(?<name>[-\\\\w\\\\P{ASCII}]+)/gu,class:/\\\\.(?<name>[-\\\\w\\\\P{ASCII}]+)/gu,comma:/\\\\s*,\\\\s*/g,combinator:/\\\\s*[\\\\s>+~]\\\\s*/g,\\\"pseudo-element\\\":/::(?<name>[-\\\\w\\\\P{ASCII}]+)(?:\\\\((?<argument>¶*)\\\\))?/gu,\\\"pseudo-class\\\":/:(?<name>[-\\\\w\\\\P{ASCII}]+)(?:\\\\((?<argument>¶*)\\\\))?/gu,universal:/(?:(?<namespace>\\\\*|[-\\\\w\\\\P{ASCII}]*)\\\\|)?\\\\*/gu,type:/(?:(?<namespace>\\\\*|[-\\\\w\\\\P{ASCII}]*)\\\\|)?(?<name>[-\\\\w\\\\P{ASCII}]+)/gu},ue=new Set([\\\"combinator\\\",\\\"comma\\\"]);var fe=t=>{switch(t){case\\\"pseudo-element\\\":case\\\"pseudo-class\\\":return new RegExp(p[t].source.replace(\\\"(?<argument>\\\\xB6*)\\\",\\\"(?<argument>.*)\\\"),\\\"gu\\\");default:return p[t]}};function de(t,e){let n=0,r=\\\"\\\";for(;e<t.length;e++){let o=t[e];switch(o){case\\\"(\\\":++n;break;case\\\")\\\":--n;break}if(r+=o,n===0)return r}return r}function me(t,e=p){if(!t)return[];let n=[t];for(let[o,i]of Object.entries(e))for(let s=0;s<n.length;s++){let l=n[s];if(typeof l!=\\\"string\\\")continue;i.lastIndex=0;let a=i.exec(l);if(!a)continue;let h=a.index-1,d=[],V=a[0],H=l.slice(0,h+1);H&&d.push(H),d.push({...a.groups,type:o,content:V});let B=l.slice(h+V.length+1);B&&d.push(B),n.splice(s,1,...d)}let r=0;for(let o of n)switch(typeof o){case\\\"string\\\":throw new Error(`Unexpected sequence ${o} found at index ${r}`);case\\\"object\\\":r+=o.content.length,o.pos=[r-o.content.length,r],ue.has(o.type)&&(o.content=o.content.trim()||\\\" \\\");break}return n}var he=/(['\\\"])([^\\\\\\\\\\\\n]+?)\\\\1/g,pe=/\\\\\\\\./g;function G(t,e=p){if(t=t.trim(),t===\\\"\\\")return[];let n=[];t=t.replace(pe,(i,s)=>(n.push({value:i,offset:s}),\\\"\\\\uE000\\\".repeat(i.length))),t=t.replace(he,(i,s,l,a)=>(n.push({value:i,offset:a}),`${s}${\\\"\\\\uE001\\\".repeat(l.length)}${s}`));{let i=0,s;for(;(s=t.indexOf(\\\"(\\\",i))>-1;){let l=de(t,s);n.push({value:l,offset:s}),t=`${t.substring(0,s)}(${\\\"\\\\xB6\\\".repeat(l.length-2)})${t.substring(s+l.length)}`,i=s+l.length}}let r=me(t,e),o=new Set;for(let i of n.reverse())for(let s of r){let{offset:l,value:a}=i;if(!(s.pos[0]<=l&&l+a.length<=s.pos[1]))continue;let{content:h}=s,d=l-s.pos[0];s.content=h.slice(0,d)+a+h.slice(d+a.length),s.content!==h&&o.add(s)}for(let i of o){let s=fe(i.type);if(!s)throw new Error(`Unknown token type: ${i.type}`);s.lastIndex=0;let l=s.exec(i.content);if(!l)throw new Error(`Unable to parse content for ${i.type}: ${i.content}`);Object.assign(i,l.groups)}return r}function*x(t,e){switch(t.type){case\\\"list\\\":for(let n of t.list)yield*x(n,t);break;case\\\"complex\\\":yield*x(t.left,t),yield*x(t.right,t);break;case\\\"compound\\\":yield*t.list.map(n=>[n,t]);break;default:yield[t,e]}}function y(t){let e;return Array.isArray(t)?e=t:e=[...x(t)].map(([n])=>n),e.map(n=>n.content).join(\\\"\\\")}p.combinator=/\\\\s*(>>>>?|[\\\\s>+~])\\\\s*/g;var ye=/\\\\\\\\[\\\\s\\\\S]/g,ge=t=>t.length<=1?t:((t[0]==='\\\"'||t[0]===\\\"'\\\")&&t.endsWith(t[0])&&(t=t.slice(1,-1)),t.replace(ye,e=>e[1]));function K(t){let e=!0,n=G(t);if(n.length===0)return[[],e];let r=[],o=[r],i=[o],s=[];for(let l of n){switch(l.type){case\\\"combinator\\\":switch(l.content){case\\\">>>\\\":e=!1,s.length&&(r.push(y(s)),s.splice(0)),r=[],o.push(\\\">>>\\\"),o.push(r);continue;case\\\">>>>\\\":e=!1,s.length&&(r.push(y(s)),s.splice(0)),r=[],o.push(\\\">>>>\\\"),o.push(r);continue}break;case\\\"pseudo-element\\\":if(!l.name.startsWith(\\\"-p-\\\"))break;e=!1,s.length&&(r.push(y(s)),s.splice(0)),r.push({name:l.name.slice(3),value:ge(l.argument??\\\"\\\")});continue;case\\\"comma\\\":s.length&&(r.push(y(s)),s.splice(0)),r=[],o=[r],i.push(o);continue}s.push(l)}return s.length&&r.push(y(s)),[i,e]}var _={};u(_,{textQuerySelectorAll:()=>S});var we=new Set([\\\"checkbox\\\",\\\"image\\\",\\\"radio\\\"]),Se=t=>t instanceof HTMLSelectElement||t instanceof HTMLTextAreaElement||t instanceof HTMLInputElement&&!we.has(t.type),be=new Set([\\\"SCRIPT\\\",\\\"STYLE\\\"]),w=t=>!be.has(t.nodeName)&&!document.head?.contains(t),D=new WeakMap,J=t=>{for(;t;)D.delete(t),t instanceof ShadowRoot?t=t.host:t=t.parentNode},Y=new WeakSet,Te=new MutationObserver(t=>{for(let e of t)J(e.target)}),g=t=>{let e=D.get(t);if(e||(e={full:\\\"\\\",immediate:[]},!w(t)))return e;let n=\\\"\\\";if(Se(t))e.full=t.value,e.immediate.push(t.value),t.addEventListener(\\\"input\\\",r=>{J(r.target)},{once:!0,capture:!0});else{for(let r=t.firstChild;r;r=r.nextSibling){if(r.nodeType===Node.TEXT_NODE){e.full+=r.nodeValue??\\\"\\\",n+=r.nodeValue??\\\"\\\";continue}n&&e.immediate.push(n),n=\\\"\\\",r.nodeType===Node.ELEMENT_NODE&&(e.full+=g(r).full)}n&&e.immediate.push(n),t instanceof Element&&t.shadowRoot&&(e.full+=g(t.shadowRoot).full),Y.has(t)||(Te.observe(t,{childList:!0,characterData:!0,subtree:!0}),Y.add(t))}return D.set(t,e),e};var S=function*(t,e){let n=!1;for(let r of t.childNodes)if(r instanceof Element&&w(r)){let o;r.shadowRoot?o=S(r.shadowRoot,e):o=S(r,e);for(let i of o)yield i,n=!0}n||t instanceof Element&&w(t)&&g(t).full.includes(e)&&(yield t)};var L={};u(L,{checkVisibility:()=>Pe,pierce:()=>N,pierceAll:()=>Q});var Ee=[\\\"hidden\\\",\\\"collapse\\\"],Pe=(t,e)=>{if(!t)return e===!1;if(e===void 0)return t;let n=t.nodeType===Node.TEXT_NODE?t.parentElement:t,r=window.getComputedStyle(n),o=r&&!Ee.includes(r.visibility)&&!xe(n);return e===o?t:!1};function xe(t){let e=t.getBoundingClientRect();return e.width===0||e.height===0}var Ne=t=>\\\"shadowRoot\\\"in t&&t.shadowRoot instanceof ShadowRoot;function*N(t){Ne(t)?yield t.shadowRoot:yield t}function*Q(t){t=N(t).next().value,yield t;let e=[document.createTreeWalker(t,NodeFilter.SHOW_ELEMENT)];for(let n of e){let r;for(;r=n.nextNode();)r.shadowRoot&&(yield r.shadowRoot,e.push(document.createTreeWalker(r.shadowRoot,NodeFilter.SHOW_ELEMENT)))}}var j={};u(j,{xpathQuerySelectorAll:()=>$});var $=function*(t,e,n=-1){let o=(t.ownerDocument||document).evaluate(e,t,null,XPathResult.ORDERED_NODE_ITERATOR_TYPE),i=[],s;for(;(s=o.iterateNext())&&(i.push(s),!(n&&i.length===n)););for(let l=0;l<i.length;l++)s=i[l],yield s,delete i[l]};var ve=/[-\\\\w\\\\P{ASCII}*]/,Z=t=>\\\"querySelectorAll\\\"in t,v=class extends Error{constructor(e,n){super(`${e} is not a valid selector: ${n}`)}},U=class{#e;#r;#n=[];#t=void 0;elements;constructor(e,n,r){this.elements=[e],this.#e=n,this.#r=r,this.#o()}async run(){if(typeof this.#t==\\\"string\\\")switch(this.#t.trimStart()){case\\\":scope\\\":this.#o();break}for(;this.#t!==void 0;this.#o()){let e=this.#t,n=this.#e;typeof e==\\\"string\\\"?e[0]&&ve.test(e[0])?this.elements=c.flatMap(this.elements,async function*(r){Z(r)&&(yield*r.querySelectorAll(e))}):this.elements=c.flatMap(this.elements,async function*(r){if(!r.parentElement){if(!Z(r))return;yield*r.querySelectorAll(e);return}let o=0;for(let i of r.parentElement.children)if(++o,i===r)break;yield*r.parentElement.querySelectorAll(`:scope>:nth-child(${o})${e}`)}):this.elements=c.flatMap(this.elements,async function*(r){switch(e.name){case\\\"text\\\":yield*S(r,e.value);break;case\\\"xpath\\\":yield*$(r,e.value);break;case\\\"aria\\\":yield*I(r,e.value);break;default:let o=O.get(e.name);if(!o)throw new v(n,`Unknown selector type: ${e.name}`);yield*o.querySelectorAll(r,e.value)}})}}#o(){if(this.#n.length!==0){this.#t=this.#n.shift();return}if(this.#r.length===0){this.#t=void 0;return}let e=this.#r.shift();switch(e){case\\\">>>>\\\":{this.elements=c.flatMap(this.elements,N),this.#o();break}case\\\">>>\\\":{this.elements=c.flatMap(this.elements,Q),this.#o();break}default:this.#n=e,this.#o();break}}},W=class{#e=new WeakMap;calculate(e,n=[]){if(e===null)return n;e instanceof ShadowRoot&&(e=e.host);let r=this.#e.get(e);if(r)return[...r,...n];let o=0;for(let s=e.previousSibling;s;s=s.previousSibling)++o;let i=this.calculate(e.parentNode,[o]);return this.#e.set(e,i),[...i,...n]}},ee=(t,e)=>{if(t.length+e.length===0)return 0;let[n=-1,...r]=t,[o=-1,...i]=e;return n===o?ee(r,i):n<o?-1:1},Ae=async function*(t){let e=new Set;for await(let r of t)e.add(r);let n=new W;yield*[...e.values()].map(r=>[r,n.calculate(r)]).sort(([,r],[,o])=>ee(r,o)).map(([r])=>r)},te=function(t,e){let n,r;try{[n,r]=K(e)}catch{return t.querySelectorAll(e)}if(r)return t.querySelectorAll(e);if(n.some(o=>{let i=0;return o.some(s=>(typeof s==\\\"string\\\"?++i:i=0,i>1))}))throw new v(e,\\\"Multiple deep combinators found in sequence.\\\");return Ae(c.flatMap(n,o=>{let i=new U(t,e,o);return i.run(),i.elements}))},Ce=async function(t,e){for await(let n of te(t,e))return n;return null};var Ie=Object.freeze({...k,...M,...q,...F,..._,...L,...j,Deferred:f,createFunction:z,createTextContent:g,IntervalPoller:P,isSuitableNodeForTextMatching:w,MutationPoller:T,RAFPoller:E}),ke=Ie;\\n/**\\n * @license\\n * Copyright 2018 Google Inc.\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n/**\\n * @license\\n * Copyright 2024 Google Inc.\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n/**\\n * @license\\n * Copyright 2023 Google Inc.\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n/**\\n * @license\\n * Copyright 2022 Google Inc.\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n/**\\n * @license\\n * Copyright 2020 Google Inc.\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\";\n", "/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {source as injectedSource} from '../generated/injected.js';\n\n/**\n * @internal\n */\nexport class ScriptInjector {\n  #updated = false;\n  #amendments = new Set<string>();\n\n  // Appends a statement of the form `(PuppeteerUtil) => {...}`.\n  append(statement: string): void {\n    this.#update(() => {\n      this.#amendments.add(statement);\n    });\n  }\n\n  pop(statement: string): void {\n    this.#update(() => {\n      this.#amendments.delete(statement);\n    });\n  }\n\n  inject(inject: (script: string) => void, force = false): void {\n    if (this.#updated || force) {\n      inject(this.#get());\n    }\n    this.#updated = false;\n  }\n\n  #update(callback: () => void): void {\n    callback();\n    this.#updated = true;\n  }\n\n  #get(): string {\n    return `(() => {\n      const module = {};\n      ${injectedSource}\n      ${[...this.#amendments]\n        .map(statement => {\n          return `(${statement})(module.exports.default);`;\n        })\n        .join('')}\n      return module.exports.default;\n    })()`;\n  }\n}\n\n/**\n * @internal\n */\nexport const scriptInjector = new ScriptInjector();\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type PuppeteerUtil from '../injected/injected.js';\nimport {assert} from '../util/assert.js';\nimport {interpolateFunction, stringifyFunction} from '../util/Function.js';\n\nimport {\n  QueryHandler,\n  type QuerySelector,\n  type QuerySelectorAll,\n} from './QueryHandler.js';\nimport {scriptInjector} from './ScriptInjector.js';\n\n/**\n * @public\n */\nexport interface CustomQueryHandler {\n  /**\n   * Searches for a {@link https://developer.mozilla.org/en-US/docs/Web/API/Node | Node} matching the given `selector` from {@link https://developer.mozilla.org/en-US/docs/Web/API/Node | node}.\n   */\n  queryOne?: (node: Node, selector: string) => Node | null;\n  /**\n   * Searches for some {@link https://developer.mozilla.org/en-US/docs/Web/API/Node | Nodes} matching the given `selector` from {@link https://developer.mozilla.org/en-US/docs/Web/API/Node | node}.\n   */\n  queryAll?: (node: Node, selector: string) => Iterable<Node>;\n}\n\n/**\n * The registry of {@link CustomQueryHandler | custom query handlers}.\n *\n * @example\n *\n * ```ts\n * Puppeteer.customQueryHandlers.register('lit', { … });\n * const aHandle = await page.$('lit/…');\n * ```\n *\n * @internal\n */\nexport class CustomQueryHandlerRegistry {\n  #handlers = new Map<\n    string,\n    [registerScript: string, Handler: typeof QueryHandler]\n  >();\n\n  get(name: string): typeof QueryHandler | undefined {\n    const handler = this.#handlers.get(name);\n    return handler ? handler[1] : undefined;\n  }\n\n  /**\n   * Registers a {@link CustomQueryHandler | custom query handler}.\n   *\n   * @remarks\n   * After registration, the handler can be used everywhere where a selector is\n   * expected by prepending the selection string with `<name>/`. The name is\n   * only allowed to consist of lower- and upper case latin letters.\n   *\n   * @example\n   *\n   * ```ts\n   * Puppeteer.customQueryHandlers.register('lit', { … });\n   * const aHandle = await page.$('lit/…');\n   * ```\n   *\n   * @param name - Name to register under.\n   * @param queryHandler - {@link CustomQueryHandler | Custom query handler} to\n   * register.\n   */\n  register(name: string, handler: CustomQueryHandler): void {\n    assert(\n      !this.#handlers.has(name),\n      `Cannot register over existing handler: ${name}`\n    );\n    assert(\n      /^[a-zA-Z]+$/.test(name),\n      `Custom query handler names may only contain [a-zA-Z]`\n    );\n    assert(\n      handler.queryAll || handler.queryOne,\n      `At least one query method must be implemented.`\n    );\n\n    const Handler = class extends QueryHandler {\n      static override querySelectorAll: QuerySelectorAll = interpolateFunction(\n        (node, selector, PuppeteerUtil) => {\n          return PuppeteerUtil.customQuerySelectors\n            .get(PLACEHOLDER('name'))!\n            .querySelectorAll(node, selector);\n        },\n        {name: JSON.stringify(name)}\n      );\n      static override querySelector: QuerySelector = interpolateFunction(\n        (node, selector, PuppeteerUtil) => {\n          return PuppeteerUtil.customQuerySelectors\n            .get(PLACEHOLDER('name'))!\n            .querySelector(node, selector);\n        },\n        {name: JSON.stringify(name)}\n      );\n    };\n    const registerScript = interpolateFunction(\n      (PuppeteerUtil: PuppeteerUtil) => {\n        PuppeteerUtil.customQuerySelectors.register(PLACEHOLDER('name'), {\n          queryAll: PLACEHOLDER('queryAll'),\n          queryOne: PLACEHOLDER('queryOne'),\n        });\n      },\n      {\n        name: JSON.stringify(name),\n        queryAll: handler.queryAll\n          ? stringifyFunction(handler.queryAll)\n          : String(undefined),\n        queryOne: handler.queryOne\n          ? stringifyFunction(handler.queryOne)\n          : String(undefined),\n      }\n    ).toString();\n\n    this.#handlers.set(name, [registerScript, Handler]);\n    scriptInjector.append(registerScript);\n  }\n\n  /**\n   * Unregisters the {@link CustomQueryHandler | custom query handler} for the\n   * given name.\n   *\n   * @throws `Error` if there is no handler under the given name.\n   */\n  unregister(name: string): void {\n    const handler = this.#handlers.get(name);\n    if (!handler) {\n      throw new Error(`Cannot unregister unknown handler: ${name}`);\n    }\n    scriptInjector.pop(handler[0]);\n    this.#handlers.delete(name);\n  }\n\n  /**\n   * Gets the names of all {@link CustomQueryHandler | custom query handlers}.\n   */\n  names(): string[] {\n    return [...this.#handlers.keys()];\n  }\n\n  /**\n   * Unregisters all custom query handlers.\n   */\n  clear(): void {\n    for (const [registerScript] of this.#handlers) {\n      scriptInjector.pop(registerScript);\n    }\n    this.#handlers.clear();\n  }\n}\n\n/**\n * @internal\n */\nexport const customQueryHandlers = new CustomQueryHandlerRegistry();\n\n/**\n * @deprecated Import {@link Puppeteer} and use the static method\n * {@link Puppeteer.registerCustomQueryHandler}\n *\n * @public\n */\nexport function registerCustomQueryHandler(\n  name: string,\n  handler: CustomQueryHandler\n): void {\n  customQueryHandlers.register(name, handler);\n}\n\n/**\n * @deprecated Import {@link Puppeteer} and use the static method\n * {@link Puppeteer.unregisterCustomQueryHandler}\n *\n * @public\n */\nexport function unregisterCustomQueryHandler(name: string): void {\n  customQueryHandlers.unregister(name);\n}\n\n/**\n * @deprecated Import {@link Puppeteer} and use the static method\n * {@link Puppeteer.customQueryHandlerNames}\n *\n * @public\n */\nexport function customQueryHandlerNames(): string[] {\n  return customQueryHandlers.names();\n}\n\n/**\n * @deprecated Import {@link Puppeteer} and use the static method\n * {@link Puppeteer.clearCustomQueryHandlers}\n *\n * @public\n */\nexport function clearCustomQueryHandlers(): void {\n  customQueryHandlers.clear();\n}\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type PuppeteerUtil from '../injected/injected.js';\n\nimport {QueryHandler} from './QueryHandler.js';\n\n/**\n * @internal\n */\nexport class PierceQueryHandler extends QueryHandler {\n  static override querySelector = (\n    element: Node,\n    selector: string,\n    {pierceQuerySelector}: PuppeteerUtil\n  ): Node | null => {\n    return pierceQuerySelector(element, selector);\n  };\n  static override querySelectorAll = (\n    element: Node,\n    selector: string,\n    {pierceQuerySelectorAll}: PuppeteerUtil\n  ): Iterable<Node> => {\n    return pierceQuerySelectorAll(element, selector);\n  };\n}\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  QueryHandler,\n  type QuerySelector,\n  type QuerySelectorAll,\n} from './QueryHandler.js';\n\n/**\n * @internal\n */\nexport class PQueryHandler extends QueryHandler {\n  static override querySelectorAll: QuerySelectorAll = (\n    element,\n    selector,\n    {pQuerySelectorAll}\n  ) => {\n    return pQuerySelectorAll(element, selector);\n  };\n  static override querySelector: QuerySelector = (\n    element,\n    selector,\n    {pQuerySelector}\n  ) => {\n    return pQuerySelector(element, selector);\n  };\n}\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {QueryHandler, type QuerySelectorAll} from './QueryHandler.js';\n\n/**\n * @internal\n */\nexport class TextQueryHandler extends QueryHandler {\n  static override querySelectorAll: QuerySelectorAll = (\n    element,\n    selector,\n    {textQuerySelectorAll}\n  ) => {\n    return textQuerySelectorAll(element, selector);\n  };\n}\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  QueryHandler,\n  type QuerySelectorAll,\n  type QuerySelector,\n} from './QueryHandler.js';\n\n/**\n * @internal\n */\nexport class XPathQueryHandler extends QueryHandler {\n  static override querySelectorAll: QuerySelectorAll = (\n    element,\n    selector,\n    {xpathQuerySelectorAll}\n  ) => {\n    return xpathQuerySelectorAll(element, selector);\n  };\n\n  static override querySelector: QuerySelector = (\n    element: Node,\n    selector: string,\n    {xpathQuerySelectorAll}\n  ) => {\n    for (const result of xpathQuerySelectorAll(element, selector, 1)) {\n      return result;\n    }\n    return null;\n  };\n}\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ARIAQueryHandler} from '../cdp/AriaQueryHandler.js';\n\nimport {customQueryHandlers} from './CustomQueryHandler.js';\nimport {PierceQueryHandler} from './PierceQueryHandler.js';\nimport {PQueryHandler} from './PQueryHandler.js';\nimport type {QueryHandler} from './QueryHandler.js';\nimport {TextQueryHandler} from './TextQueryHandler.js';\nimport {XPathQueryHandler} from './XPathQueryHandler.js';\n\nconst BUILTIN_QUERY_HANDLERS = {\n  aria: ARIAQueryHandler,\n  pierce: PierceQueryHandler,\n  xpath: XPathQueryHandler,\n  text: TextQueryHandler,\n} as const;\n\nconst QUERY_SEPARATORS = ['=', '/'];\n\n/**\n * @internal\n */\nexport function getQueryHandlerAndSelector(selector: string): {\n  updatedSelector: string;\n  QueryHandler: typeof QueryHandler;\n} {\n  for (const handlerMap of [\n    customQueryHandlers.names().map(name => {\n      return [name, customQueryHandlers.get(name)!] as const;\n    }),\n    Object.entries(BUILTIN_QUERY_HANDLERS),\n  ]) {\n    for (const [name, QueryHandler] of handlerMap) {\n      for (const separator of QUERY_SEPARATORS) {\n        const prefix = `${name}${separator}`;\n        if (selector.startsWith(prefix)) {\n          selector = selector.slice(prefix.length);\n          return {updatedSelector: selector, QueryHandler};\n        }\n      }\n    }\n  }\n  return {updatedSelector: selector, QueryHandler: PQueryHandler};\n}\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type Protocol from 'devtools-protocol';\n\nimport type {EvaluateFuncWith, HandleFor, HandleOr} from '../common/types.js';\nimport {debugError, withSourcePuppeteerURLIfNone} from '../common/util.js';\nimport {moveable, throwIfDisposed} from '../util/decorators.js';\nimport {disposeSymbol, asyncDisposeSymbol} from '../util/disposable.js';\n\nimport type {ElementHandle} from './ElementHandle.js';\nimport type {Realm} from './Realm.js';\n\n/**\n * Represents a reference to a JavaScript object. Instances can be created using\n * {@link Page.evaluateHandle}.\n *\n * Handles prevent the referenced JavaScript object from being garbage-collected\n * unless the handle is purposely {@link JSHandle.dispose | disposed}. JSHandles\n * are auto-disposed when their associated frame is navigated away or the parent\n * context gets destroyed.\n *\n * Handles can be used as arguments for any evaluation function such as\n * {@link Page.$eval}, {@link Page.evaluate}, and {@link Page.evaluateHandle}.\n * They are resolved to their referenced object.\n *\n * @example\n *\n * ```ts\n * const windowHandle = await page.evaluateHandle(() => window);\n * ```\n *\n * @public\n */\n@moveable\nexport abstract class JSHandle<T = unknown> {\n  declare move: () => this;\n\n  /**\n   * Used for nominally typing {@link JSHandle}.\n   */\n  declare _?: T;\n\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * @internal\n   */\n  abstract get realm(): Realm;\n\n  /**\n   * @internal\n   */\n  abstract get disposed(): boolean;\n\n  /**\n   * Evaluates the given function with the current handle as its first argument.\n   */\n  async evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<T, Params> = EvaluateFuncWith<T, Params>,\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(\n      this.evaluate.name,\n      pageFunction\n    );\n    return await this.realm.evaluate(pageFunction, this, ...args);\n  }\n\n  /**\n   * Evaluates the given function with the current handle as its first argument.\n   *\n   */\n  async evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<T, Params> = EvaluateFuncWith<T, Params>,\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(\n      this.evaluateHandle.name,\n      pageFunction\n    );\n    return await this.realm.evaluateHandle(pageFunction, this, ...args);\n  }\n\n  /**\n   * Fetches a single property from the referenced object.\n   */\n  getProperty<K extends keyof T>(\n    propertyName: HandleOr<K>\n  ): Promise<HandleFor<T[K]>>;\n  getProperty(propertyName: string): Promise<JSHandle<unknown>>;\n\n  /**\n   * @internal\n   */\n  @throwIfDisposed()\n  async getProperty<K extends keyof T>(\n    propertyName: HandleOr<K>\n  ): Promise<HandleFor<T[K]>> {\n    return await this.evaluateHandle((object, propertyName) => {\n      return object[propertyName as K];\n    }, propertyName);\n  }\n\n  /**\n   * Gets a map of handles representing the properties of the current handle.\n   *\n   * @example\n   *\n   * ```ts\n   * const listHandle = await page.evaluateHandle(() => document.body.children);\n   * const properties = await listHandle.getProperties();\n   * const children = [];\n   * for (const property of properties.values()) {\n   *   const element = property.asElement();\n   *   if (element) {\n   *     children.push(element);\n   *   }\n   * }\n   * children; // holds elementHandles to all children of document.body\n   * ```\n   */\n  @throwIfDisposed()\n  async getProperties(): Promise<Map<string, JSHandle>> {\n    const propertyNames = await this.evaluate(object => {\n      const enumerableProperties = [];\n      const descriptors = Object.getOwnPropertyDescriptors(object);\n      for (const propertyName in descriptors) {\n        if (descriptors[propertyName]?.enumerable) {\n          enumerableProperties.push(propertyName);\n        }\n      }\n      return enumerableProperties;\n    });\n    const map = new Map<string, JSHandle>();\n    const results = await Promise.all(\n      propertyNames.map(key => {\n        return this.getProperty(key);\n      })\n    );\n    for (const [key, value] of Object.entries(propertyNames)) {\n      using handle = results[key as any];\n      if (handle) {\n        map.set(value, handle.move());\n      }\n    }\n    return map;\n  }\n\n  /**\n   * A vanilla object representing the serializable portions of the\n   * referenced object.\n   * @throws Throws if the object cannot be serialized due to circularity.\n   *\n   * @remarks\n   * If the object has a `toJSON` function, it **will not** be called.\n   */\n  abstract jsonValue(): Promise<T>;\n\n  /**\n   * Either `null` or the handle itself if the handle is an\n   * instance of {@link ElementHandle}.\n   */\n  abstract asElement(): ElementHandle<Node> | null;\n\n  /**\n   * Releases the object referenced by the handle for garbage collection.\n   */\n  abstract dispose(): Promise<void>;\n\n  /**\n   * Returns a string representation of the JSHandle.\n   *\n   * @remarks\n   * Useful during debugging.\n   */\n  abstract toString(): string;\n\n  /**\n   * @internal\n   */\n  abstract get id(): string | undefined;\n\n  /**\n   * Provides access to the\n   * {@link https://chromedevtools.github.io/devtools-protocol/tot/Runtime/#type-RemoteObject | Protocol.Runtime.RemoteObject}\n   * backing this handle.\n   */\n  abstract remoteObject(): Protocol.Runtime.RemoteObject;\n\n  /** @internal */\n  [disposeSymbol](): void {\n    return void this.dispose().catch(debugError);\n  }\n\n  /** @internal */\n  [asyncDisposeSymbol](): Promise<void> {\n    return this.dispose();\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {Protocol} from 'devtools-protocol';\n\nimport type {Frame} from '../api/Frame.js';\nimport {getQueryHandlerAndSelector} from '../common/GetQueryHandler.js';\nimport {LazyArg} from '../common/LazyArg.js';\nimport type {\n  AwaitableIterable,\n  ElementFor,\n  EvaluateFuncWith,\n  HandleFor,\n  HandleOr,\n  NodeFor,\n} from '../common/types.js';\nimport type {KeyInput} from '../common/USKeyboardLayout.js';\nimport {isString, withSourcePuppeteerURLIfNone} from '../common/util.js';\nimport {assert} from '../util/assert.js';\nimport {AsyncIterableUtil} from '../util/AsyncIterableUtil.js';\nimport {throwIfDisposed} from '../util/decorators.js';\n\nimport {_isElementHandle} from './ElementHandleSymbol.js';\nimport type {\n  KeyboardTypeOptions,\n  KeyPressOptions,\n  MouseClickOptions,\n} from './Input.js';\nimport {JSHandle} from './JSHandle.js';\nimport type {ScreenshotOptions, WaitForSelectorOptions} from './Page.js';\n\n/**\n * @public\n */\nexport type Quad = [Point, Point, Point, Point];\n\n/**\n * @public\n */\nexport interface BoxModel {\n  content: Quad;\n  padding: Quad;\n  border: Quad;\n  margin: Quad;\n  width: number;\n  height: number;\n}\n\n/**\n * @public\n */\nexport interface BoundingBox extends Point {\n  /**\n   * the width of the element in pixels.\n   */\n  width: number;\n  /**\n   * the height of the element in pixels.\n   */\n  height: number;\n}\n\n/**\n * @public\n */\nexport interface Offset {\n  /**\n   * x-offset for the clickable point relative to the top-left corner of the border box.\n   */\n  x: number;\n  /**\n   * y-offset for the clickable point relative to the top-left corner of the border box.\n   */\n  y: number;\n}\n\n/**\n * @public\n */\nexport interface ClickOptions extends MouseClickOptions {\n  /**\n   * Offset for the clickable point relative to the top-left corner of the border box.\n   */\n  offset?: Offset;\n}\n\n/**\n * @public\n */\nexport interface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * @public\n */\nexport interface ElementScreenshotOptions extends ScreenshotOptions {\n  /**\n   * @defaultValue `true`\n   */\n  scrollIntoView?: boolean;\n}\n\n/**\n * ElementHandle represents an in-page DOM element.\n *\n * @remarks\n * ElementHandles can be created with the {@link Page.$} method.\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://example.com');\n *   const hrefElement = await page.$('a');\n *   await hrefElement.click();\n *   // ...\n * })();\n * ```\n *\n * ElementHandle prevents the DOM element from being garbage-collected unless the\n * handle is {@link JSHandle.dispose | disposed}. ElementHandles are auto-disposed\n * when their origin frame gets navigated.\n *\n * ElementHandle instances can be used as arguments in {@link Page.$eval} and\n * {@link Page.evaluate} methods.\n *\n * If you're using TypeScript, ElementHandle takes a generic argument that\n * denotes the type of element the handle is holding within. For example, if you\n * have a handle to a `<select>` element, you can type it as\n * `ElementHandle<HTMLSelectElement>` and you get some nicer type checks.\n *\n * @public\n */\nexport abstract class ElementHandle<\n  ElementType extends Node = Element,\n> extends JSHandle<ElementType> {\n  /**\n   * @internal\n   */\n  declare [_isElementHandle]: boolean;\n\n  /**\n   * @internal\n   * Cached isolatedHandle to prevent\n   * trying to adopt it multiple times\n   */\n  isolatedHandle?: typeof this;\n\n  /**\n   * A given method will have it's `this` replaced with an isolated version of\n   * `this` when decorated with this decorator.\n   *\n   * All changes of isolated `this` are reflected on the actual `this`.\n   *\n   * @internal\n   */\n  static bindIsolatedHandle<This extends ElementHandle<Node>>(\n    target: (this: This, ...args: any[]) => Promise<any>,\n    _: unknown\n  ): typeof target {\n    return async function (...args) {\n      // If the handle is already isolated, then we don't need to adopt it\n      // again.\n      if (this.realm === this.frame.isolatedRealm()) {\n        return await target.call(this, ...args);\n      }\n      let adoptedThis: This;\n      if (this['isolatedHandle']) {\n        adoptedThis = this['isolatedHandle'];\n      } else {\n        this['isolatedHandle'] = adoptedThis = await this.frame\n          .isolatedRealm()\n          .adoptHandle(this);\n      }\n      const result = await target.call(adoptedThis, ...args);\n      // If the function returns `adoptedThis`, then we return `this`.\n      if (result === adoptedThis) {\n        return this;\n      }\n      // If the function returns a handle, transfer it into the current realm.\n      if (result instanceof JSHandle) {\n        return await this.realm.transferHandle(result);\n      }\n      // If the function returns an array of handlers, transfer them into the\n      // current realm.\n      if (Array.isArray(result)) {\n        await Promise.all(\n          result.map(async (item, index, result) => {\n            if (item instanceof JSHandle) {\n              result[index] = await this.realm.transferHandle(item);\n            }\n          })\n        );\n      }\n      if (result instanceof Map) {\n        await Promise.all(\n          [...result.entries()].map(async ([key, value]) => {\n            if (value instanceof JSHandle) {\n              result.set(key, await this.realm.transferHandle(value));\n            }\n          })\n        );\n      }\n      return result;\n    };\n  }\n\n  /**\n   * @internal\n   */\n  protected readonly handle;\n\n  /**\n   * @internal\n   */\n  constructor(handle: JSHandle<ElementType>) {\n    super();\n    this.handle = handle;\n    this[_isElementHandle] = true;\n  }\n\n  /**\n   * @internal\n   */\n  override get id(): string | undefined {\n    return this.handle.id;\n  }\n\n  /**\n   * @internal\n   */\n  override get disposed(): boolean {\n    return this.handle.disposed;\n  }\n\n  /**\n   * @internal\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  override async getProperty<K extends keyof ElementType>(\n    propertyName: HandleOr<K>\n  ): Promise<HandleFor<ElementType[K]>> {\n    return await this.handle.getProperty(propertyName);\n  }\n\n  /**\n   * @internal\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  override async getProperties(): Promise<Map<string, JSHandle>> {\n    return await this.handle.getProperties();\n  }\n\n  /**\n   * @internal\n   */\n  override async evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<ElementType, Params> = EvaluateFuncWith<\n      ElementType,\n      Params\n    >,\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(\n      this.evaluate.name,\n      pageFunction\n    );\n    return await this.handle.evaluate(pageFunction, ...args);\n  }\n\n  /**\n   * @internal\n   */\n  override async evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<ElementType, Params> = EvaluateFuncWith<\n      ElementType,\n      Params\n    >,\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(\n      this.evaluateHandle.name,\n      pageFunction\n    );\n    return await this.handle.evaluateHandle(pageFunction, ...args);\n  }\n\n  /**\n   * @internal\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  override async jsonValue(): Promise<ElementType> {\n    return await this.handle.jsonValue();\n  }\n\n  /**\n   * @internal\n   */\n  override toString(): string {\n    return this.handle.toString();\n  }\n\n  /**\n   * @internal\n   */\n  override remoteObject(): Protocol.Runtime.RemoteObject {\n    return this.handle.remoteObject();\n  }\n\n  /**\n   * @internal\n   */\n  override dispose(): Promise<void> {\n    return this.handle.dispose();\n  }\n\n  /**\n   * @internal\n   */\n  override asElement(): ElementHandle<ElementType> {\n    return this;\n  }\n\n  /**\n   * Frame corresponding to the current handle.\n   */\n  abstract get frame(): Frame;\n\n  /**\n   * Queries the current element for an element matching the given selector.\n   *\n   * @param selector - The selector to query for.\n   * @returns A {@link ElementHandle | element handle} to the first element\n   * matching the given selector. Otherwise, `null`.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async $<Selector extends string>(\n    selector: Selector\n  ): Promise<ElementHandle<NodeFor<Selector>> | null> {\n    const {updatedSelector, QueryHandler} =\n      getQueryHandlerAndSelector(selector);\n    return (await QueryHandler.queryOne(\n      this,\n      updatedSelector\n    )) as ElementHandle<NodeFor<Selector>> | null;\n  }\n\n  /**\n   * Queries the current element for all elements matching the given selector.\n   *\n   * @param selector - The selector to query for.\n   * @returns An array of {@link ElementHandle | element handles} that point to\n   * elements matching the given selector.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async $$<Selector extends string>(\n    selector: Selector\n  ): Promise<Array<ElementHandle<NodeFor<Selector>>>> {\n    const {updatedSelector, QueryHandler} =\n      getQueryHandlerAndSelector(selector);\n    return await (AsyncIterableUtil.collect(\n      QueryHandler.queryAll(this, updatedSelector)\n    ) as Promise<Array<ElementHandle<NodeFor<Selector>>>>);\n  }\n\n  /**\n   * Runs the given function on the first element matching the given selector in\n   * the current element.\n   *\n   * If the given function returns a promise, then this method will wait till\n   * the promise resolves.\n   *\n   * @example\n   *\n   * ```ts\n   * const tweetHandle = await page.$('.tweet');\n   * expect(await tweetHandle.$eval('.like', node => node.innerText)).toBe(\n   *   '100'\n   * );\n   * expect(await tweetHandle.$eval('.retweets', node => node.innerText)).toBe(\n   *   '10'\n   * );\n   * ```\n   *\n   * @param selector - The selector to query for.\n   * @param pageFunction - The function to be evaluated in this element's page's\n   * context. The first element matching the selector will be passed in as the\n   * first argument.\n   * @param args - Additional arguments to pass to `pageFunction`.\n   * @returns A promise to the result of the function.\n   */\n  async $eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<NodeFor<Selector>, Params> = EvaluateFuncWith<\n      NodeFor<Selector>,\n      Params\n    >,\n  >(\n    selector: Selector,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$eval.name, pageFunction);\n    using elementHandle = await this.$(selector);\n    if (!elementHandle) {\n      throw new Error(\n        `Error: failed to find element matching selector \"${selector}\"`\n      );\n    }\n    return await elementHandle.evaluate(pageFunction, ...args);\n  }\n\n  /**\n   * Runs the given function on an array of elements matching the given selector\n   * in the current element.\n   *\n   * If the given function returns a promise, then this method will wait till\n   * the promise resolves.\n   *\n   * @example\n   * HTML:\n   *\n   * ```html\n   * <div class=\"feed\">\n   *   <div class=\"tweet\">Hello!</div>\n   *   <div class=\"tweet\">Hi!</div>\n   * </div>\n   * ```\n   *\n   * JavaScript:\n   *\n   * ```ts\n   * const feedHandle = await page.$('.feed');\n   * expect(\n   *   await feedHandle.$$eval('.tweet', nodes => nodes.map(n => n.innerText))\n   * ).toEqual(['Hello!', 'Hi!']);\n   * ```\n   *\n   * @param selector - The selector to query for.\n   * @param pageFunction - The function to be evaluated in the element's page's\n   * context. An array of elements matching the given selector will be passed to\n   * the function as its first argument.\n   * @param args - Additional arguments to pass to `pageFunction`.\n   * @returns A promise to the result of the function.\n   */\n  async $$eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<\n      Array<NodeFor<Selector>>,\n      Params\n    > = EvaluateFuncWith<Array<NodeFor<Selector>>, Params>,\n  >(\n    selector: Selector,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$$eval.name, pageFunction);\n    const results = await this.$$(selector);\n    using elements = await this.evaluateHandle(\n      (_, ...elements) => {\n        return elements;\n      },\n      ...results\n    );\n    const [result] = await Promise.all([\n      elements.evaluate(pageFunction, ...args),\n      ...results.map(results => {\n        return results.dispose();\n      }),\n    ]);\n    return result;\n  }\n\n  /**\n   * Wait for an element matching the given selector to appear in the current\n   * element.\n   *\n   * Unlike {@link Frame.waitForSelector}, this method does not work across\n   * navigations or if the element is detached from DOM.\n   *\n   * @example\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   let currentURL;\n   *   page\n   *     .mainFrame()\n   *     .waitForSelector('img')\n   *     .then(() => console.log('First URL with image: ' + currentURL));\n   *\n   *   for (currentURL of [\n   *     'https://example.com',\n   *     'https://google.com',\n   *     'https://bbc.com',\n   *   ]) {\n   *     await page.goto(currentURL);\n   *   }\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param selector - The selector to query and wait for.\n   * @param options - Options for customizing waiting behavior.\n   * @returns An element matching the given selector.\n   * @throws Throws if an element matching the given selector doesn't appear.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async waitForSelector<Selector extends string>(\n    selector: Selector,\n    options: WaitForSelectorOptions = {}\n  ): Promise<ElementHandle<NodeFor<Selector>> | null> {\n    const {updatedSelector, QueryHandler} =\n      getQueryHandlerAndSelector(selector);\n    return (await QueryHandler.waitFor(\n      this,\n      updatedSelector,\n      options\n    )) as ElementHandle<NodeFor<Selector>> | null;\n  }\n\n  async #checkVisibility(visibility: boolean): Promise<boolean> {\n    return await this.evaluate(\n      async (element, PuppeteerUtil, visibility) => {\n        return Boolean(PuppeteerUtil.checkVisibility(element, visibility));\n      },\n      LazyArg.create(context => {\n        return context.puppeteerUtil;\n      }),\n      visibility\n    );\n  }\n\n  /**\n   * Checks if an element is visible using the same mechanism as\n   * {@link ElementHandle.waitForSelector}.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async isVisible(): Promise<boolean> {\n    return await this.#checkVisibility(true);\n  }\n\n  /**\n   * Checks if an element is hidden using the same mechanism as\n   * {@link ElementHandle.waitForSelector}.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async isHidden(): Promise<boolean> {\n    return await this.#checkVisibility(false);\n  }\n\n  /**\n   * Converts the current handle to the given element type.\n   *\n   * @example\n   *\n   * ```ts\n   * const element: ElementHandle<Element> = await page.$(\n   *   '.class-name-of-anchor'\n   * );\n   * // DO NOT DISPOSE `element`, this will be always be the same handle.\n   * const anchor: ElementHandle<HTMLAnchorElement> =\n   *   await element.toElement('a');\n   * ```\n   *\n   * @param tagName - The tag name of the desired element type.\n   * @throws An error if the handle does not match. **The handle will not be\n   * automatically disposed.**\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async toElement<\n    K extends keyof HTMLElementTagNameMap | keyof SVGElementTagNameMap,\n  >(tagName: K): Promise<HandleFor<ElementFor<K>>> {\n    const isMatchingTagName = await this.evaluate((node, tagName) => {\n      return node.nodeName === tagName.toUpperCase();\n    }, tagName);\n    if (!isMatchingTagName) {\n      throw new Error(`Element is not a(n) \\`${tagName}\\` element`);\n    }\n    return this as unknown as HandleFor<ElementFor<K>>;\n  }\n\n  /**\n   * Resolves the frame associated with the element, if any. Always exists for\n   * HTMLIFrameElements.\n   */\n  abstract contentFrame(this: ElementHandle<HTMLIFrameElement>): Promise<Frame>;\n  abstract contentFrame(): Promise<Frame | null>;\n\n  /**\n   * Returns the middle point within an element unless a specific offset is provided.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async clickablePoint(offset?: Offset): Promise<Point> {\n    const box = await this.#clickableBox();\n    if (!box) {\n      throw new Error('Node is either not clickable or not an Element');\n    }\n    if (offset !== undefined) {\n      return {\n        x: box.x + offset.x,\n        y: box.y + offset.y,\n      };\n    }\n    return {\n      x: box.x + box.width / 2,\n      y: box.y + box.height / 2,\n    };\n  }\n\n  /**\n   * This method scrolls element into view if needed, and then\n   * uses {@link Page.mouse} to hover over the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async hover(this: ElementHandle<Element>): Promise<void> {\n    await this.scrollIntoViewIfNeeded();\n    const {x, y} = await this.clickablePoint();\n    await this.frame.page().mouse.move(x, y);\n  }\n\n  /**\n   * This method scrolls element into view if needed, and then\n   * uses {@link Page.mouse} to click in the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async click(\n    this: ElementHandle<Element>,\n    options: Readonly<ClickOptions> = {}\n  ): Promise<void> {\n    await this.scrollIntoViewIfNeeded();\n    const {x, y} = await this.clickablePoint(options.offset);\n    await this.frame.page().mouse.click(x, y, options);\n  }\n\n  /**\n   * Drags an element over the given element or point.\n   *\n   * @returns DEPRECATED. When drag interception is enabled, the drag payload is\n   * returned.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async drag(\n    this: ElementHandle<Element>,\n    target: Point | ElementHandle<Element>\n  ): Promise<Protocol.Input.DragData | void> {\n    await this.scrollIntoViewIfNeeded();\n    const page = this.frame.page();\n    if (page.isDragInterceptionEnabled()) {\n      const source = await this.clickablePoint();\n      if (target instanceof ElementHandle) {\n        target = await target.clickablePoint();\n      }\n      return await page.mouse.drag(source, target);\n    }\n    try {\n      if (!page._isDragging) {\n        page._isDragging = true;\n        await this.hover();\n        await page.mouse.down();\n      }\n      if (target instanceof ElementHandle) {\n        await target.hover();\n      } else {\n        await page.mouse.move(target.x, target.y);\n      }\n    } catch (error) {\n      page._isDragging = false;\n      throw error;\n    }\n  }\n\n  /**\n   * @deprecated Do not use. `dragenter` will automatically be performed during dragging.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async dragEnter(\n    this: ElementHandle<Element>,\n    data: Protocol.Input.DragData = {items: [], dragOperationsMask: 1}\n  ): Promise<void> {\n    const page = this.frame.page();\n    await this.scrollIntoViewIfNeeded();\n    const target = await this.clickablePoint();\n    await page.mouse.dragEnter(target, data);\n  }\n\n  /**\n   * @deprecated Do not use. `dragover` will automatically be performed during dragging.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async dragOver(\n    this: ElementHandle<Element>,\n    data: Protocol.Input.DragData = {items: [], dragOperationsMask: 1}\n  ): Promise<void> {\n    const page = this.frame.page();\n    await this.scrollIntoViewIfNeeded();\n    const target = await this.clickablePoint();\n    await page.mouse.dragOver(target, data);\n  }\n\n  /**\n   * Drops the given element onto the current one.\n   */\n  async drop(\n    this: ElementHandle<Element>,\n    element: ElementHandle<Element>\n  ): Promise<void>;\n\n  /**\n   * @deprecated No longer supported.\n   */\n  async drop(\n    this: ElementHandle<Element>,\n    data?: Protocol.Input.DragData\n  ): Promise<void>;\n\n  /**\n   * @internal\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async drop(\n    this: ElementHandle<Element>,\n    dataOrElement: ElementHandle<Element> | Protocol.Input.DragData = {\n      items: [],\n      dragOperationsMask: 1,\n    }\n  ): Promise<void> {\n    const page = this.frame.page();\n    if ('items' in dataOrElement) {\n      await this.scrollIntoViewIfNeeded();\n      const destination = await this.clickablePoint();\n      await page.mouse.drop(destination, dataOrElement);\n    } else {\n      // Note if the rest errors, we still want dragging off because the errors\n      // is most likely something implying the mouse is no longer dragging.\n      await dataOrElement.drag(this);\n      page._isDragging = false;\n      await page.mouse.up();\n    }\n  }\n\n  /**\n   * @deprecated Use `ElementHandle.drop` instead.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async dragAndDrop(\n    this: ElementHandle<Element>,\n    target: ElementHandle<Node>,\n    options?: {delay: number}\n  ): Promise<void> {\n    const page = this.frame.page();\n    assert(\n      page.isDragInterceptionEnabled(),\n      'Drag Interception is not enabled!'\n    );\n    await this.scrollIntoViewIfNeeded();\n    const startPoint = await this.clickablePoint();\n    const targetPoint = await target.clickablePoint();\n    await page.mouse.dragAndDrop(startPoint, targetPoint, options);\n  }\n\n  /**\n   * Triggers a `change` and `input` event once all the provided options have been\n   * selected. If there's no `<select>` element matching `selector`, the method\n   * throws an error.\n   *\n   * @example\n   *\n   * ```ts\n   * handle.select('blue'); // single selection\n   * handle.select('red', 'green', 'blue'); // multiple selections\n   * ```\n   *\n   * @param values - Values of options to select. If the `<select>` has the\n   * `multiple` attribute, all values are considered, otherwise only the first\n   * one is taken into account.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async select(...values: string[]): Promise<string[]> {\n    for (const value of values) {\n      assert(\n        isString(value),\n        'Values must be strings. Found value \"' +\n          value +\n          '\" of type \"' +\n          typeof value +\n          '\"'\n      );\n    }\n\n    return await this.evaluate((element, vals): string[] => {\n      const values = new Set(vals);\n      if (!(element instanceof HTMLSelectElement)) {\n        throw new Error('Element is not a <select> element.');\n      }\n\n      const selectedValues = new Set<string>();\n      if (!element.multiple) {\n        for (const option of element.options) {\n          option.selected = false;\n        }\n        for (const option of element.options) {\n          if (values.has(option.value)) {\n            option.selected = true;\n            selectedValues.add(option.value);\n            break;\n          }\n        }\n      } else {\n        for (const option of element.options) {\n          option.selected = values.has(option.value);\n          if (option.selected) {\n            selectedValues.add(option.value);\n          }\n        }\n      }\n      element.dispatchEvent(new Event('input', {bubbles: true}));\n      element.dispatchEvent(new Event('change', {bubbles: true}));\n      return [...selectedValues.values()];\n    }, values);\n  }\n\n  /**\n   * Sets the value of an\n   * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input | input element}\n   * to the given file paths.\n   *\n   * @remarks This will not validate whether the file paths exists. Also, if a\n   * path is relative, then it is resolved against the\n   * {@link https://nodejs.org/api/process.html#process_process_cwd | current working directory}.\n   * For locals script connecting to remote chrome environments, paths must be\n   * absolute.\n   */\n  abstract uploadFile(\n    this: ElementHandle<HTMLInputElement>,\n    ...paths: string[]\n  ): Promise<void>;\n\n  /**\n   * @internal\n   */\n  abstract queryAXTree(\n    name?: string,\n    role?: string\n  ): AwaitableIterable<ElementHandle<Node>>;\n\n  /**\n   * This method scrolls element into view if needed, and then uses\n   * {@link Touchscreen.tap} to tap in the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async tap(this: ElementHandle<Element>): Promise<void> {\n    await this.scrollIntoViewIfNeeded();\n    const {x, y} = await this.clickablePoint();\n    await this.frame.page().touchscreen.tap(x, y);\n  }\n\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async touchStart(this: ElementHandle<Element>): Promise<void> {\n    await this.scrollIntoViewIfNeeded();\n    const {x, y} = await this.clickablePoint();\n    await this.frame.page().touchscreen.touchStart(x, y);\n  }\n\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async touchMove(this: ElementHandle<Element>): Promise<void> {\n    await this.scrollIntoViewIfNeeded();\n    const {x, y} = await this.clickablePoint();\n    await this.frame.page().touchscreen.touchMove(x, y);\n  }\n\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async touchEnd(this: ElementHandle<Element>): Promise<void> {\n    await this.scrollIntoViewIfNeeded();\n    await this.frame.page().touchscreen.touchEnd();\n  }\n\n  /**\n   * Calls {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus | focus} on the element.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async focus(): Promise<void> {\n    await this.evaluate(element => {\n      if (!(element instanceof HTMLElement)) {\n        throw new Error('Cannot focus non-HTMLElement');\n      }\n      return element.focus();\n    });\n  }\n\n  /**\n   * Focuses the element, and then sends a `keydown`, `keypress`/`input`, and\n   * `keyup` event for each character in the text.\n   *\n   * To press a special key, like `Control` or `ArrowDown`,\n   * use {@link ElementHandle.press}.\n   *\n   * @example\n   *\n   * ```ts\n   * await elementHandle.type('Hello'); // Types instantly\n   * await elementHandle.type('World', {delay: 100}); // Types slower, like a user\n   * ```\n   *\n   * @example\n   * An example of typing into a text field and then submitting the form:\n   *\n   * ```ts\n   * const elementHandle = await page.$('input');\n   * await elementHandle.type('some text');\n   * await elementHandle.press('Enter');\n   * ```\n   *\n   * @param options - Delay in milliseconds. Defaults to 0.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async type(\n    text: string,\n    options?: Readonly<KeyboardTypeOptions>\n  ): Promise<void> {\n    await this.focus();\n    await this.frame.page().keyboard.type(text, options);\n  }\n\n  /**\n   * Focuses the element, and then uses {@link Keyboard.down} and {@link Keyboard.up}.\n   *\n   * @remarks\n   * If `key` is a single character and no modifier keys besides `Shift`\n   * are being held down, a `keypress`/`input` event will also be generated.\n   * The `text` option can be specified to force an input event to be generated.\n   *\n   * **NOTE** Modifier keys DO affect `elementHandle.press`. Holding down `Shift`\n   * will type the text in upper case.\n   *\n   * @param key - Name of key to press, such as `ArrowLeft`.\n   * See {@link KeyInput} for a list of all key names.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async press(\n    key: KeyInput,\n    options?: Readonly<KeyPressOptions>\n  ): Promise<void> {\n    await this.focus();\n    await this.frame.page().keyboard.press(key, options);\n  }\n\n  async #clickableBox(): Promise<BoundingBox | null> {\n    const boxes = await this.evaluate(element => {\n      if (!(element instanceof Element)) {\n        return null;\n      }\n      return [...element.getClientRects()].map(rect => {\n        return {x: rect.x, y: rect.y, width: rect.width, height: rect.height};\n      });\n    });\n    if (!boxes?.length) {\n      return null;\n    }\n    await this.#intersectBoundingBoxesWithFrame(boxes);\n    let frame = this.frame;\n    let parentFrame: Frame | null | undefined;\n    while ((parentFrame = frame?.parentFrame())) {\n      using handle = await frame.frameElement();\n      if (!handle) {\n        throw new Error('Unsupported frame type');\n      }\n      const parentBox = await handle.evaluate(element => {\n        // Element is not visible.\n        if (element.getClientRects().length === 0) {\n          return null;\n        }\n        const rect = element.getBoundingClientRect();\n        const style = window.getComputedStyle(element);\n        return {\n          left:\n            rect.left +\n            parseInt(style.paddingLeft, 10) +\n            parseInt(style.borderLeftWidth, 10),\n          top:\n            rect.top +\n            parseInt(style.paddingTop, 10) +\n            parseInt(style.borderTopWidth, 10),\n        };\n      });\n      if (!parentBox) {\n        return null;\n      }\n      for (const box of boxes) {\n        box.x += parentBox.left;\n        box.y += parentBox.top;\n      }\n      await handle.#intersectBoundingBoxesWithFrame(boxes);\n      frame = parentFrame;\n    }\n    const box = boxes.find(box => {\n      return box.width >= 1 && box.height >= 1;\n    });\n    if (!box) {\n      return null;\n    }\n    return {\n      x: box.x,\n      y: box.y,\n      height: box.height,\n      width: box.width,\n    };\n  }\n\n  async #intersectBoundingBoxesWithFrame(boxes: BoundingBox[]) {\n    const {documentWidth, documentHeight} = await this.frame\n      .isolatedRealm()\n      .evaluate(() => {\n        return {\n          documentWidth: document.documentElement.clientWidth,\n          documentHeight: document.documentElement.clientHeight,\n        };\n      });\n    for (const box of boxes) {\n      intersectBoundingBox(box, documentWidth, documentHeight);\n    }\n  }\n\n  /**\n   * This method returns the bounding box of the element (relative to the main frame),\n   * or `null` if the element is {@link https://drafts.csswg.org/css-display-4/#box-generation | not part of the layout}\n   * (example: `display: none`).\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async boundingBox(): Promise<BoundingBox | null> {\n    const box = await this.evaluate(element => {\n      if (!(element instanceof Element)) {\n        return null;\n      }\n      // Element is not visible.\n      if (element.getClientRects().length === 0) {\n        return null;\n      }\n      const rect = element.getBoundingClientRect();\n      return {x: rect.x, y: rect.y, width: rect.width, height: rect.height};\n    });\n    if (!box) {\n      return null;\n    }\n    const offset = await this.#getTopLeftCornerOfFrame();\n    if (!offset) {\n      return null;\n    }\n    return {\n      x: box.x + offset.x,\n      y: box.y + offset.y,\n      height: box.height,\n      width: box.width,\n    };\n  }\n\n  /**\n   * This method returns boxes of the element,\n   * or `null` if the element is {@link https://drafts.csswg.org/css-display-4/#box-generation | not part of the layout}\n   * (example: `display: none`).\n   *\n   * @remarks\n   *\n   * Boxes are represented as an array of points;\n   * Each Point is an object `{x, y}`. Box points are sorted clock-wise.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async boxModel(): Promise<BoxModel | null> {\n    const model = await this.evaluate(element => {\n      if (!(element instanceof Element)) {\n        return null;\n      }\n      // Element is not visible.\n      if (element.getClientRects().length === 0) {\n        return null;\n      }\n      const rect = element.getBoundingClientRect();\n      const style = window.getComputedStyle(element);\n      const offsets = {\n        padding: {\n          left: parseInt(style.paddingLeft, 10),\n          top: parseInt(style.paddingTop, 10),\n          right: parseInt(style.paddingRight, 10),\n          bottom: parseInt(style.paddingBottom, 10),\n        },\n        margin: {\n          left: -parseInt(style.marginLeft, 10),\n          top: -parseInt(style.marginTop, 10),\n          right: -parseInt(style.marginRight, 10),\n          bottom: -parseInt(style.marginBottom, 10),\n        },\n        border: {\n          left: parseInt(style.borderLeft, 10),\n          top: parseInt(style.borderTop, 10),\n          right: parseInt(style.borderRight, 10),\n          bottom: parseInt(style.borderBottom, 10),\n        },\n      };\n      const border: Quad = [\n        {x: rect.left, y: rect.top},\n        {x: rect.left + rect.width, y: rect.top},\n        {x: rect.left + rect.width, y: rect.top + rect.bottom},\n        {x: rect.left, y: rect.top + rect.bottom},\n      ];\n      const padding = transformQuadWithOffsets(border, offsets.border);\n      const content = transformQuadWithOffsets(padding, offsets.padding);\n      const margin = transformQuadWithOffsets(border, offsets.margin);\n      return {\n        content,\n        padding,\n        border,\n        margin,\n        width: rect.width,\n        height: rect.height,\n      };\n\n      function transformQuadWithOffsets(\n        quad: Quad,\n        offsets: {top: number; left: number; right: number; bottom: number}\n      ): Quad {\n        return [\n          {\n            x: quad[0].x + offsets.left,\n            y: quad[0].y + offsets.top,\n          },\n          {\n            x: quad[1].x - offsets.right,\n            y: quad[1].y + offsets.top,\n          },\n          {\n            x: quad[2].x - offsets.right,\n            y: quad[2].y - offsets.bottom,\n          },\n          {\n            x: quad[3].x + offsets.left,\n            y: quad[3].y - offsets.bottom,\n          },\n        ];\n      }\n    });\n    if (!model) {\n      return null;\n    }\n    const offset = await this.#getTopLeftCornerOfFrame();\n    if (!offset) {\n      return null;\n    }\n    for (const attribute of [\n      'content',\n      'padding',\n      'border',\n      'margin',\n    ] as const) {\n      for (const point of model[attribute]) {\n        point.x += offset.x;\n        point.y += offset.y;\n      }\n    }\n    return model;\n  }\n\n  async #getTopLeftCornerOfFrame() {\n    const point = {x: 0, y: 0};\n    let frame = this.frame;\n    let parentFrame: Frame | null | undefined;\n    while ((parentFrame = frame?.parentFrame())) {\n      using handle = await frame.frameElement();\n      if (!handle) {\n        throw new Error('Unsupported frame type');\n      }\n      const parentBox = await handle.evaluate(element => {\n        // Element is not visible.\n        if (element.getClientRects().length === 0) {\n          return null;\n        }\n        const rect = element.getBoundingClientRect();\n        const style = window.getComputedStyle(element);\n        return {\n          left:\n            rect.left +\n            parseInt(style.paddingLeft, 10) +\n            parseInt(style.borderLeftWidth, 10),\n          top:\n            rect.top +\n            parseInt(style.paddingTop, 10) +\n            parseInt(style.borderTopWidth, 10),\n        };\n      });\n      if (!parentBox) {\n        return null;\n      }\n      point.x += parentBox.left;\n      point.y += parentBox.top;\n      frame = parentFrame;\n    }\n    return point;\n  }\n\n  /**\n   * This method scrolls element into view if needed, and then uses\n   * {@link Page.(screenshot:2) } to take a screenshot of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  async screenshot(\n    options: Readonly<ScreenshotOptions> & {encoding: 'base64'}\n  ): Promise<string>;\n  async screenshot(options?: Readonly<ScreenshotOptions>): Promise<Buffer>;\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async screenshot(\n    this: ElementHandle<Element>,\n    options: Readonly<ElementScreenshotOptions> = {}\n  ): Promise<string | Buffer> {\n    const {scrollIntoView = true, clip} = options;\n\n    const page = this.frame.page();\n\n    // Only scroll the element into view if the user wants it.\n    if (scrollIntoView) {\n      await this.scrollIntoViewIfNeeded();\n    }\n    const elementClip = await this.#nonEmptyVisibleBoundingBox();\n\n    const [pageLeft, pageTop] = await this.evaluate(() => {\n      if (!window.visualViewport) {\n        throw new Error('window.visualViewport is not supported.');\n      }\n      return [\n        window.visualViewport.pageLeft,\n        window.visualViewport.pageTop,\n      ] as const;\n    });\n    elementClip.x += pageLeft;\n    elementClip.y += pageTop;\n    if (clip) {\n      elementClip.x += clip.x;\n      elementClip.y += clip.y;\n      elementClip.height = clip.height;\n      elementClip.width = clip.width;\n    }\n\n    return await page.screenshot({...options, clip: elementClip});\n  }\n\n  async #nonEmptyVisibleBoundingBox() {\n    const box = await this.boundingBox();\n    assert(box, 'Node is either not visible or not an HTMLElement');\n    assert(box.width !== 0, 'Node has 0 width.');\n    assert(box.height !== 0, 'Node has 0 height.');\n    return box;\n  }\n\n  /**\n   * @internal\n   */\n  protected async assertConnectedElement(): Promise<void> {\n    const error = await this.evaluate(async element => {\n      if (!element.isConnected) {\n        return 'Node is detached from document';\n      }\n      if (element.nodeType !== Node.ELEMENT_NODE) {\n        return 'Node is not of type HTMLElement';\n      }\n      return;\n    });\n\n    if (error) {\n      throw new Error(error);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  protected async scrollIntoViewIfNeeded(\n    this: ElementHandle<Element>\n  ): Promise<void> {\n    if (\n      await this.isIntersectingViewport({\n        threshold: 1,\n      })\n    ) {\n      return;\n    }\n    await this.scrollIntoView();\n  }\n\n  /**\n   * Resolves to true if the element is visible in the current viewport. If an\n   * element is an SVG, we check if the svg owner element is in the viewport\n   * instead. See https://crbug.com/963246.\n   *\n   * @param options - Threshold for the intersection between 0 (no intersection) and 1\n   * (full intersection). Defaults to 1.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async isIntersectingViewport(\n    this: ElementHandle<Element>,\n    options: {\n      threshold?: number;\n    } = {}\n  ): Promise<boolean> {\n    await this.assertConnectedElement();\n    // eslint-disable-next-line rulesdir/use-using -- Returns `this`.\n    const handle = await this.#asSVGElementHandle();\n    using target = handle && (await handle.#getOwnerSVGElement());\n    return await ((target ?? this) as ElementHandle<Element>).evaluate(\n      async (element, threshold) => {\n        const visibleRatio = await new Promise<number>(resolve => {\n          const observer = new IntersectionObserver(entries => {\n            resolve(entries[0]!.intersectionRatio);\n            observer.disconnect();\n          });\n          observer.observe(element);\n        });\n        return threshold === 1 ? visibleRatio === 1 : visibleRatio > threshold;\n      },\n      options.threshold ?? 0\n    );\n  }\n\n  /**\n   * Scrolls the element into view using either the automation protocol client\n   * or by calling element.scrollIntoView.\n   */\n  @throwIfDisposed()\n  @ElementHandle.bindIsolatedHandle\n  async scrollIntoView(this: ElementHandle<Element>): Promise<void> {\n    await this.assertConnectedElement();\n    await this.evaluate(async (element): Promise<void> => {\n      element.scrollIntoView({\n        block: 'center',\n        inline: 'center',\n        behavior: 'instant',\n      });\n    });\n  }\n\n  /**\n   * Returns true if an element is an SVGElement (included svg, path, rect\n   * etc.).\n   */\n  async #asSVGElementHandle(\n    this: ElementHandle<Element>\n  ): Promise<ElementHandle<SVGElement> | null> {\n    if (\n      await this.evaluate(element => {\n        return element instanceof SVGElement;\n      })\n    ) {\n      return this as ElementHandle<SVGElement>;\n    } else {\n      return null;\n    }\n  }\n\n  async #getOwnerSVGElement(\n    this: ElementHandle<SVGElement>\n  ): Promise<ElementHandle<SVGSVGElement>> {\n    // SVGSVGElement.ownerSVGElement === null.\n    return await this.evaluateHandle(element => {\n      if (element instanceof SVGSVGElement) {\n        return element;\n      }\n      return element.ownerSVGElement!;\n    });\n  }\n\n  /**\n   * If the element is a form input, you can use {@link ElementHandle.autofill}\n   * to test if the form is compatible with the browser's autofill\n   * implementation. Throws an error if the form cannot be autofilled.\n   *\n   * @remarks\n   *\n   * Currently, Puppeteer supports auto-filling credit card information only and\n   * in Chrome in the new headless and headful modes only.\n   *\n   * ```ts\n   * // Select an input on the credit card form.\n   * const name = await page.waitForSelector('form #name');\n   * // Trigger autofill with the desired data.\n   * await name.autofill({\n   *   creditCard: {\n   *     number: '4444444444444444',\n   *     name: 'John Smith',\n   *     expiryMonth: '01',\n   *     expiryYear: '2030',\n   *     cvc: '123',\n   *   },\n   * });\n   * ```\n   */\n  abstract autofill(data: AutofillData): Promise<void>;\n}\n\n/**\n * @public\n */\nexport interface AutofillData {\n  creditCard: {\n    // See https://chromedevtools.github.io/devtools-protocol/tot/Autofill/#type-CreditCard.\n    number: string;\n    name: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvc: string;\n  };\n}\n\nfunction intersectBoundingBox(\n  box: BoundingBox,\n  width: number,\n  height: number\n): void {\n  box.width = Math.max(\n    box.x >= 0\n      ? Math.min(width - box.x, box.width)\n      : Math.min(width, box.width + box.x),\n    0\n  );\n  box.height = Math.max(\n    box.y >= 0\n      ? Math.min(height - box.y, box.height)\n      : Math.min(height, box.height + box.y),\n    0\n  );\n}\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport type {\n  Observable,\n  OperatorFunction,\n} from '../../../third_party/rxjs/rxjs.js';\nimport {\n  EMPTY,\n  catchError,\n  defaultIfEmpty,\n  defer,\n  filter,\n  first,\n  firstValueFrom,\n  from,\n  fromEvent,\n  identity,\n  ignoreElements,\n  map,\n  merge,\n  mergeMap,\n  noop,\n  pipe,\n  race,\n  raceWith,\n  retry,\n  tap,\n  throwIfEmpty,\n} from '../../../third_party/rxjs/rxjs.js';\nimport type {EventType} from '../../common/EventEmitter.js';\nimport {EventEmitter} from '../../common/EventEmitter.js';\nimport type {Awaitable, HandleFor, NodeFor} from '../../common/types.js';\nimport {debugError, timeout} from '../../common/util.js';\nimport type {\n  BoundingBox,\n  ClickOptions,\n  ElementHandle,\n} from '../ElementHandle.js';\nimport type {Frame} from '../Frame.js';\nimport type {Page} from '../Page.js';\n\n/**\n * @public\n */\nexport type VisibilityOption = 'hidden' | 'visible' | null;\n/**\n * @public\n */\nexport interface LocatorOptions {\n  /**\n   * Whether to wait for the element to be `visible` or `hidden`. `null` to\n   * disable visibility checks.\n   */\n  visibility: VisibilityOption;\n  /**\n   * Total timeout for the entire locator operation.\n   *\n   * Pass `0` to disable timeout.\n   *\n   * @defaultValue `Page.getDefaultTimeout()`\n   */\n  timeout: number;\n  /**\n   * Whether to scroll the element into viewport if not in the viewprot already.\n   * @defaultValue `true`\n   */\n  ensureElementIsInTheViewport: boolean;\n  /**\n   * Whether to wait for input elements to become enabled before the action.\n   * Applicable to `click` and `fill` actions.\n   * @defaultValue `true`\n   */\n  waitForEnabled: boolean;\n  /**\n   * Whether to wait for the element's bounding box to be same between two\n   * animation frames.\n   * @defaultValue `true`\n   */\n  waitForStableBoundingBox: boolean;\n}\n/**\n * @public\n */\nexport interface ActionOptions {\n  signal?: AbortSignal;\n}\n/**\n * @public\n */\nexport type LocatorClickOptions = ClickOptions & ActionOptions;\n/**\n * @public\n */\nexport interface LocatorScrollOptions extends ActionOptions {\n  scrollTop?: number;\n  scrollLeft?: number;\n}\n/**\n * All the events that a locator instance may emit.\n *\n * @public\n */\nexport enum LocatorEvent {\n  /**\n   * Emitted every time before the locator performs an action on the located element(s).\n   */\n  Action = 'action',\n}\n\n/**\n * @public\n */\nexport interface LocatorEvents extends Record<EventType, unknown> {\n  [LocatorEvent.Action]: undefined;\n}\n\n/**\n * Locators describe a strategy of locating objects and performing an action on\n * them. If the action fails because the object is not ready for the action, the\n * whole operation is retried. Various preconditions for a successful action are\n * checked automatically.\n *\n * @public\n */\nexport abstract class Locator<T> extends EventEmitter<LocatorEvents> {\n  /**\n   * Creates a race between multiple locators but ensures that only a single one\n   * acts.\n   *\n   * @public\n   */\n  static race<Locators extends readonly unknown[] | []>(\n    locators: Locators\n  ): Locator<AwaitedLocator<Locators[number]>> {\n    return RaceLocator.create(locators);\n  }\n\n  /**\n   * Used for nominally typing {@link Locator}.\n   */\n  declare _?: T;\n\n  /**\n   * @internal\n   */\n  protected visibility: VisibilityOption = null;\n  /**\n   * @internal\n   */\n  protected _timeout = 30000;\n  #ensureElementIsInTheViewport = true;\n  #waitForEnabled = true;\n  #waitForStableBoundingBox = true;\n\n  /**\n   * @internal\n   */\n  protected operators = {\n    conditions: (\n      conditions: Array<Action<T, never>>,\n      signal?: AbortSignal\n    ): OperatorFunction<HandleFor<T>, HandleFor<T>> => {\n      return mergeMap((handle: HandleFor<T>) => {\n        return merge(\n          ...conditions.map(condition => {\n            return condition(handle, signal);\n          })\n        ).pipe(defaultIfEmpty(handle));\n      });\n    },\n    retryAndRaceWithSignalAndTimer: <T>(\n      signal?: AbortSignal,\n      cause?: Error\n    ): OperatorFunction<T, T> => {\n      const candidates = [];\n      if (signal) {\n        candidates.push(\n          fromEvent(signal, 'abort').pipe(\n            map(() => {\n              if (signal.reason instanceof Error) {\n                signal.reason.cause = cause;\n              }\n              throw signal.reason;\n            })\n          )\n        );\n      }\n      candidates.push(timeout(this._timeout, cause));\n      return pipe(\n        retry({delay: RETRY_DELAY}),\n        raceWith<T, never[]>(...candidates)\n      );\n    },\n  };\n\n  // Determines when the locator will timeout for actions.\n  get timeout(): number {\n    return this._timeout;\n  }\n\n  setTimeout(timeout: number): Locator<T> {\n    const locator = this._clone();\n    locator._timeout = timeout;\n    return locator;\n  }\n\n  setVisibility<NodeType extends Node>(\n    this: Locator<NodeType>,\n    visibility: VisibilityOption\n  ): Locator<NodeType> {\n    const locator = this._clone();\n    locator.visibility = visibility;\n    return locator;\n  }\n\n  setWaitForEnabled<NodeType extends Node>(\n    this: Locator<NodeType>,\n    value: boolean\n  ): Locator<NodeType> {\n    const locator = this._clone();\n    locator.#waitForEnabled = value;\n    return locator;\n  }\n\n  setEnsureElementIsInTheViewport<ElementType extends Element>(\n    this: Locator<ElementType>,\n    value: boolean\n  ): Locator<ElementType> {\n    const locator = this._clone();\n    locator.#ensureElementIsInTheViewport = value;\n    return locator;\n  }\n\n  setWaitForStableBoundingBox<ElementType extends Element>(\n    this: Locator<ElementType>,\n    value: boolean\n  ): Locator<ElementType> {\n    const locator = this._clone();\n    locator.#waitForStableBoundingBox = value;\n    return locator;\n  }\n\n  /**\n   * @internal\n   */\n  copyOptions<T>(locator: Locator<T>): this {\n    this._timeout = locator._timeout;\n    this.visibility = locator.visibility;\n    this.#waitForEnabled = locator.#waitForEnabled;\n    this.#ensureElementIsInTheViewport = locator.#ensureElementIsInTheViewport;\n    this.#waitForStableBoundingBox = locator.#waitForStableBoundingBox;\n    return this;\n  }\n\n  /**\n   * If the element has a \"disabled\" property, wait for the element to be\n   * enabled.\n   */\n  #waitForEnabledIfNeeded = <ElementType extends Node>(\n    handle: HandleFor<ElementType>,\n    signal?: AbortSignal\n  ): Observable<never> => {\n    if (!this.#waitForEnabled) {\n      return EMPTY;\n    }\n    return from(\n      handle.frame.waitForFunction(\n        element => {\n          if (!(element instanceof HTMLElement)) {\n            return true;\n          }\n          const isNativeFormControl = [\n            'BUTTON',\n            'INPUT',\n            'SELECT',\n            'TEXTAREA',\n            'OPTION',\n            'OPTGROUP',\n          ].includes(element.nodeName);\n          return !isNativeFormControl || !element.hasAttribute('disabled');\n        },\n        {\n          timeout: this._timeout,\n          signal,\n        },\n        handle\n      )\n    ).pipe(ignoreElements());\n  };\n\n  /**\n   * Compares the bounding box of the element for two consecutive animation\n   * frames and waits till they are the same.\n   */\n  #waitForStableBoundingBoxIfNeeded = <ElementType extends Element>(\n    handle: HandleFor<ElementType>\n  ): Observable<never> => {\n    if (!this.#waitForStableBoundingBox) {\n      return EMPTY;\n    }\n    return defer(() => {\n      // Note we don't use waitForFunction because that relies on RAF.\n      return from(\n        handle.evaluate(element => {\n          return new Promise<[BoundingBox, BoundingBox]>(resolve => {\n            window.requestAnimationFrame(() => {\n              const rect1 = element.getBoundingClientRect();\n              window.requestAnimationFrame(() => {\n                const rect2 = element.getBoundingClientRect();\n                resolve([\n                  {\n                    x: rect1.x,\n                    y: rect1.y,\n                    width: rect1.width,\n                    height: rect1.height,\n                  },\n                  {\n                    x: rect2.x,\n                    y: rect2.y,\n                    width: rect2.width,\n                    height: rect2.height,\n                  },\n                ]);\n              });\n            });\n          });\n        })\n      );\n    }).pipe(\n      first(([rect1, rect2]) => {\n        return (\n          rect1.x === rect2.x &&\n          rect1.y === rect2.y &&\n          rect1.width === rect2.width &&\n          rect1.height === rect2.height\n        );\n      }),\n      retry({delay: RETRY_DELAY}),\n      ignoreElements()\n    );\n  };\n\n  /**\n   * Checks if the element is in the viewport and auto-scrolls it if it is not.\n   */\n  #ensureElementIsInTheViewportIfNeeded = <ElementType extends Element>(\n    handle: HandleFor<ElementType>\n  ): Observable<never> => {\n    if (!this.#ensureElementIsInTheViewport) {\n      return EMPTY;\n    }\n    return from(handle.isIntersectingViewport({threshold: 0})).pipe(\n      filter(isIntersectingViewport => {\n        return !isIntersectingViewport;\n      }),\n      mergeMap(() => {\n        return from(handle.scrollIntoView());\n      }),\n      mergeMap(() => {\n        return defer(() => {\n          return from(handle.isIntersectingViewport({threshold: 0}));\n        }).pipe(first(identity), retry({delay: RETRY_DELAY}), ignoreElements());\n      })\n    );\n  };\n\n  #click<ElementType extends Element>(\n    this: Locator<ElementType>,\n    options?: Readonly<LocatorClickOptions>\n  ): Observable<void> {\n    const signal = options?.signal;\n    const cause = new Error('Locator.click');\n    return this._wait(options).pipe(\n      this.operators.conditions(\n        [\n          this.#ensureElementIsInTheViewportIfNeeded,\n          this.#waitForStableBoundingBoxIfNeeded,\n          this.#waitForEnabledIfNeeded,\n        ],\n        signal\n      ),\n      tap(() => {\n        return this.emit(LocatorEvent.Action, undefined);\n      }),\n      mergeMap(handle => {\n        return from(handle.click(options)).pipe(\n          catchError(err => {\n            void handle.dispose().catch(debugError);\n            throw err;\n          })\n        );\n      }),\n      this.operators.retryAndRaceWithSignalAndTimer(signal, cause)\n    );\n  }\n\n  #fill<ElementType extends Element>(\n    this: Locator<ElementType>,\n    value: string,\n    options?: Readonly<ActionOptions>\n  ): Observable<void> {\n    const signal = options?.signal;\n    const cause = new Error('Locator.fill');\n    return this._wait(options).pipe(\n      this.operators.conditions(\n        [\n          this.#ensureElementIsInTheViewportIfNeeded,\n          this.#waitForStableBoundingBoxIfNeeded,\n          this.#waitForEnabledIfNeeded,\n        ],\n        signal\n      ),\n      tap(() => {\n        return this.emit(LocatorEvent.Action, undefined);\n      }),\n      mergeMap(handle => {\n        return from(\n          (handle as unknown as ElementHandle<HTMLElement>).evaluate(el => {\n            if (el instanceof HTMLSelectElement) {\n              return 'select';\n            }\n            if (el instanceof HTMLTextAreaElement) {\n              return 'typeable-input';\n            }\n            if (el instanceof HTMLInputElement) {\n              if (\n                new Set([\n                  'textarea',\n                  'text',\n                  'url',\n                  'tel',\n                  'search',\n                  'password',\n                  'number',\n                  'email',\n                ]).has(el.type)\n              ) {\n                return 'typeable-input';\n              } else {\n                return 'other-input';\n              }\n            }\n\n            if (el.isContentEditable) {\n              return 'contenteditable';\n            }\n\n            return 'unknown';\n          })\n        )\n          .pipe(\n            mergeMap(inputType => {\n              switch (inputType) {\n                case 'select':\n                  return from(handle.select(value).then(noop));\n                case 'contenteditable':\n                case 'typeable-input':\n                  return from(\n                    (\n                      handle as unknown as ElementHandle<HTMLInputElement>\n                    ).evaluate((input, newValue) => {\n                      const currentValue = input.isContentEditable\n                        ? input.innerText\n                        : input.value;\n\n                      // Clear the input if the current value does not match the filled\n                      // out value.\n                      if (\n                        newValue.length <= currentValue.length ||\n                        !newValue.startsWith(input.value)\n                      ) {\n                        if (input.isContentEditable) {\n                          input.innerText = '';\n                        } else {\n                          input.value = '';\n                        }\n                        return newValue;\n                      }\n                      const originalValue = input.isContentEditable\n                        ? input.innerText\n                        : input.value;\n\n                      // If the value is partially filled out, only type the rest. Move\n                      // cursor to the end of the common prefix.\n                      if (input.isContentEditable) {\n                        input.innerText = '';\n                        input.innerText = originalValue;\n                      } else {\n                        input.value = '';\n                        input.value = originalValue;\n                      }\n                      return newValue.substring(originalValue.length);\n                    }, value)\n                  ).pipe(\n                    mergeMap(textToType => {\n                      return from(handle.type(textToType));\n                    })\n                  );\n                case 'other-input':\n                  return from(handle.focus()).pipe(\n                    mergeMap(() => {\n                      return from(\n                        handle.evaluate((input, value) => {\n                          (input as HTMLInputElement).value = value;\n                          input.dispatchEvent(\n                            new Event('input', {bubbles: true})\n                          );\n                          input.dispatchEvent(\n                            new Event('change', {bubbles: true})\n                          );\n                        }, value)\n                      );\n                    })\n                  );\n                case 'unknown':\n                  throw new Error(`Element cannot be filled out.`);\n              }\n            })\n          )\n          .pipe(\n            catchError(err => {\n              void handle.dispose().catch(debugError);\n              throw err;\n            })\n          );\n      }),\n      this.operators.retryAndRaceWithSignalAndTimer(signal, cause)\n    );\n  }\n\n  #hover<ElementType extends Element>(\n    this: Locator<ElementType>,\n    options?: Readonly<ActionOptions>\n  ): Observable<void> {\n    const signal = options?.signal;\n    const cause = new Error('Locator.hover');\n    return this._wait(options).pipe(\n      this.operators.conditions(\n        [\n          this.#ensureElementIsInTheViewportIfNeeded,\n          this.#waitForStableBoundingBoxIfNeeded,\n        ],\n        signal\n      ),\n      tap(() => {\n        return this.emit(LocatorEvent.Action, undefined);\n      }),\n      mergeMap(handle => {\n        return from(handle.hover()).pipe(\n          catchError(err => {\n            void handle.dispose().catch(debugError);\n            throw err;\n          })\n        );\n      }),\n      this.operators.retryAndRaceWithSignalAndTimer(signal, cause)\n    );\n  }\n\n  #scroll<ElementType extends Element>(\n    this: Locator<ElementType>,\n    options?: Readonly<LocatorScrollOptions>\n  ): Observable<void> {\n    const signal = options?.signal;\n    const cause = new Error('Locator.scroll');\n    return this._wait(options).pipe(\n      this.operators.conditions(\n        [\n          this.#ensureElementIsInTheViewportIfNeeded,\n          this.#waitForStableBoundingBoxIfNeeded,\n        ],\n        signal\n      ),\n      tap(() => {\n        return this.emit(LocatorEvent.Action, undefined);\n      }),\n      mergeMap(handle => {\n        return from(\n          handle.evaluate(\n            (el, scrollTop, scrollLeft) => {\n              if (scrollTop !== undefined) {\n                el.scrollTop = scrollTop;\n              }\n              if (scrollLeft !== undefined) {\n                el.scrollLeft = scrollLeft;\n              }\n            },\n            options?.scrollTop,\n            options?.scrollLeft\n          )\n        ).pipe(\n          catchError(err => {\n            void handle.dispose().catch(debugError);\n            throw err;\n          })\n        );\n      }),\n      this.operators.retryAndRaceWithSignalAndTimer(signal, cause)\n    );\n  }\n\n  /**\n   * @internal\n   */\n  abstract _clone(): Locator<T>;\n\n  /**\n   * @internal\n   */\n  abstract _wait(options?: Readonly<ActionOptions>): Observable<HandleFor<T>>;\n\n  /**\n   * Clones the locator.\n   */\n  clone(): Locator<T> {\n    return this._clone();\n  }\n\n  /**\n   * Waits for the locator to get a handle from the page.\n   *\n   * @public\n   */\n  async waitHandle(options?: Readonly<ActionOptions>): Promise<HandleFor<T>> {\n    const cause = new Error('Locator.waitHandle');\n    return await firstValueFrom(\n      this._wait(options).pipe(\n        this.operators.retryAndRaceWithSignalAndTimer(options?.signal, cause)\n      )\n    );\n  }\n\n  /**\n   * Waits for the locator to get the serialized value from the page.\n   *\n   * Note this requires the value to be JSON-serializable.\n   *\n   * @public\n   */\n  async wait(options?: Readonly<ActionOptions>): Promise<T> {\n    using handle = await this.waitHandle(options);\n    return await handle.jsonValue();\n  }\n\n  /**\n   * Maps the locator using the provided mapper.\n   *\n   * @public\n   */\n  map<To>(mapper: Mapper<T, To>): Locator<To> {\n    return new MappedLocator(this._clone(), handle => {\n      // SAFETY: TypeScript cannot deduce the type.\n      return (handle as any).evaluateHandle(mapper);\n    });\n  }\n\n  /**\n   * Creates an expectation that is evaluated against located values.\n   *\n   * If the expectations do not match, then the locator will retry.\n   *\n   * @public\n   */\n  filter<S extends T>(predicate: Predicate<T, S>): Locator<S> {\n    return new FilteredLocator(this._clone(), async (handle, signal) => {\n      await (handle as ElementHandle<Node>).frame.waitForFunction(\n        predicate,\n        {signal, timeout: this._timeout},\n        handle\n      );\n      return true;\n    });\n  }\n\n  /**\n   * Creates an expectation that is evaluated against located handles.\n   *\n   * If the expectations do not match, then the locator will retry.\n   *\n   * @internal\n   */\n  filterHandle<S extends T>(\n    predicate: Predicate<HandleFor<T>, HandleFor<S>>\n  ): Locator<S> {\n    return new FilteredLocator(this._clone(), predicate);\n  }\n\n  /**\n   * Maps the locator using the provided mapper.\n   *\n   * @internal\n   */\n  mapHandle<To>(mapper: HandleMapper<T, To>): Locator<To> {\n    return new MappedLocator(this._clone(), mapper);\n  }\n\n  click<ElementType extends Element>(\n    this: Locator<ElementType>,\n    options?: Readonly<LocatorClickOptions>\n  ): Promise<void> {\n    return firstValueFrom(this.#click(options));\n  }\n\n  /**\n   * Fills out the input identified by the locator using the provided value. The\n   * type of the input is determined at runtime and the appropriate fill-out\n   * method is chosen based on the type. contenteditable, selector, inputs are\n   * supported.\n   */\n  fill<ElementType extends Element>(\n    this: Locator<ElementType>,\n    value: string,\n    options?: Readonly<ActionOptions>\n  ): Promise<void> {\n    return firstValueFrom(this.#fill(value, options));\n  }\n\n  hover<ElementType extends Element>(\n    this: Locator<ElementType>,\n    options?: Readonly<ActionOptions>\n  ): Promise<void> {\n    return firstValueFrom(this.#hover(options));\n  }\n\n  scroll<ElementType extends Element>(\n    this: Locator<ElementType>,\n    options?: Readonly<LocatorScrollOptions>\n  ): Promise<void> {\n    return firstValueFrom(this.#scroll(options));\n  }\n}\n\n/**\n * @internal\n */\nexport class FunctionLocator<T> extends Locator<T> {\n  static create<Ret>(\n    pageOrFrame: Page | Frame,\n    func: () => Awaitable<Ret>\n  ): Locator<Ret> {\n    return new FunctionLocator<Ret>(pageOrFrame, func).setTimeout(\n      'getDefaultTimeout' in pageOrFrame\n        ? pageOrFrame.getDefaultTimeout()\n        : pageOrFrame.page().getDefaultTimeout()\n    );\n  }\n\n  #pageOrFrame: Page | Frame;\n  #func: () => Awaitable<T>;\n\n  private constructor(pageOrFrame: Page | Frame, func: () => Awaitable<T>) {\n    super();\n\n    this.#pageOrFrame = pageOrFrame;\n    this.#func = func;\n  }\n\n  override _clone(): FunctionLocator<T> {\n    return new FunctionLocator(this.#pageOrFrame, this.#func);\n  }\n\n  _wait(options?: Readonly<ActionOptions>): Observable<HandleFor<T>> {\n    const signal = options?.signal;\n    return defer(() => {\n      return from(\n        this.#pageOrFrame.waitForFunction(this.#func, {\n          timeout: this.timeout,\n          signal,\n        })\n      );\n    }).pipe(throwIfEmpty());\n  }\n}\n\n/**\n * @public\n */\nexport type Predicate<From, To extends From = From> =\n  | ((value: From) => value is To)\n  | ((value: From) => Awaitable<boolean>);\n/**\n * @internal\n */\nexport type HandlePredicate<From, To extends From = From> =\n  | ((value: HandleFor<From>, signal?: AbortSignal) => value is HandleFor<To>)\n  | ((value: HandleFor<From>, signal?: AbortSignal) => Awaitable<boolean>);\n\n/**\n * @internal\n */\nexport abstract class DelegatedLocator<T, U> extends Locator<U> {\n  #delegate: Locator<T>;\n\n  constructor(delegate: Locator<T>) {\n    super();\n\n    this.#delegate = delegate;\n    this.copyOptions(this.#delegate);\n  }\n\n  protected get delegate(): Locator<T> {\n    return this.#delegate;\n  }\n\n  override setTimeout(timeout: number): DelegatedLocator<T, U> {\n    const locator = super.setTimeout(timeout) as DelegatedLocator<T, U>;\n    locator.#delegate = this.#delegate.setTimeout(timeout);\n    return locator;\n  }\n\n  override setVisibility<ValueType extends Node, NodeType extends Node>(\n    this: DelegatedLocator<ValueType, NodeType>,\n    visibility: VisibilityOption\n  ): DelegatedLocator<ValueType, NodeType> {\n    const locator = super.setVisibility<NodeType>(\n      visibility\n    ) as DelegatedLocator<ValueType, NodeType>;\n    locator.#delegate = locator.#delegate.setVisibility<ValueType>(visibility);\n    return locator;\n  }\n\n  override setWaitForEnabled<ValueType extends Node, NodeType extends Node>(\n    this: DelegatedLocator<ValueType, NodeType>,\n    value: boolean\n  ): DelegatedLocator<ValueType, NodeType> {\n    const locator = super.setWaitForEnabled<NodeType>(\n      value\n    ) as DelegatedLocator<ValueType, NodeType>;\n    locator.#delegate = this.#delegate.setWaitForEnabled(value);\n    return locator;\n  }\n\n  override setEnsureElementIsInTheViewport<\n    ValueType extends Element,\n    ElementType extends Element,\n  >(\n    this: DelegatedLocator<ValueType, ElementType>,\n    value: boolean\n  ): DelegatedLocator<ValueType, ElementType> {\n    const locator = super.setEnsureElementIsInTheViewport<ElementType>(\n      value\n    ) as DelegatedLocator<ValueType, ElementType>;\n    locator.#delegate = this.#delegate.setEnsureElementIsInTheViewport(value);\n    return locator;\n  }\n\n  override setWaitForStableBoundingBox<\n    ValueType extends Element,\n    ElementType extends Element,\n  >(\n    this: DelegatedLocator<ValueType, ElementType>,\n    value: boolean\n  ): DelegatedLocator<ValueType, ElementType> {\n    const locator = super.setWaitForStableBoundingBox<ElementType>(\n      value\n    ) as DelegatedLocator<ValueType, ElementType>;\n    locator.#delegate = this.#delegate.setWaitForStableBoundingBox(value);\n    return locator;\n  }\n\n  abstract override _clone(): DelegatedLocator<T, U>;\n  abstract override _wait(): Observable<HandleFor<U>>;\n}\n\n/**\n * @internal\n */\nexport class FilteredLocator<From, To extends From> extends DelegatedLocator<\n  From,\n  To\n> {\n  #predicate: HandlePredicate<From, To>;\n\n  constructor(base: Locator<From>, predicate: HandlePredicate<From, To>) {\n    super(base);\n    this.#predicate = predicate;\n  }\n\n  override _clone(): FilteredLocator<From, To> {\n    return new FilteredLocator(\n      this.delegate.clone(),\n      this.#predicate\n    ).copyOptions(this);\n  }\n\n  override _wait(options?: Readonly<ActionOptions>): Observable<HandleFor<To>> {\n    return this.delegate._wait(options).pipe(\n      mergeMap(handle => {\n        return from(\n          Promise.resolve(this.#predicate(handle, options?.signal))\n        ).pipe(\n          filter(value => {\n            return value;\n          }),\n          map(() => {\n            // SAFETY: It passed the predicate, so this is correct.\n            return handle as HandleFor<To>;\n          })\n        );\n      }),\n      throwIfEmpty()\n    );\n  }\n}\n\n/**\n * @public\n */\nexport type Mapper<From, To> = (value: From) => Awaitable<To>;\n/**\n * @internal\n */\nexport type HandleMapper<From, To> = (\n  value: HandleFor<From>,\n  signal?: AbortSignal\n) => Awaitable<HandleFor<To>>;\n/**\n * @internal\n */\nexport class MappedLocator<From, To> extends DelegatedLocator<From, To> {\n  #mapper: HandleMapper<From, To>;\n\n  constructor(base: Locator<From>, mapper: HandleMapper<From, To>) {\n    super(base);\n    this.#mapper = mapper;\n  }\n\n  override _clone(): MappedLocator<From, To> {\n    return new MappedLocator(this.delegate.clone(), this.#mapper).copyOptions(\n      this\n    );\n  }\n\n  override _wait(options?: Readonly<ActionOptions>): Observable<HandleFor<To>> {\n    return this.delegate._wait(options).pipe(\n      mergeMap(handle => {\n        return from(Promise.resolve(this.#mapper(handle, options?.signal)));\n      })\n    );\n  }\n}\n\n/**\n * @internal\n */\nexport type Action<T, U> = (\n  element: HandleFor<T>,\n  signal?: AbortSignal\n) => Observable<U>;\n/**\n * @internal\n */\nexport class NodeLocator<T extends Node> extends Locator<T> {\n  static create<Selector extends string>(\n    pageOrFrame: Page | Frame,\n    selector: Selector\n  ): Locator<NodeFor<Selector>> {\n    return new NodeLocator<NodeFor<Selector>>(pageOrFrame, selector).setTimeout(\n      'getDefaultTimeout' in pageOrFrame\n        ? pageOrFrame.getDefaultTimeout()\n        : pageOrFrame.page().getDefaultTimeout()\n    );\n  }\n\n  #pageOrFrame: Page | Frame;\n  #selector: string;\n\n  private constructor(pageOrFrame: Page | Frame, selector: string) {\n    super();\n\n    this.#pageOrFrame = pageOrFrame;\n    this.#selector = selector;\n  }\n\n  /**\n   * Waits for the element to become visible or hidden. visibility === 'visible'\n   * means that the element has a computed style, the visibility property other\n   * than 'hidden' or 'collapse' and non-empty bounding box. visibility ===\n   * 'hidden' means the opposite of that.\n   */\n  #waitForVisibilityIfNeeded = (handle: HandleFor<T>): Observable<never> => {\n    if (!this.visibility) {\n      return EMPTY;\n    }\n\n    return (() => {\n      switch (this.visibility) {\n        case 'hidden':\n          return defer(() => {\n            return from(handle.isHidden());\n          });\n        case 'visible':\n          return defer(() => {\n            return from(handle.isVisible());\n          });\n      }\n    })().pipe(first(identity), retry({delay: RETRY_DELAY}), ignoreElements());\n  };\n\n  override _clone(): NodeLocator<T> {\n    return new NodeLocator<T>(this.#pageOrFrame, this.#selector).copyOptions(\n      this\n    );\n  }\n\n  override _wait(options?: Readonly<ActionOptions>): Observable<HandleFor<T>> {\n    const signal = options?.signal;\n    return defer(() => {\n      return from(\n        this.#pageOrFrame.waitForSelector(this.#selector, {\n          visible: false,\n          timeout: this._timeout,\n          signal,\n        }) as Promise<HandleFor<T> | null>\n      );\n    }).pipe(\n      filter((value): value is NonNullable<typeof value> => {\n        return value !== null;\n      }),\n      throwIfEmpty(),\n      this.operators.conditions([this.#waitForVisibilityIfNeeded], signal)\n    );\n  }\n}\n\n/**\n * @public\n */\nexport type AwaitedLocator<T> = T extends Locator<infer S> ? S : never;\nfunction checkLocatorArray<T extends readonly unknown[] | []>(\n  locators: T\n): ReadonlyArray<Locator<AwaitedLocator<T[number]>>> {\n  for (const locator of locators) {\n    if (!(locator instanceof Locator)) {\n      throw new Error('Unknown locator for race candidate');\n    }\n  }\n  return locators as ReadonlyArray<Locator<AwaitedLocator<T[number]>>>;\n}\n/**\n * @internal\n */\nexport class RaceLocator<T> extends Locator<T> {\n  static create<T extends readonly unknown[]>(\n    locators: T\n  ): Locator<AwaitedLocator<T[number]>> {\n    const array = checkLocatorArray(locators);\n    return new RaceLocator(array);\n  }\n\n  #locators: ReadonlyArray<Locator<T>>;\n\n  constructor(locators: ReadonlyArray<Locator<T>>) {\n    super();\n    this.#locators = locators;\n  }\n\n  override _clone(): RaceLocator<T> {\n    return new RaceLocator<T>(\n      this.#locators.map(locator => {\n        return locator.clone();\n      })\n    ).copyOptions(this);\n  }\n\n  override _wait(options?: Readonly<ActionOptions>): Observable<HandleFor<T>> {\n    return race(\n      ...this.#locators.map(locator => {\n        return locator._wait(options);\n      })\n    );\n  }\n}\n\n/**\n * For observables coming from promises, a delay is needed, otherwise RxJS will\n * never yield in a permanent failure for a promise.\n *\n * We also don't want RxJS to do promise operations to often, so we bump the\n * delay up to 100ms.\n *\n * @internal\n */\nexport const RETRY_DELAY = 100;\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type Protocol from 'devtools-protocol';\n\nimport type {ClickOptions, ElementHandle} from '../api/ElementHandle.js';\nimport type {HTTPResponse} from '../api/HTTPResponse.js';\nimport type {\n  Page,\n  WaitForSelectorOptions,\n  WaitTimeoutOptions,\n} from '../api/Page.js';\nimport type {DeviceRequestPrompt} from '../cdp/DeviceRequestPrompt.js';\nimport type {PuppeteerLifeCycleEvent} from '../cdp/LifecycleWatcher.js';\nimport {EventEmitter, type EventType} from '../common/EventEmitter.js';\nimport {getQueryHandlerAndSelector} from '../common/GetQueryHandler.js';\nimport {transposeIterableHandle} from '../common/HandleIterator.js';\nimport type {\n  Awaitable,\n  EvaluateFunc,\n  EvaluateFuncWith,\n  HandleFor,\n  NodeFor,\n} from '../common/types.js';\nimport {\n  importFSPromises,\n  withSourcePuppeteerURLIfNone,\n} from '../common/util.js';\nimport {assert} from '../util/assert.js';\nimport {throwIfDisposed} from '../util/decorators.js';\n\nimport type {CDPSession} from './CDPSession.js';\nimport type {KeyboardTypeOptions} from './Input.js';\nimport {\n  FunctionLocator,\n  NodeLocator,\n  type Locator,\n} from './locators/locators.js';\nimport type {Realm} from './Realm.js';\n\n/**\n * @public\n */\nexport interface WaitForOptions {\n  /**\n   * Maximum wait time in milliseconds. Pass 0 to disable the timeout.\n   *\n   * The default value can be changed by using the\n   * {@link Page.setDefaultTimeout} or {@link Page.setDefaultNavigationTimeout}\n   * methods.\n   *\n   * @defaultValue `30000`\n   */\n  timeout?: number;\n  /**\n   * When to consider waiting succeeds. Given an array of event strings, waiting\n   * is considered to be successful after all events have been fired.\n   *\n   * @defaultValue `'load'`\n   */\n  waitUntil?: PuppeteerLifeCycleEvent | PuppeteerLifeCycleEvent[];\n  /**\n   * @internal\n   */\n  ignoreSameDocumentNavigation?: boolean;\n}\n\n/**\n * @public\n */\nexport interface GoToOptions extends WaitForOptions {\n  /**\n   * If provided, it will take preference over the referer header value set by\n   * {@link Page.setExtraHTTPHeaders | page.setExtraHTTPHeaders()}.\n   */\n  referer?: string;\n  /**\n   * If provided, it will take preference over the referer-policy header value\n   * set by {@link Page.setExtraHTTPHeaders | page.setExtraHTTPHeaders()}.\n   */\n  referrerPolicy?: string;\n}\n\n/**\n * @public\n */\nexport interface FrameWaitForFunctionOptions {\n  /**\n   * An interval at which the `pageFunction` is executed, defaults to `raf`. If\n   * `polling` is a number, then it is treated as an interval in milliseconds at\n   * which the function would be executed. If `polling` is a string, then it can\n   * be one of the following values:\n   *\n   * - `raf` - to constantly execute `pageFunction` in `requestAnimationFrame`\n   *   callback. This is the tightest polling mode which is suitable to observe\n   *   styling changes.\n   *\n   * - `mutation` - to execute `pageFunction` on every DOM mutation.\n   */\n  polling?: 'raf' | 'mutation' | number;\n  /**\n   * Maximum time to wait in milliseconds. Defaults to `30000` (30 seconds).\n   * Pass `0` to disable the timeout. Puppeteer's default timeout can be changed\n   * using {@link Page.setDefaultTimeout}.\n   */\n  timeout?: number;\n  /**\n   * A signal object that allows you to cancel a waitForFunction call.\n   */\n  signal?: AbortSignal;\n}\n\n/**\n * @public\n */\nexport interface FrameAddScriptTagOptions {\n  /**\n   * URL of the script to be added.\n   */\n  url?: string;\n  /**\n   * Path to a JavaScript file to be injected into the frame.\n   *\n   * @remarks\n   * If `path` is a relative path, it is resolved relative to the current\n   * working directory (`process.cwd()` in Node.js).\n   */\n  path?: string;\n  /**\n   * JavaScript to be injected into the frame.\n   */\n  content?: string;\n  /**\n   * Sets the `type` of the script. Use `module` in order to load an ES2015 module.\n   */\n  type?: string;\n  /**\n   * Sets the `id` of the script.\n   */\n  id?: string;\n}\n\n/**\n * @public\n */\nexport interface FrameAddStyleTagOptions {\n  /**\n   * the URL of the CSS file to be added.\n   */\n  url?: string;\n  /**\n   * The path to a CSS file to be injected into the frame.\n   * @remarks\n   * If `path` is a relative path, it is resolved relative to the current\n   * working directory (`process.cwd()` in Node.js).\n   */\n  path?: string;\n  /**\n   * Raw CSS content to be injected into the frame.\n   */\n  content?: string;\n}\n\n/**\n * @public\n */\nexport interface FrameEvents extends Record<EventType, unknown> {\n  /** @internal */\n  [FrameEvent.FrameNavigated]: Protocol.Page.NavigationType;\n  /** @internal */\n  [FrameEvent.FrameSwapped]: undefined;\n  /** @internal */\n  [FrameEvent.LifecycleEvent]: undefined;\n  /** @internal */\n  [FrameEvent.FrameNavigatedWithinDocument]: undefined;\n  /** @internal */\n  [FrameEvent.FrameDetached]: Frame;\n  /** @internal */\n  [FrameEvent.FrameSwappedByActivation]: undefined;\n}\n\n/**\n * We use symbols to prevent external parties listening to these events.\n * They are internal to Puppeteer.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace FrameEvent {\n  export const FrameNavigated = Symbol('Frame.FrameNavigated');\n  export const FrameSwapped = Symbol('Frame.FrameSwapped');\n  export const LifecycleEvent = Symbol('Frame.LifecycleEvent');\n  export const FrameNavigatedWithinDocument = Symbol(\n    'Frame.FrameNavigatedWithinDocument'\n  );\n  export const FrameDetached = Symbol('Frame.FrameDetached');\n  export const FrameSwappedByActivation = Symbol(\n    'Frame.FrameSwappedByActivation'\n  );\n}\n\n/**\n * @internal\n */\nexport const throwIfDetached = throwIfDisposed<Frame>(frame => {\n  return `Attempted to use detached Frame '${frame._id}'.`;\n});\n\n/**\n * Represents a DOM frame.\n *\n * To understand frames, you can think of frames as `<iframe>` elements. Just\n * like iframes, frames can be nested, and when JavaScript is executed in a\n * frame, the JavaScript does not effect frames inside the ambient frame the\n * JavaScript executes in.\n *\n * @example\n * At any point in time, {@link Page | pages} expose their current frame\n * tree via the {@link Page.mainFrame} and {@link Frame.childFrames} methods.\n *\n * @example\n * An example of dumping frame tree:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://www.google.com/chrome/browser/canary.html');\n *   dumpFrameTree(page.mainFrame(), '');\n *   await browser.close();\n *\n *   function dumpFrameTree(frame, indent) {\n *     console.log(indent + frame.url());\n *     for (const child of frame.childFrames()) {\n *       dumpFrameTree(child, indent + '  ');\n *     }\n *   }\n * })();\n * ```\n *\n * @example\n * An example of getting text from an iframe element:\n *\n * ```ts\n * const frame = page.frames().find(frame => frame.name() === 'myframe');\n * const text = await frame.$eval('.selector', element => element.textContent);\n * console.log(text);\n * ```\n *\n * @remarks\n * Frame lifecycles are controlled by three events that are all dispatched on\n * the parent {@link Frame.page | page}:\n *\n * - {@link PageEvent.FrameAttached}\n * - {@link PageEvent.FrameNavigated}\n * - {@link PageEvent.FrameDetached}\n *\n * @public\n */\nexport abstract class Frame extends EventEmitter<FrameEvents> {\n  /**\n   * @internal\n   */\n  _id!: string;\n  /**\n   * @internal\n   */\n  _parentId?: string;\n\n  /**\n   * @internal\n   */\n  _name?: string;\n\n  /**\n   * @internal\n   */\n  _hasStartedLoading = false;\n\n  /**\n   * @internal\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * The page associated with the frame.\n   */\n  abstract page(): Page;\n\n  /**\n   * Is `true` if the frame is an out-of-process (OOP) frame. Otherwise,\n   * `false`.\n   */\n  abstract isOOPFrame(): boolean;\n\n  /**\n   * Navigates the frame to the given `url`.\n   *\n   * @remarks\n   * Navigation to `about:blank` or navigation to the same URL with a different\n   * hash will succeed and return `null`.\n   *\n   * :::warning\n   *\n   * Headless mode doesn't support navigation to a PDF document. See the {@link\n   * https://bugs.chromium.org/p/chromium/issues/detail?id=761295 | upstream\n   * issue}.\n   *\n   * :::\n   *\n   * @param url - URL to navigate the frame to. The URL should include scheme,\n   * e.g. `https://`\n   * @param options - Options to configure waiting behavior.\n   * @returns A promise which resolves to the main resource response. In case of\n   * multiple redirects, the navigation will resolve with the response of the\n   * last redirect.\n   * @throws If:\n   *\n   * - there's an SSL error (e.g. in case of self-signed certificates).\n   * - target URL is invalid.\n   * - the timeout is exceeded during navigation.\n   * - the remote server does not respond or is unreachable.\n   * - the main resource failed to load.\n   *\n   * This method will not throw an error when any valid HTTP status code is\n   * returned by the remote server, including 404 \"Not Found\" and 500 \"Internal\n   * Server Error\". The status code for such responses can be retrieved by\n   * calling {@link HTTPResponse.status}.\n   */\n  abstract goto(\n    url: string,\n    options?: GoToOptions\n  ): Promise<HTTPResponse | null>;\n\n  /**\n   * Waits for the frame to navigate. It is useful for when you run code which\n   * will indirectly cause the frame to navigate.\n   *\n   * Usage of the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/History_API | History API}\n   * to change the URL is considered a navigation.\n   *\n   * @example\n   *\n   * ```ts\n   * const [response] = await Promise.all([\n   *   // The navigation promise resolves after navigation has finished\n   *   frame.waitForNavigation(),\n   *   // Clicking the link will indirectly cause a navigation\n   *   frame.click('a.my-link'),\n   * ]);\n   * ```\n   *\n   * @param options - Options to configure waiting behavior.\n   * @returns A promise which resolves to the main resource response.\n   */\n  abstract waitForNavigation(\n    options?: WaitForOptions\n  ): Promise<HTTPResponse | null>;\n\n  /**\n   * @internal\n   */\n  abstract get client(): CDPSession;\n\n  /**\n   * @internal\n   */\n  abstract mainRealm(): Realm;\n\n  /**\n   * @internal\n   */\n  abstract isolatedRealm(): Realm;\n\n  #_document: Promise<ElementHandle<Document>> | undefined;\n\n  /**\n   * @internal\n   */\n  #document(): Promise<ElementHandle<Document>> {\n    if (!this.#_document) {\n      this.#_document = this.isolatedRealm()\n        .evaluateHandle(() => {\n          return document;\n        })\n        .then(handle => {\n          return this.mainRealm().transferHandle(handle);\n        });\n    }\n    return this.#_document;\n  }\n\n  /**\n   * Used to clear the document handle that has been destroyed.\n   *\n   * @internal\n   */\n  clearDocumentHandle(): void {\n    this.#_document = undefined;\n  }\n\n  /**\n   * @returns The frame element associated with this frame (if any).\n   */\n  @throwIfDetached\n  async frameElement(): Promise<HandleFor<HTMLIFrameElement> | null> {\n    const parentFrame = this.parentFrame();\n    if (!parentFrame) {\n      return null;\n    }\n    using list = await parentFrame.isolatedRealm().evaluateHandle(() => {\n      return document.querySelectorAll('iframe,frame');\n    });\n    for await (using iframe of transposeIterableHandle(list)) {\n      const frame = await iframe.contentFrame();\n      if (frame?._id === this._id) {\n        return (iframe as HandleFor<HTMLIFrameElement>).move();\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Behaves identically to {@link Page.evaluateHandle} except it's run within\n   * the context of this frame.\n   *\n   * @see {@link Page.evaluateHandle} for details.\n   */\n  @throwIfDetached\n  async evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>,\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(\n      this.evaluateHandle.name,\n      pageFunction\n    );\n    return await this.mainRealm().evaluateHandle(pageFunction, ...args);\n  }\n\n  /**\n   * Behaves identically to {@link Page.evaluate} except it's run within\n   * the context of this frame.\n   *\n   * @see {@link Page.evaluate} for details.\n   */\n  @throwIfDetached\n  async evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>,\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(\n      this.evaluate.name,\n      pageFunction\n    );\n    return await this.mainRealm().evaluate(pageFunction, ...args);\n  }\n\n  /**\n   * Creates a locator for the provided selector. See {@link Locator} for\n   * details and supported actions.\n   *\n   * @remarks\n   * Locators API is experimental and we will not follow semver for breaking\n   * change in the Locators API.\n   */\n  locator<Selector extends string>(\n    selector: Selector\n  ): Locator<NodeFor<Selector>>;\n\n  /**\n   * Creates a locator for the provided function. See {@link Locator} for\n   * details and supported actions.\n   *\n   * @remarks\n   * Locators API is experimental and we will not follow semver for breaking\n   * change in the Locators API.\n   */\n  locator<Ret>(func: () => Awaitable<Ret>): Locator<Ret>;\n\n  /**\n   * @internal\n   */\n  @throwIfDetached\n  locator<Selector extends string, Ret>(\n    selectorOrFunc: Selector | (() => Awaitable<Ret>)\n  ): Locator<NodeFor<Selector>> | Locator<Ret> {\n    if (typeof selectorOrFunc === 'string') {\n      return NodeLocator.create(this, selectorOrFunc);\n    } else {\n      return FunctionLocator.create(this, selectorOrFunc);\n    }\n  }\n  /**\n   * Queries the frame for an element matching the given selector.\n   *\n   * @param selector - The selector to query for.\n   * @returns A {@link ElementHandle | element handle} to the first element\n   * matching the given selector. Otherwise, `null`.\n   */\n  @throwIfDetached\n  async $<Selector extends string>(\n    selector: Selector\n  ): Promise<ElementHandle<NodeFor<Selector>> | null> {\n    // eslint-disable-next-line rulesdir/use-using -- This is cached.\n    const document = await this.#document();\n    return await document.$(selector);\n  }\n\n  /**\n   * Queries the frame for all elements matching the given selector.\n   *\n   * @param selector - The selector to query for.\n   * @returns An array of {@link ElementHandle | element handles} that point to\n   * elements matching the given selector.\n   */\n  @throwIfDetached\n  async $$<Selector extends string>(\n    selector: Selector\n  ): Promise<Array<ElementHandle<NodeFor<Selector>>>> {\n    // eslint-disable-next-line rulesdir/use-using -- This is cached.\n    const document = await this.#document();\n    return await document.$$(selector);\n  }\n\n  /**\n   * Runs the given function on the first element matching the given selector in\n   * the frame.\n   *\n   * If the given function returns a promise, then this method will wait till\n   * the promise resolves.\n   *\n   * @example\n   *\n   * ```ts\n   * const searchValue = await frame.$eval('#search', el => el.value);\n   * ```\n   *\n   * @param selector - The selector to query for.\n   * @param pageFunction - The function to be evaluated in the frame's context.\n   * The first element matching the selector will be passed to the function as\n   * its first argument.\n   * @param args - Additional arguments to pass to `pageFunction`.\n   * @returns A promise to the result of the function.\n   */\n  @throwIfDetached\n  async $eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<NodeFor<Selector>, Params> = EvaluateFuncWith<\n      NodeFor<Selector>,\n      Params\n    >,\n  >(\n    selector: Selector,\n    pageFunction: string | Func,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$eval.name, pageFunction);\n    // eslint-disable-next-line rulesdir/use-using -- This is cached.\n    const document = await this.#document();\n    return await document.$eval(selector, pageFunction, ...args);\n  }\n\n  /**\n   * Runs the given function on an array of elements matching the given selector\n   * in the frame.\n   *\n   * If the given function returns a promise, then this method will wait till\n   * the promise resolves.\n   *\n   * @example\n   *\n   * ```ts\n   * const divsCounts = await frame.$$eval('div', divs => divs.length);\n   * ```\n   *\n   * @param selector - The selector to query for.\n   * @param pageFunction - The function to be evaluated in the frame's context.\n   * An array of elements matching the given selector will be passed to the\n   * function as its first argument.\n   * @param args - Additional arguments to pass to `pageFunction`.\n   * @returns A promise to the result of the function.\n   */\n  @throwIfDetached\n  async $$eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<\n      Array<NodeFor<Selector>>,\n      Params\n    > = EvaluateFuncWith<Array<NodeFor<Selector>>, Params>,\n  >(\n    selector: Selector,\n    pageFunction: string | Func,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$$eval.name, pageFunction);\n    // eslint-disable-next-line rulesdir/use-using -- This is cached.\n    const document = await this.#document();\n    return await document.$$eval(selector, pageFunction, ...args);\n  }\n\n  /**\n   * Waits for an element matching the given selector to appear in the frame.\n   *\n   * This method works across navigations.\n   *\n   * @example\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   let currentURL;\n   *   page\n   *     .mainFrame()\n   *     .waitForSelector('img')\n   *     .then(() => console.log('First URL with image: ' + currentURL));\n   *\n   *   for (currentURL of [\n   *     'https://example.com',\n   *     'https://google.com',\n   *     'https://bbc.com',\n   *   ]) {\n   *     await page.goto(currentURL);\n   *   }\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param selector - The selector to query and wait for.\n   * @param options - Options for customizing waiting behavior.\n   * @returns An element matching the given selector.\n   * @throws Throws if an element matching the given selector doesn't appear.\n   */\n  @throwIfDetached\n  async waitForSelector<Selector extends string>(\n    selector: Selector,\n    options: WaitForSelectorOptions = {}\n  ): Promise<ElementHandle<NodeFor<Selector>> | null> {\n    const {updatedSelector, QueryHandler} =\n      getQueryHandlerAndSelector(selector);\n    return (await QueryHandler.waitFor(\n      this,\n      updatedSelector,\n      options\n    )) as ElementHandle<NodeFor<Selector>> | null;\n  }\n\n  /**\n   * @example\n   * The `waitForFunction` can be used to observe viewport size change:\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   *\n   * (async () => {\n   * .  const browser = await puppeteer.launch();\n   * .  const page = await browser.newPage();\n   * .  const watchDog = page.mainFrame().waitForFunction('window.innerWidth < 100');\n   * .  page.setViewport({width: 50, height: 50});\n   * .  await watchDog;\n   * .  await browser.close();\n   * })();\n   * ```\n   *\n   * To pass arguments from Node.js to the predicate of `page.waitForFunction` function:\n   *\n   * ```ts\n   * const selector = '.foo';\n   * await frame.waitForFunction(\n   *   selector => !!document.querySelector(selector),\n   *   {}, // empty options object\n   *   selector\n   * );\n   * ```\n   *\n   * @param pageFunction - the function to evaluate in the frame context.\n   * @param options - options to configure the polling method and timeout.\n   * @param args - arguments to pass to the `pageFunction`.\n   * @returns the promise which resolve when the `pageFunction` returns a truthy value.\n   */\n  @throwIfDetached\n  async waitForFunction<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>,\n  >(\n    pageFunction: Func | string,\n    options: FrameWaitForFunctionOptions = {},\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    return await (this.mainRealm().waitForFunction(\n      pageFunction,\n      options,\n      ...args\n    ) as Promise<HandleFor<Awaited<ReturnType<Func>>>>);\n  }\n  /**\n   * The full HTML contents of the frame, including the DOCTYPE.\n   */\n  @throwIfDetached\n  async content(): Promise<string> {\n    return await this.evaluate(() => {\n      let content = '';\n      for (const node of document.childNodes) {\n        switch (node) {\n          case document.documentElement:\n            content += document.documentElement.outerHTML;\n            break;\n          default:\n            content += new XMLSerializer().serializeToString(node);\n            break;\n        }\n      }\n\n      return content;\n    });\n  }\n\n  /**\n   * Set the content of the frame.\n   *\n   * @param html - HTML markup to assign to the page.\n   * @param options - Options to configure how long before timing out and at\n   * what point to consider the content setting successful.\n   */\n  abstract setContent(html: string, options?: WaitForOptions): Promise<void>;\n\n  /**\n   * @internal\n   */\n  async setFrameContent(content: string): Promise<void> {\n    return await this.evaluate(html => {\n      document.open();\n      document.write(html);\n      document.close();\n    }, content);\n  }\n\n  /**\n   * The frame's `name` attribute as specified in the tag.\n   *\n   * @remarks\n   * If the name is empty, it returns the `id` attribute instead.\n   *\n   * @remarks\n   * This value is calculated once when the frame is created, and will not\n   * update if the attribute is changed later.\n   *\n   * @deprecated Use\n   *\n   * ```ts\n   * const element = await frame.frameElement();\n   * const nameOrId = await element.evaluate(frame => frame.name ?? frame.id);\n   * ```\n   */\n  name(): string {\n    return this._name || '';\n  }\n\n  /**\n   * The frame's URL.\n   */\n  abstract url(): string;\n\n  /**\n   * The parent frame, if any. Detached and main frames return `null`.\n   */\n  abstract parentFrame(): Frame | null;\n\n  /**\n   * An array of child frames.\n   */\n  abstract childFrames(): Frame[];\n\n  /**\n   * @returns `true` if the frame has detached. `false` otherwise.\n   */\n  abstract get detached(): boolean;\n\n  /**\n   * Is`true` if the frame has been detached. Otherwise, `false`.\n   *\n   * @deprecated Use the `detached` getter.\n   */\n  isDetached(): boolean {\n    return this.detached;\n  }\n\n  /**\n   * @internal\n   */\n  get disposed(): boolean {\n    return this.detached;\n  }\n\n  /**\n   * Adds a `<script>` tag into the page with the desired url or content.\n   *\n   * @param options - Options for the script.\n   * @returns An {@link ElementHandle | element handle} to the injected\n   * `<script>` element.\n   */\n  @throwIfDetached\n  async addScriptTag(\n    options: FrameAddScriptTagOptions\n  ): Promise<ElementHandle<HTMLScriptElement>> {\n    let {content = '', type} = options;\n    const {path} = options;\n    if (+!!options.url + +!!path + +!!content !== 1) {\n      throw new Error(\n        'Exactly one of `url`, `path`, or `content` must be specified.'\n      );\n    }\n\n    if (path) {\n      const fs = await importFSPromises();\n      content = await fs.readFile(path, 'utf8');\n      content += `//# sourceURL=${path.replace(/\\n/g, '')}`;\n    }\n\n    type = type ?? 'text/javascript';\n\n    return await this.mainRealm().transferHandle(\n      await this.isolatedRealm().evaluateHandle(\n        async ({url, id, type, content}) => {\n          return await new Promise<HTMLScriptElement>((resolve, reject) => {\n            const script = document.createElement('script');\n            script.type = type;\n            script.text = content;\n            script.addEventListener(\n              'error',\n              event => {\n                reject(new Error(event.message ?? 'Could not load script'));\n              },\n              {once: true}\n            );\n            if (id) {\n              script.id = id;\n            }\n            if (url) {\n              script.src = url;\n              script.addEventListener(\n                'load',\n                () => {\n                  resolve(script);\n                },\n                {once: true}\n              );\n              document.head.appendChild(script);\n            } else {\n              document.head.appendChild(script);\n              resolve(script);\n            }\n          });\n        },\n        {...options, type, content}\n      )\n    );\n  }\n\n  /**\n   * Adds a `HTMLStyleElement` into the frame with the desired URL\n   *\n   * @returns An {@link ElementHandle | element handle} to the loaded `<style>`\n   * element.\n   */\n  async addStyleTag(\n    options: Omit<FrameAddStyleTagOptions, 'url'>\n  ): Promise<ElementHandle<HTMLStyleElement>>;\n\n  /**\n   * Adds a `HTMLLinkElement` into the frame with the desired URL\n   *\n   * @returns An {@link ElementHandle | element handle} to the loaded `<link>`\n   * element.\n   */\n  async addStyleTag(\n    options: FrameAddStyleTagOptions\n  ): Promise<ElementHandle<HTMLLinkElement>>;\n\n  /**\n   * @internal\n   */\n  @throwIfDetached\n  async addStyleTag(\n    options: FrameAddStyleTagOptions\n  ): Promise<ElementHandle<HTMLStyleElement | HTMLLinkElement>> {\n    let {content = ''} = options;\n    const {path} = options;\n    if (+!!options.url + +!!path + +!!content !== 1) {\n      throw new Error(\n        'Exactly one of `url`, `path`, or `content` must be specified.'\n      );\n    }\n\n    if (path) {\n      const fs = await importFSPromises();\n\n      content = await fs.readFile(path, 'utf8');\n      content += '/*# sourceURL=' + path.replace(/\\n/g, '') + '*/';\n      options.content = content;\n    }\n\n    return await this.mainRealm().transferHandle(\n      await this.isolatedRealm().evaluateHandle(async ({url, content}) => {\n        return await new Promise<HTMLStyleElement | HTMLLinkElement>(\n          (resolve, reject) => {\n            let element: HTMLStyleElement | HTMLLinkElement;\n            if (!url) {\n              element = document.createElement('style');\n              element.appendChild(document.createTextNode(content!));\n            } else {\n              const link = document.createElement('link');\n              link.rel = 'stylesheet';\n              link.href = url;\n              element = link;\n            }\n            element.addEventListener(\n              'load',\n              () => {\n                resolve(element);\n              },\n              {once: true}\n            );\n            element.addEventListener(\n              'error',\n              event => {\n                reject(\n                  new Error(\n                    (event as ErrorEvent).message ?? 'Could not load style'\n                  )\n                );\n              },\n              {once: true}\n            );\n            document.head.appendChild(element);\n            return element;\n          }\n        );\n      }, options)\n    );\n  }\n\n  /**\n   * Clicks the first element found that matches `selector`.\n   *\n   * @remarks\n   * If `click()` triggers a navigation event and there's a separate\n   * `page.waitForNavigation()` promise to be resolved, you may end up with a\n   * race condition that yields unexpected results. The correct pattern for\n   * click and wait for navigation is the following:\n   *\n   * ```ts\n   * const [response] = await Promise.all([\n   *   page.waitForNavigation(waitOptions),\n   *   frame.click(selector, clickOptions),\n   * ]);\n   * ```\n   *\n   * @param selector - The selector to query for.\n   */\n  @throwIfDetached\n  async click(\n    selector: string,\n    options: Readonly<ClickOptions> = {}\n  ): Promise<void> {\n    using handle = await this.$(selector);\n    assert(handle, `No element found for selector: ${selector}`);\n    await handle.click(options);\n    await handle.dispose();\n  }\n\n  /**\n   * Focuses the first element that matches the `selector`.\n   *\n   * @param selector - The selector to query for.\n   * @throws Throws if there's no element matching `selector`.\n   */\n  @throwIfDetached\n  async focus(selector: string): Promise<void> {\n    using handle = await this.$(selector);\n    assert(handle, `No element found for selector: ${selector}`);\n    await handle.focus();\n  }\n\n  /**\n   * Hovers the pointer over the center of the first element that matches the\n   * `selector`.\n   *\n   * @param selector - The selector to query for.\n   * @throws Throws if there's no element matching `selector`.\n   */\n  @throwIfDetached\n  async hover(selector: string): Promise<void> {\n    using handle = await this.$(selector);\n    assert(handle, `No element found for selector: ${selector}`);\n    await handle.hover();\n  }\n\n  /**\n   * Selects a set of value on the first `<select>` element that matches the\n   * `selector`.\n   *\n   * @example\n   *\n   * ```ts\n   * frame.select('select#colors', 'blue'); // single selection\n   * frame.select('select#colors', 'red', 'green', 'blue'); // multiple selections\n   * ```\n   *\n   * @param selector - The selector to query for.\n   * @param values - The array of values to select. If the `<select>` has the\n   * `multiple` attribute, all values are considered, otherwise only the first\n   * one is taken into account.\n   * @returns the list of values that were successfully selected.\n   * @throws Throws if there's no `<select>` matching `selector`.\n   */\n  @throwIfDetached\n  async select(selector: string, ...values: string[]): Promise<string[]> {\n    using handle = await this.$(selector);\n    assert(handle, `No element found for selector: ${selector}`);\n    return await handle.select(...values);\n  }\n\n  /**\n   * Taps the first element that matches the `selector`.\n   *\n   * @param selector - The selector to query for.\n   * @throws Throws if there's no element matching `selector`.\n   */\n  @throwIfDetached\n  async tap(selector: string): Promise<void> {\n    using handle = await this.$(selector);\n    assert(handle, `No element found for selector: ${selector}`);\n    await handle.tap();\n  }\n\n  /**\n   * Sends a `keydown`, `keypress`/`input`, and `keyup` event for each character\n   * in the text.\n   *\n   * @remarks\n   * To press a special key, like `Control` or `ArrowDown`, use\n   * {@link Keyboard.press}.\n   *\n   * @example\n   *\n   * ```ts\n   * await frame.type('#mytextarea', 'Hello'); // Types instantly\n   * await frame.type('#mytextarea', 'World', {delay: 100}); // Types slower, like a user\n   * ```\n   *\n   * @param selector - the selector for the element to type into. If there are\n   * multiple the first will be used.\n   * @param text - text to type into the element\n   * @param options - takes one option, `delay`, which sets the time to wait\n   * between key presses in milliseconds. Defaults to `0`.\n   */\n  @throwIfDetached\n  async type(\n    selector: string,\n    text: string,\n    options?: Readonly<KeyboardTypeOptions>\n  ): Promise<void> {\n    using handle = await this.$(selector);\n    assert(handle, `No element found for selector: ${selector}`);\n    await handle.type(text, options);\n  }\n\n  /**\n   * The frame's title.\n   */\n  @throwIfDetached\n  async title(): Promise<string> {\n    return await this.isolatedRealm().evaluate(() => {\n      return document.title;\n    });\n  }\n\n  /**\n   * This method is typically coupled with an action that triggers a device\n   * request from an api such as WebBluetooth.\n   *\n   * :::caution\n   *\n   * This must be called before the device request is made. It will not return a\n   * currently active device prompt.\n   *\n   * :::\n   *\n   * @example\n   *\n   * ```ts\n   * const [devicePrompt] = Promise.all([\n   *   frame.waitForDevicePrompt(),\n   *   frame.click('#connect-bluetooth'),\n   * ]);\n   * await devicePrompt.select(\n   *   await devicePrompt.waitForDevice(({name}) => name.includes('My Device'))\n   * );\n   * ```\n   *\n   * @internal\n   */\n  abstract waitForDevicePrompt(\n    options?: WaitTimeoutOptions\n  ): Promise<DeviceRequestPrompt>;\n}\n", "/**\n * @license\n * Copyright 2020 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport type {Protocol} from 'devtools-protocol';\n\nimport type {ProtocolError} from '../common/Errors.js';\nimport {debugError} from '../common/util.js';\nimport {assert} from '../util/assert.js';\n\nimport type {CDPSession} from './CDPSession.js';\nimport type {Frame} from './Frame.js';\nimport type {HTTPResponse} from './HTTPResponse.js';\n\n/**\n * @public\n */\nexport interface ContinueRequestOverrides {\n  /**\n   * If set, the request URL will change. This is not a redirect.\n   */\n  url?: string;\n  method?: string;\n  postData?: string;\n  headers?: Record<string, string>;\n}\n\n/**\n * @public\n */\nexport interface InterceptResolutionState {\n  action: InterceptResolutionAction;\n  priority?: number;\n}\n\n/**\n * Required response data to fulfill a request with.\n *\n * @public\n */\nexport interface ResponseForRequest {\n  status: number;\n  /**\n   * Optional response headers. All values are converted to strings.\n   */\n  headers: Record<string, unknown>;\n  contentType: string;\n  body: string | Buffer;\n}\n\n/**\n * Resource types for HTTPRequests as perceived by the rendering engine.\n *\n * @public\n */\nexport type ResourceType = Lowercase<Protocol.Network.ResourceType>;\n\n/**\n * The default cooperative request interception resolution priority\n *\n * @public\n */\nexport const DEFAULT_INTERCEPT_RESOLUTION_PRIORITY = 0;\n\n/**\n * Represents an HTTP request sent by a page.\n * @remarks\n *\n * Whenever the page sends a request, such as for a network resource, the\n * following events are emitted by Puppeteer's `page`:\n *\n * - `request`: emitted when the request is issued by the page.\n * - `requestfinished` - emitted when the response body is downloaded and the\n *   request is complete.\n *\n * If request fails at some point, then instead of `requestfinished` event the\n * `requestfailed` event is emitted.\n *\n * All of these events provide an instance of `HTTPRequest` representing the\n * request that occurred:\n *\n * ```\n * page.on('request', request => ...)\n * ```\n *\n * NOTE: HTTP Error responses, such as 404 or 503, are still successful\n * responses from HTTP standpoint, so request will complete with\n * `requestfinished` event.\n *\n * If request gets a 'redirect' response, the request is successfully finished\n * with the `requestfinished` event, and a new request is issued to a\n * redirected url.\n *\n * @public\n */\nexport abstract class HTTPRequest {\n  /**\n   * @internal\n   */\n  abstract get id(): string;\n\n  /**\n   * @internal\n   */\n  _interceptionId: string | undefined;\n  /**\n   * @internal\n   */\n  _failureText: string | null = null;\n  /**\n   * @internal\n   */\n  _response: HTTPResponse | null = null;\n  /**\n   * @internal\n   */\n  _fromMemoryCache = false;\n  /**\n   * @internal\n   */\n  _redirectChain: HTTPRequest[] = [];\n\n  /**\n   * @internal\n   */\n  protected interception: {\n    enabled: boolean;\n    handled: boolean;\n    handlers: Array<() => void | PromiseLike<any>>;\n    resolutionState: InterceptResolutionState;\n    requestOverrides: ContinueRequestOverrides;\n    response: Partial<ResponseForRequest> | null;\n    abortReason: Protocol.Network.ErrorReason | null;\n  } = {\n    enabled: false,\n    handled: false,\n    handlers: [],\n    resolutionState: {\n      action: InterceptResolutionAction.None,\n    },\n    requestOverrides: {},\n    response: null,\n    abortReason: null,\n  };\n\n  /**\n   * Warning! Using this client can break Puppeteer. Use with caution.\n   *\n   * @experimental\n   */\n  abstract get client(): CDPSession;\n\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * The URL of the request\n   */\n  abstract url(): string;\n\n  /**\n   * The `ContinueRequestOverrides` that will be used\n   * if the interception is allowed to continue (ie, `abort()` and\n   * `respond()` aren't called).\n   */\n  continueRequestOverrides(): ContinueRequestOverrides {\n    assert(this.interception.enabled, 'Request Interception is not enabled!');\n    return this.interception.requestOverrides;\n  }\n\n  /**\n   * The `ResponseForRequest` that gets used if the\n   * interception is allowed to respond (ie, `abort()` is not called).\n   */\n  responseForRequest(): Partial<ResponseForRequest> | null {\n    assert(this.interception.enabled, 'Request Interception is not enabled!');\n    return this.interception.response;\n  }\n\n  /**\n   * The most recent reason for aborting the request\n   */\n  abortErrorReason(): Protocol.Network.ErrorReason | null {\n    assert(this.interception.enabled, 'Request Interception is not enabled!');\n    return this.interception.abortReason;\n  }\n\n  /**\n   * An InterceptResolutionState object describing the current resolution\n   * action and priority.\n   *\n   * InterceptResolutionState contains:\n   * action: InterceptResolutionAction\n   * priority?: number\n   *\n   * InterceptResolutionAction is one of: `abort`, `respond`, `continue`,\n   * `disabled`, `none`, or `already-handled`.\n   */\n  interceptResolutionState(): InterceptResolutionState {\n    if (!this.interception.enabled) {\n      return {action: InterceptResolutionAction.Disabled};\n    }\n    if (this.interception.handled) {\n      return {action: InterceptResolutionAction.AlreadyHandled};\n    }\n    return {...this.interception.resolutionState};\n  }\n\n  /**\n   * Is `true` if the intercept resolution has already been handled,\n   * `false` otherwise.\n   */\n  isInterceptResolutionHandled(): boolean {\n    return this.interception.handled;\n  }\n\n  /**\n   * Adds an async request handler to the processing queue.\n   * Deferred handlers are not guaranteed to execute in any particular order,\n   * but they are guaranteed to resolve before the request interception\n   * is finalized.\n   */\n  enqueueInterceptAction(\n    pendingHandler: () => void | PromiseLike<unknown>\n  ): void {\n    this.interception.handlers.push(pendingHandler);\n  }\n\n  /**\n   * @internal\n   */\n  abstract _abort(\n    errorReason: Protocol.Network.ErrorReason | null\n  ): Promise<void>;\n\n  /**\n   * @internal\n   */\n  abstract _respond(response: Partial<ResponseForRequest>): Promise<void>;\n\n  /**\n   * @internal\n   */\n  abstract _continue(overrides: ContinueRequestOverrides): Promise<void>;\n\n  /**\n   * Awaits pending interception handlers and then decides how to fulfill\n   * the request interception.\n   */\n  async finalizeInterceptions(): Promise<void> {\n    await this.interception.handlers.reduce((promiseChain, interceptAction) => {\n      return promiseChain.then(interceptAction);\n    }, Promise.resolve());\n    this.interception.handlers = []; // TODO: verify this is correct top let gc run\n    const {action} = this.interceptResolutionState();\n    switch (action) {\n      case 'abort':\n        return await this._abort(this.interception.abortReason);\n      case 'respond':\n        if (this.interception.response === null) {\n          throw new Error('Response is missing for the interception');\n        }\n        return await this._respond(this.interception.response);\n      case 'continue':\n        return await this._continue(this.interception.requestOverrides);\n    }\n  }\n\n  /**\n   * Contains the request's resource type as it was perceived by the rendering\n   * engine.\n   */\n  abstract resourceType(): ResourceType;\n\n  /**\n   * The method used (`GET`, `POST`, etc.)\n   */\n  abstract method(): string;\n\n  /**\n   * The request's post body, if any.\n   */\n  abstract postData(): string | undefined;\n\n  /**\n   * True when the request has POST data. Note that {@link HTTPRequest.postData}\n   * might still be undefined when this flag is true when the data is too long\n   * or not readily available in the decoded form. In that case, use\n   * {@link HTTPRequest.fetchPostData}.\n   */\n  abstract hasPostData(): boolean;\n\n  /**\n   * Fetches the POST data for the request from the browser.\n   */\n  abstract fetchPostData(): Promise<string | undefined>;\n\n  /**\n   * An object with HTTP headers associated with the request. All\n   * header names are lower-case.\n   */\n  abstract headers(): Record<string, string>;\n\n  /**\n   * A matching `HTTPResponse` object, or null if the response has not\n   * been received yet.\n   */\n  abstract response(): HTTPResponse | null;\n\n  /**\n   * The frame that initiated the request, or null if navigating to\n   * error pages.\n   */\n  abstract frame(): Frame | null;\n\n  /**\n   * True if the request is the driver of the current frame's navigation.\n   */\n  abstract isNavigationRequest(): boolean;\n\n  /**\n   * The initiator of the request.\n   */\n  abstract initiator(): Protocol.Network.Initiator | undefined;\n\n  /**\n   * A `redirectChain` is a chain of requests initiated to fetch a resource.\n   * @remarks\n   *\n   * `redirectChain` is shared between all the requests of the same chain.\n   *\n   * For example, if the website `http://example.com` has a single redirect to\n   * `https://example.com`, then the chain will contain one request:\n   *\n   * ```ts\n   * const response = await page.goto('http://example.com');\n   * const chain = response.request().redirectChain();\n   * console.log(chain.length); // 1\n   * console.log(chain[0].url()); // 'http://example.com'\n   * ```\n   *\n   * If the website `https://google.com` has no redirects, then the chain will be empty:\n   *\n   * ```ts\n   * const response = await page.goto('https://google.com');\n   * const chain = response.request().redirectChain();\n   * console.log(chain.length); // 0\n   * ```\n   *\n   * @returns the chain of requests - if a server responds with at least a\n   * single redirect, this chain will contain all requests that were redirected.\n   */\n  abstract redirectChain(): HTTPRequest[];\n\n  /**\n   * Access information about the request's failure.\n   *\n   * @remarks\n   *\n   * @example\n   *\n   * Example of logging all failed requests:\n   *\n   * ```ts\n   * page.on('requestfailed', request => {\n   *   console.log(request.url() + ' ' + request.failure().errorText);\n   * });\n   * ```\n   *\n   * @returns `null` unless the request failed. If the request fails this can\n   * return an object with `errorText` containing a human-readable error\n   * message, e.g. `net::ERR_FAILED`. It is not guaranteed that there will be\n   * failure text if the request fails.\n   */\n  abstract failure(): {errorText: string} | null;\n\n  /**\n   * Continues request with optional request overrides.\n   *\n   * @example\n   *\n   * ```ts\n   * await page.setRequestInterception(true);\n   * page.on('request', request => {\n   *   // Override headers\n   *   const headers = Object.assign({}, request.headers(), {\n   *     foo: 'bar', // set \"foo\" header\n   *     origin: undefined, // remove \"origin\" header\n   *   });\n   *   request.continue({headers});\n   * });\n   * ```\n   *\n   * @param overrides - optional overrides to apply to the request.\n   * @param priority - If provided, intercept is resolved using cooperative\n   * handling rules. Otherwise, intercept is resolved immediately.\n   *\n   * @remarks\n   *\n   * To use this, request interception should be enabled with\n   * {@link Page.setRequestInterception}.\n   *\n   * Exception is immediately thrown if the request interception is not enabled.\n   */\n  async continue(\n    overrides: ContinueRequestOverrides = {},\n    priority?: number\n  ): Promise<void> {\n    // Request interception is not supported for data: urls.\n    if (this.url().startsWith('data:')) {\n      return;\n    }\n    assert(this.interception.enabled, 'Request Interception is not enabled!');\n    assert(!this.interception.handled, 'Request is already handled!');\n    if (priority === undefined) {\n      return await this._continue(overrides);\n    }\n    this.interception.requestOverrides = overrides;\n    if (\n      this.interception.resolutionState.priority === undefined ||\n      priority > this.interception.resolutionState.priority\n    ) {\n      this.interception.resolutionState = {\n        action: InterceptResolutionAction.Continue,\n        priority,\n      };\n      return;\n    }\n    if (priority === this.interception.resolutionState.priority) {\n      if (\n        this.interception.resolutionState.action === 'abort' ||\n        this.interception.resolutionState.action === 'respond'\n      ) {\n        return;\n      }\n      this.interception.resolutionState.action =\n        InterceptResolutionAction.Continue;\n    }\n    return;\n  }\n\n  /**\n   * Fulfills a request with the given response.\n   *\n   * @example\n   * An example of fulfilling all requests with 404 responses:\n   *\n   * ```ts\n   * await page.setRequestInterception(true);\n   * page.on('request', request => {\n   *   request.respond({\n   *     status: 404,\n   *     contentType: 'text/plain',\n   *     body: 'Not Found!',\n   *   });\n   * });\n   * ```\n   *\n   * NOTE: Mocking responses for dataURL requests is not supported.\n   * Calling `request.respond` for a dataURL request is a noop.\n   *\n   * @param response - the response to fulfill the request with.\n   * @param priority - If provided, intercept is resolved using\n   * cooperative handling rules. Otherwise, intercept is resolved\n   * immediately.\n   *\n   * @remarks\n   *\n   * To use this, request\n   * interception should be enabled with {@link Page.setRequestInterception}.\n   *\n   * Exception is immediately thrown if the request interception is not enabled.\n   */\n  async respond(\n    response: Partial<ResponseForRequest>,\n    priority?: number\n  ): Promise<void> {\n    // Mocking responses for dataURL requests is not currently supported.\n    if (this.url().startsWith('data:')) {\n      return;\n    }\n    assert(this.interception.enabled, 'Request Interception is not enabled!');\n    assert(!this.interception.handled, 'Request is already handled!');\n    if (priority === undefined) {\n      return await this._respond(response);\n    }\n    this.interception.response = response;\n    if (\n      this.interception.resolutionState.priority === undefined ||\n      priority > this.interception.resolutionState.priority\n    ) {\n      this.interception.resolutionState = {\n        action: InterceptResolutionAction.Respond,\n        priority,\n      };\n      return;\n    }\n    if (priority === this.interception.resolutionState.priority) {\n      if (this.interception.resolutionState.action === 'abort') {\n        return;\n      }\n      this.interception.resolutionState.action =\n        InterceptResolutionAction.Respond;\n    }\n  }\n\n  /**\n   * Aborts a request.\n   *\n   * @param errorCode - optional error code to provide.\n   * @param priority - If provided, intercept is resolved using\n   * cooperative handling rules. Otherwise, intercept is resolved\n   * immediately.\n   *\n   * @remarks\n   *\n   * To use this, request interception should be enabled with\n   * {@link Page.setRequestInterception}. If it is not enabled, this method will\n   * throw an exception immediately.\n   */\n  async abort(\n    errorCode: ErrorCode = 'failed',\n    priority?: number\n  ): Promise<void> {\n    // Request interception is not supported for data: urls.\n    if (this.url().startsWith('data:')) {\n      return;\n    }\n    const errorReason = errorReasons[errorCode];\n    assert(errorReason, 'Unknown error code: ' + errorCode);\n    assert(this.interception.enabled, 'Request Interception is not enabled!');\n    assert(!this.interception.handled, 'Request is already handled!');\n    if (priority === undefined) {\n      return await this._abort(errorReason);\n    }\n    this.interception.abortReason = errorReason;\n    if (\n      this.interception.resolutionState.priority === undefined ||\n      priority >= this.interception.resolutionState.priority\n    ) {\n      this.interception.resolutionState = {\n        action: InterceptResolutionAction.Abort,\n        priority,\n      };\n      return;\n    }\n  }\n}\n\n/**\n * @public\n */\nexport enum InterceptResolutionAction {\n  Abort = 'abort',\n  Respond = 'respond',\n  Continue = 'continue',\n  Disabled = 'disabled',\n  None = 'none',\n  AlreadyHandled = 'already-handled',\n}\n\n/**\n * @public\n */\nexport type ErrorCode =\n  | 'aborted'\n  | 'accessdenied'\n  | 'addressunreachable'\n  | 'blockedbyclient'\n  | 'blockedbyresponse'\n  | 'connectionaborted'\n  | 'connectionclosed'\n  | 'connectionfailed'\n  | 'connectionrefused'\n  | 'connectionreset'\n  | 'internetdisconnected'\n  | 'namenotresolved'\n  | 'timedout'\n  | 'failed';\n\n/**\n * @public\n */\nexport type ActionResult = 'continue' | 'abort' | 'respond';\n\n/**\n * @internal\n */\nexport function headersArray(\n  headers: Record<string, string | string[]>\n): Array<{name: string; value: string}> {\n  const result = [];\n  for (const name in headers) {\n    const value = headers[name];\n\n    if (!Object.is(value, undefined)) {\n      const values = Array.isArray(value) ? value : [value];\n\n      result.push(\n        ...values.map(value => {\n          return {name, value: value + ''};\n        })\n      );\n    }\n  }\n  return result;\n}\n\n/**\n * @internal\n *\n * @remarks\n * List taken from {@link https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml}\n * with extra 306 and 418 codes.\n */\nexport const STATUS_TEXTS: Record<string, string> = {\n  '100': 'Continue',\n  '101': 'Switching Protocols',\n  '102': 'Processing',\n  '103': 'Early Hints',\n  '200': 'OK',\n  '201': 'Created',\n  '202': 'Accepted',\n  '203': 'Non-Authoritative Information',\n  '204': 'No Content',\n  '205': 'Reset Content',\n  '206': 'Partial Content',\n  '207': 'Multi-Status',\n  '208': 'Already Reported',\n  '226': 'IM Used',\n  '300': 'Multiple Choices',\n  '301': 'Moved Permanently',\n  '302': 'Found',\n  '303': 'See Other',\n  '304': 'Not Modified',\n  '305': 'Use Proxy',\n  '306': 'Switch Proxy',\n  '307': 'Temporary Redirect',\n  '308': 'Permanent Redirect',\n  '400': 'Bad Request',\n  '401': 'Unauthorized',\n  '402': 'Payment Required',\n  '403': 'Forbidden',\n  '404': 'Not Found',\n  '405': 'Method Not Allowed',\n  '406': 'Not Acceptable',\n  '407': 'Proxy Authentication Required',\n  '408': 'Request Timeout',\n  '409': 'Conflict',\n  '410': 'Gone',\n  '411': 'Length Required',\n  '412': 'Precondition Failed',\n  '413': 'Payload Too Large',\n  '414': 'URI Too Long',\n  '415': 'Unsupported Media Type',\n  '416': 'Range Not Satisfiable',\n  '417': 'Expectation Failed',\n  '418': \"I'm a teapot\",\n  '421': 'Misdirected Request',\n  '422': 'Unprocessable Entity',\n  '423': 'Locked',\n  '424': 'Failed Dependency',\n  '425': 'Too Early',\n  '426': 'Upgrade Required',\n  '428': 'Precondition Required',\n  '429': 'Too Many Requests',\n  '431': 'Request Header Fields Too Large',\n  '451': 'Unavailable For Legal Reasons',\n  '500': 'Internal Server Error',\n  '501': 'Not Implemented',\n  '502': 'Bad Gateway',\n  '503': 'Service Unavailable',\n  '504': 'Gateway Timeout',\n  '505': 'HTTP Version Not Supported',\n  '506': 'Variant Also Negotiates',\n  '507': 'Insufficient Storage',\n  '508': 'Loop Detected',\n  '510': 'Not Extended',\n  '511': 'Network Authentication Required',\n} as const;\n\nconst errorReasons: Record<ErrorCode, Protocol.Network.ErrorReason> = {\n  aborted: 'Aborted',\n  accessdenied: 'AccessDenied',\n  addressunreachable: 'AddressUnreachable',\n  blockedbyclient: 'BlockedByClient',\n  blockedbyresponse: 'BlockedByResponse',\n  connectionaborted: 'ConnectionAborted',\n  connectionclosed: 'ConnectionClosed',\n  connectionfailed: 'ConnectionFailed',\n  connectionrefused: 'ConnectionRefused',\n  connectionreset: 'ConnectionReset',\n  internetdisconnected: 'InternetDisconnected',\n  namenotresolved: 'NameNotResolved',\n  timedout: 'TimedOut',\n  failed: 'Failed',\n} as const;\n\n/**\n * @internal\n */\nexport function handleError(error: ProtocolError): void {\n  if (error.originalMessage.includes('Invalid header')) {\n    throw error;\n  }\n  // In certain cases, protocol will return error if the request was\n  // already canceled or the page was closed. We should tolerate these\n  // errors.\n  debugError(error);\n}\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type Protocol from 'devtools-protocol';\n\nimport type {SecurityDetails} from '../common/SecurityDetails.js';\n\nimport type {Frame} from './Frame.js';\nimport type {HTTPRequest} from './HTTPRequest.js';\n\n/**\n * @public\n */\nexport interface RemoteAddress {\n  ip?: string;\n  port?: number;\n}\n\n/**\n * The HTTPResponse class represents responses which are received by the\n * {@link Page} class.\n *\n * @public\n */\nexport abstract class HTTPResponse {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * The IP address and port number used to connect to the remote\n   * server.\n   */\n  abstract remoteAddress(): RemoteAddress;\n\n  /**\n   * The URL of the response.\n   */\n  abstract url(): string;\n\n  /**\n   * True if the response was successful (status in the range 200-299).\n   */\n  ok(): boolean {\n    // TODO: document === 0 case?\n    const status = this.status();\n    return status === 0 || (status >= 200 && status <= 299);\n  }\n\n  /**\n   * The status code of the response (e.g., 200 for a success).\n   */\n  abstract status(): number;\n\n  /**\n   * The status text of the response (e.g. usually an \"OK\" for a\n   * success).\n   */\n  abstract statusText(): string;\n\n  /**\n   * An object with HTTP headers associated with the response. All\n   * header names are lower-case.\n   */\n  abstract headers(): Record<string, string>;\n\n  /**\n   * {@link SecurityDetails} if the response was received over the\n   * secure connection, or `null` otherwise.\n   */\n  abstract securityDetails(): SecurityDetails | null;\n\n  /**\n   * Timing information related to the response.\n   */\n  abstract timing(): Protocol.Network.ResourceTiming | null;\n\n  /**\n   * Promise which resolves to a buffer with response body.\n   *\n   * @remarks\n   *\n   * The buffer might be re-encoded by the browser\n   * based on HTTP-headers or other heuristics. If the browser\n   * failed to detect the correct encoding, the buffer might\n   * be encoded incorrectly. See https://github.com/puppeteer/puppeteer/issues/6478.\n   */\n  abstract buffer(): Promise<Buffer>;\n\n  /**\n   * Promise which resolves to a text (utf8) representation of response body.\n   */\n  async text(): Promise<string> {\n    const content = await this.buffer();\n    return content.toString('utf8');\n  }\n\n  /**\n   * Promise which resolves to a JSON representation of response body.\n   *\n   * @remarks\n   *\n   * This method will throw if the response body is not parsable via\n   * `JSON.parse`.\n   */\n  async json(): Promise<any> {\n    const content = await this.text();\n    return JSON.parse(content);\n  }\n\n  /**\n   * A matching {@link HTTPRequest} object.\n   */\n  abstract request(): HTTPRequest;\n\n  /**\n   * True if the response was served from either the browser's disk\n   * cache or memory cache.\n   */\n  abstract fromCache(): boolean;\n\n  /**\n   * True if the response was served by a service worker.\n   */\n  abstract fromServiceWorker(): boolean;\n\n  /**\n   * A {@link Frame} that initiated this response, or `null` if\n   * navigating to error pages.\n   */\n  abstract frame(): Frame | null;\n}\n", "/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {Protocol} from 'devtools-protocol';\n\nimport type {KeyInput} from '../common/USKeyboardLayout.js';\n\nimport type {Point} from './ElementHandle.js';\n\n/**\n * @public\n */\nexport interface KeyDownOptions {\n  /**\n   * @deprecated Do not use. This is automatically handled.\n   */\n  text?: string;\n  /**\n   * @deprecated Do not use. This is automatically handled.\n   */\n  commands?: string[];\n}\n\n/**\n * @public\n */\nexport interface KeyboardTypeOptions {\n  delay?: number;\n}\n\n/**\n * @public\n */\nexport type KeyPressOptions = KeyDownOptions & KeyboardTypeOptions;\n\n/**\n * Keyboard provides an api for managing a virtual keyboard.\n * The high level api is {@link Keyboard.\"type\"},\n * which takes raw characters and generates proper keydown, keypress/input,\n * and keyup events on your page.\n *\n * @remarks\n * For finer control, you can use {@link Keyboard.down},\n * {@link Keyboard.up}, and {@link Keyboard.sendCharacter}\n * to manually fire events as if they were generated from a real keyboard.\n *\n * On macOS, keyboard shortcuts like `⌘ A` -\\> Select All do not work.\n * See {@link https://github.com/puppeteer/puppeteer/issues/1313 | #1313}.\n *\n * @example\n * An example of holding down `Shift` in order to select and delete some text:\n *\n * ```ts\n * await page.keyboard.type('Hello World!');\n * await page.keyboard.press('ArrowLeft');\n *\n * await page.keyboard.down('Shift');\n * for (let i = 0; i < ' World'.length; i++)\n *   await page.keyboard.press('ArrowLeft');\n * await page.keyboard.up('Shift');\n *\n * await page.keyboard.press('Backspace');\n * // Result text will end up saying 'Hello!'\n * ```\n *\n * @example\n * An example of pressing `A`\n *\n * ```ts\n * await page.keyboard.down('Shift');\n * await page.keyboard.press('KeyA');\n * await page.keyboard.up('Shift');\n * ```\n *\n * @public\n */\nexport abstract class Keyboard {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Dispatches a `keydown` event.\n   *\n   * @remarks\n   * If `key` is a single character and no modifier keys besides `Shift`\n   * are being held down, a `keypress`/`input` event will also generated.\n   * The `text` option can be specified to force an input event to be generated.\n   * If `key` is a modifier key, `Shift`, `Meta`, `Control`, or `Alt`,\n   * subsequent key presses will be sent with that modifier active.\n   * To release the modifier key, use {@link Keyboard.up}.\n   *\n   * After the key is pressed once, subsequent calls to\n   * {@link Keyboard.down} will have\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat | repeat}\n   * set to true. To release the key, use {@link Keyboard.up}.\n   *\n   * Modifier keys DO influence {@link Keyboard.down}.\n   * Holding down `Shift` will type the text in upper case.\n   *\n   * @param key - Name of key to press, such as `ArrowLeft`.\n   * See {@link KeyInput} for a list of all key names.\n   *\n   * @param options - An object of options. Accepts text which, if specified,\n   * generates an input event with this text. Accepts commands which, if specified,\n   * is the commands of keyboard shortcuts,\n   * see {@link https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/editing/commands/editor_command_names.h | Chromium Source Code} for valid command names.\n   */\n  abstract down(\n    key: KeyInput,\n    options?: Readonly<KeyDownOptions>\n  ): Promise<void>;\n\n  /**\n   * Dispatches a `keyup` event.\n   *\n   * @param key - Name of key to release, such as `ArrowLeft`.\n   * See {@link KeyInput | KeyInput}\n   * for a list of all key names.\n   */\n  abstract up(key: KeyInput): Promise<void>;\n\n  /**\n   * Dispatches a `keypress` and `input` event.\n   * This does not send a `keydown` or `keyup` event.\n   *\n   * @remarks\n   * Modifier keys DO NOT effect {@link Keyboard.sendCharacter | Keyboard.sendCharacter}.\n   * Holding down `Shift` will not type the text in upper case.\n   *\n   * @example\n   *\n   * ```ts\n   * page.keyboard.sendCharacter('嗨');\n   * ```\n   *\n   * @param char - Character to send into the page.\n   */\n  abstract sendCharacter(char: string): Promise<void>;\n\n  /**\n   * Sends a `keydown`, `keypress`/`input`,\n   * and `keyup` event for each character in the text.\n   *\n   * @remarks\n   * To press a special key, like `Control` or `ArrowDown`,\n   * use {@link Keyboard.press}.\n   *\n   * Modifier keys DO NOT effect `keyboard.type`.\n   * Holding down `Shift` will not type the text in upper case.\n   *\n   * @example\n   *\n   * ```ts\n   * await page.keyboard.type('Hello'); // Types instantly\n   * await page.keyboard.type('World', {delay: 100}); // Types slower, like a user\n   * ```\n   *\n   * @param text - A text to type into a focused element.\n   * @param options - An object of options. Accepts delay which,\n   * if specified, is the time to wait between `keydown` and `keyup` in milliseconds.\n   * Defaults to 0.\n   */\n  abstract type(\n    text: string,\n    options?: Readonly<KeyboardTypeOptions>\n  ): Promise<void>;\n\n  /**\n   * Shortcut for {@link Keyboard.down}\n   * and {@link Keyboard.up}.\n   *\n   * @remarks\n   * If `key` is a single character and no modifier keys besides `Shift`\n   * are being held down, a `keypress`/`input` event will also generated.\n   * The `text` option can be specified to force an input event to be generated.\n   *\n   * Modifier keys DO effect {@link Keyboard.press}.\n   * Holding down `Shift` will type the text in upper case.\n   *\n   * @param key - Name of key to press, such as `ArrowLeft`.\n   * See {@link KeyInput} for a list of all key names.\n   *\n   * @param options - An object of options. Accepts text which, if specified,\n   * generates an input event with this text. Accepts delay which,\n   * if specified, is the time to wait between `keydown` and `keyup` in milliseconds.\n   * Defaults to 0. Accepts commands which, if specified,\n   * is the commands of keyboard shortcuts,\n   * see {@link https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/editing/commands/editor_command_names.h | Chromium Source Code} for valid command names.\n   */\n  abstract press(\n    key: KeyInput,\n    options?: Readonly<KeyPressOptions>\n  ): Promise<void>;\n}\n\n/**\n * @public\n */\nexport interface MouseOptions {\n  /**\n   * Determines which button will be pressed.\n   *\n   * @defaultValue `'left'`\n   */\n  button?: MouseButton;\n  /**\n   * Determines the click count for the mouse event. This does not perform\n   * multiple clicks.\n   *\n   * @deprecated Use {@link MouseClickOptions.count}.\n   * @defaultValue `1`\n   */\n  clickCount?: number;\n}\n\n/**\n * @public\n */\nexport interface MouseClickOptions extends MouseOptions {\n  /**\n   * Time (in ms) to delay the mouse release after the mouse press.\n   */\n  delay?: number;\n  /**\n   * Number of clicks to perform.\n   *\n   * @defaultValue `1`\n   */\n  count?: number;\n}\n\n/**\n * @public\n */\nexport interface MouseWheelOptions {\n  deltaX?: number;\n  deltaY?: number;\n}\n\n/**\n * @public\n */\nexport interface MouseMoveOptions {\n  /**\n   * Determines the number of movements to make from the current mouse position\n   * to the new one.\n   *\n   * @defaultValue `1`\n   */\n  steps?: number;\n}\n\n/**\n * Enum of valid mouse buttons.\n *\n * @public\n */\nexport const MouseButton = Object.freeze({\n  Left: 'left',\n  Right: 'right',\n  Middle: 'middle',\n  Back: 'back',\n  Forward: 'forward',\n}) satisfies Record<string, Protocol.Input.MouseButton>;\n\n/**\n * @public\n */\nexport type MouseButton = (typeof MouseButton)[keyof typeof MouseButton];\n\n/**\n * The Mouse class operates in main-frame CSS pixels\n * relative to the top-left corner of the viewport.\n * @remarks\n * Every `page` object has its own Mouse, accessible with [`page.mouse`](#pagemouse).\n *\n * @example\n *\n * ```ts\n * // Using ‘page.mouse’ to trace a 100x100 square.\n * await page.mouse.move(0, 0);\n * await page.mouse.down();\n * await page.mouse.move(0, 100);\n * await page.mouse.move(100, 100);\n * await page.mouse.move(100, 0);\n * await page.mouse.move(0, 0);\n * await page.mouse.up();\n * ```\n *\n * **Note**: The mouse events trigger synthetic `MouseEvent`s.\n * This means that it does not fully replicate the functionality of what a normal user\n * would be able to do with their mouse.\n *\n * For example, dragging and selecting text is not possible using `page.mouse`.\n * Instead, you can use the {@link https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/getSelection | `DocumentOrShadowRoot.getSelection()`} functionality implemented in the platform.\n *\n * @example\n * For example, if you want to select all content between nodes:\n *\n * ```ts\n * await page.evaluate(\n *   (from, to) => {\n *     const selection = from.getRootNode().getSelection();\n *     const range = document.createRange();\n *     range.setStartBefore(from);\n *     range.setEndAfter(to);\n *     selection.removeAllRanges();\n *     selection.addRange(range);\n *   },\n *   fromJSHandle,\n *   toJSHandle\n * );\n * ```\n *\n * If you then would want to copy-paste your selection, you can use the clipboard api:\n *\n * ```ts\n * // The clipboard api does not allow you to copy, unless the tab is focused.\n * await page.bringToFront();\n * await page.evaluate(() => {\n *   // Copy the selected content to the clipboard\n *   document.execCommand('copy');\n *   // Obtain the content of the clipboard as a string\n *   return navigator.clipboard.readText();\n * });\n * ```\n *\n * **Note**: If you want access to the clipboard API,\n * you have to give it permission to do so:\n *\n * ```ts\n * await browser\n *   .defaultBrowserContext()\n *   .overridePermissions('<your origin>', [\n *     'clipboard-read',\n *     'clipboard-write',\n *   ]);\n * ```\n *\n * @public\n */\nexport abstract class Mouse {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Resets the mouse to the default state: No buttons pressed; position at\n   * (0,0).\n   */\n  abstract reset(): Promise<void>;\n\n  /**\n   * Moves the mouse to the given coordinate.\n   *\n   * @param x - Horizontal position of the mouse.\n   * @param y - Vertical position of the mouse.\n   * @param options - Options to configure behavior.\n   */\n  abstract move(\n    x: number,\n    y: number,\n    options?: Readonly<MouseMoveOptions>\n  ): Promise<void>;\n\n  /**\n   * Presses the mouse.\n   *\n   * @param options - Options to configure behavior.\n   */\n  abstract down(options?: Readonly<MouseOptions>): Promise<void>;\n\n  /**\n   * Releases the mouse.\n   *\n   * @param options - Options to configure behavior.\n   */\n  abstract up(options?: Readonly<MouseOptions>): Promise<void>;\n\n  /**\n   * Shortcut for `mouse.move`, `mouse.down` and `mouse.up`.\n   *\n   * @param x - Horizontal position of the mouse.\n   * @param y - Vertical position of the mouse.\n   * @param options - Options to configure behavior.\n   */\n  abstract click(\n    x: number,\n    y: number,\n    options?: Readonly<MouseClickOptions>\n  ): Promise<void>;\n\n  /**\n   * Dispatches a `mousewheel` event.\n   * @param options - Optional: `MouseWheelOptions`.\n   *\n   * @example\n   * An example of zooming into an element:\n   *\n   * ```ts\n   * await page.goto(\n   *   'https://mdn.mozillademos.org/en-US/docs/Web/API/Element/wheel_event$samples/Scaling_an_element_via_the_wheel?revision=1587366'\n   * );\n   *\n   * const elem = await page.$('div');\n   * const boundingBox = await elem.boundingBox();\n   * await page.mouse.move(\n   *   boundingBox.x + boundingBox.width / 2,\n   *   boundingBox.y + boundingBox.height / 2\n   * );\n   *\n   * await page.mouse.wheel({deltaY: -100});\n   * ```\n   */\n  abstract wheel(options?: Readonly<MouseWheelOptions>): Promise<void>;\n\n  /**\n   * Dispatches a `drag` event.\n   * @param start - starting point for drag\n   * @param target - point to drag to\n   */\n  abstract drag(start: Point, target: Point): Promise<Protocol.Input.DragData>;\n\n  /**\n   * Dispatches a `dragenter` event.\n   * @param target - point for emitting `dragenter` event\n   * @param data - drag data containing items and operations mask\n   */\n  abstract dragEnter(\n    target: Point,\n    data: Protocol.Input.DragData\n  ): Promise<void>;\n\n  /**\n   * Dispatches a `dragover` event.\n   * @param target - point for emitting `dragover` event\n   * @param data - drag data containing items and operations mask\n   */\n  abstract dragOver(\n    target: Point,\n    data: Protocol.Input.DragData\n  ): Promise<void>;\n\n  /**\n   * Performs a dragenter, dragover, and drop in sequence.\n   * @param target - point to drop on\n   * @param data - drag data containing items and operations mask\n   */\n  abstract drop(target: Point, data: Protocol.Input.DragData): Promise<void>;\n\n  /**\n   * Performs a drag, dragenter, dragover, and drop in sequence.\n   * @param start - point to drag from\n   * @param target - point to drop on\n   * @param options - An object of options. Accepts delay which,\n   * if specified, is the time to wait between `dragover` and `drop` in milliseconds.\n   * Defaults to 0.\n   */\n  abstract dragAndDrop(\n    start: Point,\n    target: Point,\n    options?: {delay?: number}\n  ): Promise<void>;\n}\n\n/**\n * The Touchscreen class exposes touchscreen events.\n * @public\n */\nexport abstract class Touchscreen {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Dispatches a `touchstart` and `touchend` event.\n   * @param x - Horizontal position of the tap.\n   * @param y - Vertical position of the tap.\n   */\n  async tap(x: number, y: number): Promise<void> {\n    await this.touchStart(x, y);\n    await this.touchEnd();\n  }\n\n  /**\n   * Dispatches a `touchstart` event.\n   * @param x - Horizontal position of the tap.\n   * @param y - Vertical position of the tap.\n   */\n  abstract touchStart(x: number, y: number): Promise<void>;\n\n  /**\n   * Dispatches a `touchMove` event.\n   * @param x - Horizontal position of the move.\n   * @param y - Vertical position of the move.\n   *\n   * @remarks\n   *\n   * Not every `touchMove` call results in a `touchmove` event being emitted,\n   * depending on the browser's optimizations. For example, Chrome\n   * {@link https://developer.chrome.com/blog/a-more-compatible-smoother-touch/#chromes-new-model-the-throttled-async-touchmove-model | throttles}\n   * touch move events.\n   */\n  abstract touchMove(x: number, y: number): Promise<void>;\n\n  /**\n   * Dispatches a `touchend` event.\n   */\n  abstract touchEnd(): Promise<void>;\n}\n", "/**\n * @license\n * Copyright 2019 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nconst DEFAULT_TIMEOUT = 30000;\n\n/**\n * @internal\n */\nexport class TimeoutSettings {\n  #defaultTimeout: number | null;\n  #defaultNavigationTimeout: number | null;\n\n  constructor() {\n    this.#defaultTimeout = null;\n    this.#defaultNavigationTimeout = null;\n  }\n\n  setDefaultTimeout(timeout: number): void {\n    this.#defaultTimeout = timeout;\n  }\n\n  setDefaultNavigationTimeout(timeout: number): void {\n    this.#defaultNavigationTimeout = timeout;\n  }\n\n  navigationTimeout(): number {\n    if (this.#defaultNavigationTimeout !== null) {\n      return this.#defaultNavigationTimeout;\n    }\n    if (this.#defaultTimeout !== null) {\n      return this.#defaultTimeout;\n    }\n    return DEFAULT_TIMEOUT;\n  }\n\n  timeout(): number {\n    if (this.#defaultTimeout !== null) {\n      return this.#defaultTimeout;\n    }\n    return DEFAULT_TIMEOUT;\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {Protocol} from 'devtools-protocol';\n\nimport {\n  concat,\n  EMPTY,\n  filter,\n  first,\n  firstValueFrom,\n  from,\n  map,\n  merge,\n  mergeMap,\n  mergeScan,\n  of,\n  raceWith,\n  ReplaySubject,\n  startWith,\n  switchMap,\n  take,\n  takeUntil,\n  timer,\n  type Observable,\n} from '../../third_party/rxjs/rxjs.js';\nimport type {HTTPRequest} from '../api/HTTPRequest.js';\nimport type {HTTPResponse} from '../api/HTTPResponse.js';\nimport type {Accessibility} from '../cdp/Accessibility.js';\nimport type {Coverage} from '../cdp/Coverage.js';\nimport type {DeviceRequestPrompt} from '../cdp/DeviceRequestPrompt.js';\nimport type {NetworkConditions} from '../cdp/NetworkManager.js';\nimport type {Tracing} from '../cdp/Tracing.js';\nimport type {ConsoleMessage} from '../common/ConsoleMessage.js';\nimport type {\n  Cookie,\n  CookieParam,\n  DeleteCookiesRequest,\n} from '../common/Cookie.js';\nimport type {Device} from '../common/Device.js';\nimport {TargetCloseError} from '../common/Errors.js';\nimport {\n  EventEmitter,\n  type EventsWithWildcard,\n  type EventType,\n  type Handler,\n} from '../common/EventEmitter.js';\nimport type {FileChooser} from '../common/FileChooser.js';\nimport type {PDFOptions} from '../common/PDFOptions.js';\nimport {TimeoutSettings} from '../common/TimeoutSettings.js';\nimport type {\n  Awaitable,\n  AwaitablePredicate,\n  EvaluateFunc,\n  EvaluateFuncWith,\n  HandleFor,\n  NodeFor,\n} from '../common/types.js';\nimport {\n  debugError,\n  fromEmitterEvent,\n  filterAsync,\n  importFSPromises,\n  isString,\n  NETWORK_IDLE_TIME,\n  timeout,\n  withSourcePuppeteerURLIfNone,\n} from '../common/util.js';\nimport type {Viewport} from '../common/Viewport.js';\nimport type {ScreenRecorder} from '../node/ScreenRecorder.js';\nimport {guarded} from '../util/decorators.js';\nimport {\n  AsyncDisposableStack,\n  asyncDisposeSymbol,\n  DisposableStack,\n  disposeSymbol,\n} from '../util/disposable.js';\n\nimport type {Browser} from './Browser.js';\nimport type {BrowserContext} from './BrowserContext.js';\nimport type {CDPSession} from './CDPSession.js';\nimport type {Dialog} from './Dialog.js';\nimport type {\n  BoundingBox,\n  ClickOptions,\n  ElementHandle,\n} from './ElementHandle.js';\nimport type {\n  Frame,\n  FrameAddScriptTagOptions,\n  FrameAddStyleTagOptions,\n  FrameWaitForFunctionOptions,\n  GoToOptions,\n  WaitForOptions,\n} from './Frame.js';\nimport type {\n  Keyboard,\n  KeyboardTypeOptions,\n  Mouse,\n  Touchscreen,\n} from './Input.js';\nimport type {JSHandle} from './JSHandle.js';\nimport {\n  FunctionLocator,\n  Locator,\n  NodeLocator,\n  type AwaitedLocator,\n} from './locators/locators.js';\nimport type {Target} from './Target.js';\nimport type {WebWorker} from './WebWorker.js';\n\n/**\n * @public\n */\nexport interface Metrics {\n  Timestamp?: number;\n  Documents?: number;\n  Frames?: number;\n  JSEventListeners?: number;\n  Nodes?: number;\n  LayoutCount?: number;\n  RecalcStyleCount?: number;\n  LayoutDuration?: number;\n  RecalcStyleDuration?: number;\n  ScriptDuration?: number;\n  TaskDuration?: number;\n  JSHeapUsedSize?: number;\n  JSHeapTotalSize?: number;\n}\n\n/**\n * @public\n */\nexport interface Credentials {\n  username: string;\n  password: string;\n}\n\n/**\n * @public\n */\nexport interface WaitForNetworkIdleOptions extends WaitTimeoutOptions {\n  /**\n   * Time (in milliseconds) the network should be idle.\n   *\n   * @defaultValue `500`\n   */\n  idleTime?: number;\n  /**\n   * Maximum number concurrent of network connections to be considered inactive.\n   *\n   * @defaultValue `0`\n   */\n  concurrency?: number;\n}\n\n/**\n * @public\n */\nexport interface WaitTimeoutOptions {\n  /**\n   * Maximum wait time in milliseconds. Pass 0 to disable the timeout.\n   *\n   * The default value can be changed by using the\n   * {@link Page.setDefaultTimeout} method.\n   *\n   * @defaultValue `30000`\n   */\n  timeout?: number;\n}\n\n/**\n * @public\n */\nexport interface WaitForSelectorOptions {\n  /**\n   * Wait for the selected element to be present in DOM and to be visible, i.e.\n   * to not have `display: none` or `visibility: hidden` CSS properties.\n   *\n   * @defaultValue `false`\n   */\n  visible?: boolean;\n  /**\n   * Wait for the selected element to not be found in the DOM or to be hidden,\n   * i.e. have `display: none` or `visibility: hidden` CSS properties.\n   *\n   * @defaultValue `false`\n   */\n  hidden?: boolean;\n  /**\n   * Maximum time to wait in milliseconds. Pass `0` to disable timeout.\n   *\n   * The default value can be changed by using {@link Page.setDefaultTimeout}\n   *\n   * @defaultValue `30_000` (30 seconds)\n   */\n  timeout?: number;\n  /**\n   * A signal object that allows you to cancel a waitForSelector call.\n   */\n  signal?: AbortSignal;\n}\n\n/**\n * @public\n */\nexport interface GeolocationOptions {\n  /**\n   * Latitude between `-90` and `90`.\n   */\n  longitude: number;\n  /**\n   * Longitude between `-180` and `180`.\n   */\n  latitude: number;\n  /**\n   * Optional non-negative accuracy value.\n   */\n  accuracy?: number;\n}\n\n/**\n * @public\n */\nexport interface MediaFeature {\n  name: string;\n  value: string;\n}\n\n/**\n * @public\n */\nexport interface ScreenshotClip extends BoundingBox {\n  /**\n   * @defaultValue `1`\n   */\n  scale?: number;\n}\n\n/**\n * @public\n */\nexport interface ScreenshotOptions {\n  /**\n   * @defaultValue `false`\n   */\n  optimizeForSpeed?: boolean;\n  /**\n   * @defaultValue `'png'`\n   */\n  type?: 'png' | 'jpeg' | 'webp';\n  /**\n   * Quality of the image, between 0-100. Not applicable to `png` images.\n   */\n  quality?: number;\n  /**\n   * Capture the screenshot from the surface, rather than the view.\n   *\n   * @defaultValue `true`\n   */\n  fromSurface?: boolean;\n  /**\n   * When `true`, takes a screenshot of the full page.\n   *\n   * @defaultValue `false`\n   */\n  fullPage?: boolean;\n  /**\n   * Hides default white background and allows capturing screenshots with transparency.\n   *\n   * @defaultValue `false`\n   */\n  omitBackground?: boolean;\n  /**\n   * The file path to save the image to. The screenshot type will be inferred\n   * from file extension. If path is a relative path, then it is resolved\n   * relative to current working directory. If no path is provided, the image\n   * won't be saved to the disk.\n   */\n  path?: string;\n  /**\n   * Specifies the region of the page/element to clip.\n   */\n  clip?: ScreenshotClip;\n  /**\n   * Encoding of the image.\n   *\n   * @defaultValue `'binary'`\n   */\n  encoding?: 'base64' | 'binary';\n  /**\n   * Capture the screenshot beyond the viewport.\n   *\n   * @defaultValue `false` if there is no `clip`. `true` otherwise.\n   */\n  captureBeyondViewport?: boolean;\n}\n\n/**\n * @public\n * @experimental\n */\nexport interface ScreencastOptions {\n  /**\n   * File path to save the screencast to.\n   */\n  path?: `${string}.webm`;\n  /**\n   * Specifies the region of the viewport to crop.\n   */\n  crop?: BoundingBox;\n  /**\n   * Scales the output video.\n   *\n   * For example, `0.5` will shrink the width and height of the output video by\n   * half. `2` will double the width and height of the output video.\n   *\n   * @defaultValue `1`\n   */\n  scale?: number;\n  /**\n   * Specifies the speed to record at.\n   *\n   * For example, `0.5` will slowdown the output video by 50%. `2` will double the\n   * speed of the output video.\n   *\n   * @defaultValue `1`\n   */\n  speed?: number;\n  /**\n   * Path to the [ffmpeg](https://ffmpeg.org/).\n   *\n   * Required if `ffmpeg` is not in your PATH.\n   */\n  ffmpegPath?: string;\n}\n\n/**\n * All the events that a page instance may emit.\n *\n * @public\n */\nexport const enum PageEvent {\n  /**\n   * Emitted when the page closes.\n   */\n  Close = 'close',\n  /**\n   * Emitted when JavaScript within the page calls one of console API methods,\n   * e.g. `console.log` or `console.dir`. Also emitted if the page throws an\n   * error or a warning.\n   *\n   * @remarks\n   * A `console` event provides a {@link ConsoleMessage} representing the\n   * console message that was logged.\n   *\n   * @example\n   * An example of handling `console` event:\n   *\n   * ```ts\n   * page.on('console', msg => {\n   *   for (let i = 0; i < msg.args().length; ++i)\n   *     console.log(`${i}: ${msg.args()[i]}`);\n   * });\n   * page.evaluate(() => console.log('hello', 5, {foo: 'bar'}));\n   * ```\n   */\n  Console = 'console',\n  /**\n   * Emitted when a JavaScript dialog appears, such as `alert`, `prompt`,\n   * `confirm` or `beforeunload`. Puppeteer can respond to the dialog via\n   * {@link Dialog.accept} or {@link Dialog.dismiss}.\n   */\n  Dialog = 'dialog',\n  /**\n   * Emitted when the JavaScript\n   * {@link https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded | DOMContentLoaded }\n   * event is dispatched.\n   */\n  DOMContentLoaded = 'domcontentloaded',\n  /**\n   * Emitted when the page crashes. Will contain an `Error`.\n   */\n  Error = 'error',\n  /** Emitted when a frame is attached. Will contain a {@link Frame}. */\n  FrameAttached = 'frameattached',\n  /** Emitted when a frame is detached. Will contain a {@link Frame}. */\n  FrameDetached = 'framedetached',\n  /**\n   * Emitted when a frame is navigated to a new URL. Will contain a\n   * {@link Frame}.\n   */\n  FrameNavigated = 'framenavigated',\n  /**\n   * Emitted when the JavaScript\n   * {@link https://developer.mozilla.org/en-US/docs/Web/Events/load | load}\n   * event is dispatched.\n   */\n  Load = 'load',\n  /**\n   * Emitted when the JavaScript code makes a call to `console.timeStamp`. For\n   * the list of metrics see {@link Page.metrics | page.metrics}.\n   *\n   * @remarks\n   * Contains an object with two properties:\n   *\n   * - `title`: the title passed to `console.timeStamp`\n   * - `metrics`: object containing metrics as key/value pairs. The values will\n   *   be `number`s.\n   */\n  Metrics = 'metrics',\n  /**\n   * Emitted when an uncaught exception happens within the page. Contains an\n   * `Error`.\n   */\n  PageError = 'pageerror',\n  /**\n   * Emitted when the page opens a new tab or window.\n   *\n   * Contains a {@link Page} corresponding to the popup window.\n   *\n   * @example\n   *\n   * ```ts\n   * const [popup] = await Promise.all([\n   *   new Promise(resolve => page.once('popup', resolve)),\n   *   page.click('a[target=_blank]'),\n   * ]);\n   * ```\n   *\n   * ```ts\n   * const [popup] = await Promise.all([\n   *   new Promise(resolve => page.once('popup', resolve)),\n   *   page.evaluate(() => window.open('https://example.com')),\n   * ]);\n   * ```\n   */\n  Popup = 'popup',\n  /**\n   * Emitted when a page issues a request and contains a {@link HTTPRequest}.\n   *\n   * @remarks\n   * The object is readonly. See {@link Page.setRequestInterception} for\n   * intercepting and mutating requests.\n   */\n  Request = 'request',\n  /**\n   * Emitted when a request ended up loading from cache. Contains a\n   * {@link HTTPRequest}.\n   *\n   * @remarks\n   * For certain requests, might contain undefined.\n   * {@link https://crbug.com/750469}\n   */\n  RequestServedFromCache = 'requestservedfromcache',\n  /**\n   * Emitted when a request fails, for example by timing out.\n   *\n   * Contains a {@link HTTPRequest}.\n   *\n   * @remarks\n   * HTTP Error responses, such as 404 or 503, are still successful responses\n   * from HTTP standpoint, so request will complete with `requestfinished` event\n   * and not with `requestfailed`.\n   */\n  RequestFailed = 'requestfailed',\n  /**\n   * Emitted when a request finishes successfully. Contains a\n   * {@link HTTPRequest}.\n   */\n  RequestFinished = 'requestfinished',\n  /**\n   * Emitted when a response is received. Contains a {@link HTTPResponse}.\n   */\n  Response = 'response',\n  /**\n   * Emitted when a dedicated\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API | WebWorker}\n   * is spawned by the page.\n   */\n  WorkerCreated = 'workercreated',\n  /**\n   * Emitted when a dedicated\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API | WebWorker}\n   * is destroyed by the page.\n   */\n  WorkerDestroyed = 'workerdestroyed',\n}\n\n/**\n * Denotes the objects received by callback functions for page events.\n *\n * See {@link PageEvent} for more detail on the events and when they are\n * emitted.\n *\n * @public\n */\nexport interface PageEvents extends Record<EventType, unknown> {\n  [PageEvent.Close]: undefined;\n  [PageEvent.Console]: ConsoleMessage;\n  [PageEvent.Dialog]: Dialog;\n  [PageEvent.DOMContentLoaded]: undefined;\n  [PageEvent.Error]: Error;\n  [PageEvent.FrameAttached]: Frame;\n  [PageEvent.FrameDetached]: Frame;\n  [PageEvent.FrameNavigated]: Frame;\n  [PageEvent.Load]: undefined;\n  [PageEvent.Metrics]: {title: string; metrics: Metrics};\n  [PageEvent.PageError]: Error;\n  [PageEvent.Popup]: Page | null;\n  [PageEvent.Request]: HTTPRequest;\n  [PageEvent.Response]: HTTPResponse;\n  [PageEvent.RequestFailed]: HTTPRequest;\n  [PageEvent.RequestFinished]: HTTPRequest;\n  [PageEvent.RequestServedFromCache]: HTTPRequest;\n  [PageEvent.WorkerCreated]: WebWorker;\n  [PageEvent.WorkerDestroyed]: WebWorker;\n}\n\n/**\n * @public\n */\nexport interface NewDocumentScriptEvaluation {\n  identifier: string;\n}\n\n/**\n * @internal\n */\nexport function setDefaultScreenshotOptions(options: ScreenshotOptions): void {\n  options.optimizeForSpeed ??= false;\n  options.type ??= 'png';\n  options.fromSurface ??= true;\n  options.fullPage ??= false;\n  options.omitBackground ??= false;\n  options.encoding ??= 'binary';\n  options.captureBeyondViewport ??= true;\n}\n\n/**\n * Page provides methods to interact with a single tab or\n * {@link https://developer.chrome.com/extensions/background_pages | extension background page}\n * in the browser.\n *\n * :::note\n *\n * One Browser instance might have multiple Page instances.\n *\n * :::\n *\n * @example\n * This example creates a page, navigates it to a URL, and then saves a screenshot:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://example.com');\n *   await page.screenshot({path: 'screenshot.png'});\n *   await browser.close();\n * })();\n * ```\n *\n * The Page class extends from Puppeteer's {@link EventEmitter} class and will\n * emit various events which are documented in the {@link PageEvent} enum.\n *\n * @example\n * This example logs a message for a single page `load` event:\n *\n * ```ts\n * page.once('load', () => console.log('Page loaded!'));\n * ```\n *\n * To unsubscribe from events use the {@link EventEmitter.off} method:\n *\n * ```ts\n * function logRequest(interceptedRequest) {\n *   console.log('A request was made:', interceptedRequest.url());\n * }\n * page.on('request', logRequest);\n * // Sometime later...\n * page.off('request', logRequest);\n * ```\n *\n * @public\n */\nexport abstract class Page extends EventEmitter<PageEvents> {\n  /**\n   * @internal\n   */\n  _isDragging = false;\n  /**\n   * @internal\n   */\n  _timeoutSettings = new TimeoutSettings();\n\n  #requestHandlers = new WeakMap<Handler<HTTPRequest>, Handler<HTTPRequest>>();\n\n  #inflight$ = new ReplaySubject<number>(1);\n\n  /**\n   * @internal\n   */\n  constructor() {\n    super();\n\n    fromEmitterEvent(this, PageEvent.Request)\n      .pipe(\n        mergeMap(originalRequest => {\n          return concat(\n            of(1),\n            merge(\n              fromEmitterEvent(this, PageEvent.RequestFailed),\n              fromEmitterEvent(this, PageEvent.RequestFinished),\n              fromEmitterEvent(this, PageEvent.Response).pipe(\n                map(response => {\n                  return response.request();\n                })\n              )\n            ).pipe(\n              filter(request => {\n                return request.id === originalRequest.id;\n              }),\n              take(1),\n              map(() => {\n                return -1;\n              })\n            )\n          );\n        }),\n        mergeScan((acc, addend) => {\n          return of(acc + addend);\n        }, 0),\n        takeUntil(fromEmitterEvent(this, PageEvent.Close)),\n        startWith(0)\n      )\n      .subscribe(this.#inflight$);\n  }\n\n  /**\n   * `true` if the service worker are being bypassed, `false` otherwise.\n   */\n  abstract isServiceWorkerBypassed(): boolean;\n\n  /**\n   * `true` if drag events are being intercepted, `false` otherwise.\n   *\n   * @deprecated We no longer support intercepting drag payloads. Use the new\n   * drag APIs found on {@link ElementHandle} to drag (or just use the\n   * {@link Page.mouse}).\n   */\n  abstract isDragInterceptionEnabled(): boolean;\n\n  /**\n   * `true` if the page has JavaScript enabled, `false` otherwise.\n   */\n  abstract isJavaScriptEnabled(): boolean;\n\n  /**\n   * Listen to page events.\n   *\n   * @remarks\n   * This method exists to define event typings and handle proper wireup of\n   * cooperative request interception. Actual event listening and dispatching is\n   * delegated to {@link EventEmitter}.\n   *\n   * @internal\n   */\n  override on<K extends keyof EventsWithWildcard<PageEvents>>(\n    type: K,\n    handler: (event: EventsWithWildcard<PageEvents>[K]) => void\n  ): this {\n    if (type !== PageEvent.Request) {\n      return super.on(type, handler);\n    }\n    let wrapper = this.#requestHandlers.get(\n      handler as (event: PageEvents[PageEvent.Request]) => void\n    );\n    if (wrapper === undefined) {\n      wrapper = (event: HTTPRequest) => {\n        event.enqueueInterceptAction(() => {\n          return handler(event as EventsWithWildcard<PageEvents>[K]);\n        });\n      };\n      this.#requestHandlers.set(\n        handler as (event: PageEvents[PageEvent.Request]) => void,\n        wrapper\n      );\n    }\n    return super.on(\n      type,\n      wrapper as (event: EventsWithWildcard<PageEvents>[K]) => void\n    );\n  }\n\n  /**\n   * @internal\n   */\n  override off<K extends keyof EventsWithWildcard<PageEvents>>(\n    type: K,\n    handler: (event: EventsWithWildcard<PageEvents>[K]) => void\n  ): this {\n    if (type === PageEvent.Request) {\n      handler =\n        (this.#requestHandlers.get(\n          handler as (\n            event: EventsWithWildcard<PageEvents>[PageEvent.Request]\n          ) => void\n        ) as (event: EventsWithWildcard<PageEvents>[K]) => void) || handler;\n    }\n    return super.off(type, handler);\n  }\n\n  /**\n   * This method is typically coupled with an action that triggers file\n   * choosing.\n   *\n   * :::caution\n   *\n   * This must be called before the file chooser is launched. It will not return\n   * a currently active file chooser.\n   *\n   * :::\n   *\n   * @remarks\n   * In the \"headful\" browser, this method results in the native file picker\n   * dialog `not showing up` for the user.\n   *\n   * @example\n   * The following example clicks a button that issues a file chooser\n   * and then responds with `/tmp/myfile.pdf` as if a user has selected this file.\n   *\n   * ```ts\n   * const [fileChooser] = await Promise.all([\n   *   page.waitForFileChooser(),\n   *   page.click('#upload-file-button'),\n   *   // some button that triggers file selection\n   * ]);\n   * await fileChooser.accept(['/tmp/myfile.pdf']);\n   * ```\n   */\n  abstract waitForFileChooser(\n    options?: WaitTimeoutOptions\n  ): Promise<FileChooser>;\n\n  /**\n   * Sets the page's geolocation.\n   *\n   * @remarks\n   * Consider using {@link BrowserContext.overridePermissions} to grant\n   * permissions for the page to read its geolocation.\n   *\n   * @example\n   *\n   * ```ts\n   * await page.setGeolocation({latitude: 59.95, longitude: 30.31667});\n   * ```\n   */\n  abstract setGeolocation(options: GeolocationOptions): Promise<void>;\n\n  /**\n   * A target this page was created from.\n   *\n   * @deprecated Use {@link Page.createCDPSession} directly.\n   */\n  abstract target(): Target;\n\n  /**\n   * Get the browser the page belongs to.\n   */\n  abstract browser(): Browser;\n\n  /**\n   * Get the browser context that the page belongs to.\n   */\n  abstract browserContext(): BrowserContext;\n\n  /**\n   * The page's main frame.\n   *\n   * @remarks\n   * Page is guaranteed to have a main frame which persists during navigations.\n   */\n  abstract mainFrame(): Frame;\n\n  /**\n   * Creates a Chrome Devtools Protocol session attached to the page.\n   */\n  abstract createCDPSession(): Promise<CDPSession>;\n\n  /**\n   * {@inheritDoc Keyboard}\n   */\n  abstract get keyboard(): Keyboard;\n\n  /**\n   * {@inheritDoc Touchscreen}\n   */\n  abstract get touchscreen(): Touchscreen;\n\n  /**\n   * {@inheritDoc Coverage}\n   */\n  abstract get coverage(): Coverage;\n\n  /**\n   * {@inheritDoc Tracing}\n   */\n  abstract get tracing(): Tracing;\n\n  /**\n   * {@inheritDoc Accessibility}\n   */\n  abstract get accessibility(): Accessibility;\n\n  /**\n   * An array of all frames attached to the page.\n   */\n  abstract frames(): Frame[];\n\n  /**\n   * All of the dedicated {@link\n   * https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API |\n   * WebWorkers} associated with the page.\n   *\n   * @remarks\n   * This does not contain ServiceWorkers\n   */\n  abstract workers(): WebWorker[];\n\n  /**\n   * Activating request interception enables {@link HTTPRequest.abort},\n   * {@link HTTPRequest.continue} and {@link HTTPRequest.respond} methods. This\n   * provides the capability to modify network requests that are made by a page.\n   *\n   * Once request interception is enabled, every request will stall unless it's\n   * continued, responded or aborted; or completed using the browser cache.\n   *\n   * See the\n   * {@link https://pptr.dev/guides/network-interception|Request interception guide}\n   * for more details.\n   *\n   * @example\n   * An example of a naïve request interceptor that aborts all image requests:\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   await page.setRequestInterception(true);\n   *   page.on('request', interceptedRequest => {\n   *     if (\n   *       interceptedRequest.url().endsWith('.png') ||\n   *       interceptedRequest.url().endsWith('.jpg')\n   *     )\n   *       interceptedRequest.abort();\n   *     else interceptedRequest.continue();\n   *   });\n   *   await page.goto('https://example.com');\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param value - Whether to enable request interception.\n   */\n  abstract setRequestInterception(value: boolean): Promise<void>;\n\n  /**\n   * Toggles ignoring of service worker for each request.\n   *\n   * @param bypass - Whether to bypass service worker and load from network.\n   */\n  abstract setBypassServiceWorker(bypass: boolean): Promise<void>;\n\n  /**\n   * @param enabled - Whether to enable drag interception.\n   *\n   * @deprecated We no longer support intercepting drag payloads. Use the new\n   * drag APIs found on {@link ElementHandle} to drag (or just use the\n   * {@link Page.mouse}).\n   */\n  abstract setDragInterception(enabled: boolean): Promise<void>;\n\n  /**\n   * Sets the network connection to offline.\n   *\n   * It does not change the parameters used in {@link Page.emulateNetworkConditions}\n   *\n   * @param enabled - When `true`, enables offline mode for the page.\n   */\n  abstract setOfflineMode(enabled: boolean): Promise<void>;\n\n  /**\n   * This does not affect WebSockets and WebRTC PeerConnections (see\n   * https://crbug.com/563644). To set the page offline, you can use\n   * {@link Page.setOfflineMode}.\n   *\n   * A list of predefined network conditions can be used by importing\n   * {@link PredefinedNetworkConditions}.\n   *\n   * @example\n   *\n   * ```ts\n   * import {PredefinedNetworkConditions} from 'puppeteer';\n   * const slow3G = PredefinedNetworkConditions['Slow 3G'];\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   await page.emulateNetworkConditions(slow3G);\n   *   await page.goto('https://www.google.com');\n   *   // other actions...\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param networkConditions - Passing `null` disables network condition\n   * emulation.\n   */\n  abstract emulateNetworkConditions(\n    networkConditions: NetworkConditions | null\n  ): Promise<void>;\n\n  /**\n   * This setting will change the default maximum navigation time for the\n   * following methods and related shortcuts:\n   *\n   * - {@link Page.goBack | page.goBack(options)}\n   *\n   * - {@link Page.goForward | page.goForward(options)}\n   *\n   * - {@link Page.goto | page.goto(url,options)}\n   *\n   * - {@link Page.reload | page.reload(options)}\n   *\n   * - {@link Page.setContent | page.setContent(html,options)}\n   *\n   * - {@link Page.waitForNavigation | page.waitForNavigation(options)}\n   *   @param timeout - Maximum navigation time in milliseconds.\n   */\n  abstract setDefaultNavigationTimeout(timeout: number): void;\n\n  /**\n   * @param timeout - Maximum time in milliseconds.\n   */\n  abstract setDefaultTimeout(timeout: number): void;\n\n  /**\n   * Maximum time in milliseconds.\n   */\n  abstract getDefaultTimeout(): number;\n\n  /**\n   * Creates a locator for the provided selector. See {@link Locator} for\n   * details and supported actions.\n   *\n   * @remarks\n   * Locators API is experimental and we will not follow semver for breaking\n   * change in the Locators API.\n   */\n  locator<Selector extends string>(\n    selector: Selector\n  ): Locator<NodeFor<Selector>>;\n\n  /**\n   * Creates a locator for the provided function. See {@link Locator} for\n   * details and supported actions.\n   *\n   * @remarks\n   * Locators API is experimental and we will not follow semver for breaking\n   * change in the Locators API.\n   */\n  locator<Ret>(func: () => Awaitable<Ret>): Locator<Ret>;\n  locator<Selector extends string, Ret>(\n    selectorOrFunc: Selector | (() => Awaitable<Ret>)\n  ): Locator<NodeFor<Selector>> | Locator<Ret> {\n    if (typeof selectorOrFunc === 'string') {\n      return NodeLocator.create(this, selectorOrFunc);\n    } else {\n      return FunctionLocator.create(this, selectorOrFunc);\n    }\n  }\n\n  /**\n   * A shortcut for {@link Locator.race} that does not require static imports.\n   *\n   * @internal\n   */\n  locatorRace<Locators extends readonly unknown[] | []>(\n    locators: Locators\n  ): Locator<AwaitedLocator<Locators[number]>> {\n    return Locator.race(locators);\n  }\n\n  /**\n   * Runs `document.querySelector` within the page. If no element matches the\n   * selector, the return value resolves to `null`.\n   *\n   * @param selector - A `selector` to query page for\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * to query page for.\n   */\n  async $<Selector extends string>(\n    selector: Selector\n  ): Promise<ElementHandle<NodeFor<Selector>> | null> {\n    return await this.mainFrame().$(selector);\n  }\n\n  /**\n   * The method runs `document.querySelectorAll` within the page. If no elements\n   * match the selector, the return value resolves to `[]`.\n   *\n   * @param selector - A `selector` to query page for\n   *\n   * @remarks\n   *\n   * Shortcut for {@link Frame.$$ | Page.mainFrame().$$(selector) }.\n   */\n  async $$<Selector extends string>(\n    selector: Selector\n  ): Promise<Array<ElementHandle<NodeFor<Selector>>>> {\n    return await this.mainFrame().$$(selector);\n  }\n\n  /**\n   * @remarks\n   *\n   * The only difference between {@link Page.evaluate | page.evaluate} and\n   * `page.evaluateHandle` is that `evaluateHandle` will return the value\n   * wrapped in an in-page object.\n   *\n   * If the function passed to `page.evaluateHandle` returns a Promise, the\n   * function will wait for the promise to resolve and return its value.\n   *\n   * You can pass a string instead of a function (although functions are\n   * recommended as they are easier to debug and use with TypeScript):\n   *\n   * @example\n   *\n   * ```ts\n   * const aHandle = await page.evaluateHandle('document');\n   * ```\n   *\n   * @example\n   * {@link JSHandle} instances can be passed as arguments to the `pageFunction`:\n   *\n   * ```ts\n   * const aHandle = await page.evaluateHandle(() => document.body);\n   * const resultHandle = await page.evaluateHandle(\n   *   body => body.innerHTML,\n   *   aHandle\n   * );\n   * console.log(await resultHandle.jsonValue());\n   * await resultHandle.dispose();\n   * ```\n   *\n   * Most of the time this function returns a {@link JSHandle},\n   * but if `pageFunction` returns a reference to an element,\n   * you instead get an {@link ElementHandle} back:\n   *\n   * @example\n   *\n   * ```ts\n   * const button = await page.evaluateHandle(() =>\n   *   document.querySelector('button')\n   * );\n   * // can call `click` because `button` is an `ElementHandle`\n   * await button.click();\n   * ```\n   *\n   * The TypeScript definitions assume that `evaluateHandle` returns\n   * a `JSHandle`, but if you know it's going to return an\n   * `ElementHandle`, pass it as the generic argument:\n   *\n   * ```ts\n   * const button = await page.evaluateHandle<ElementHandle>(...);\n   * ```\n   *\n   * @param pageFunction - a function that is run within the page\n   * @param args - arguments to be passed to the pageFunction\n   */\n  async evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>,\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(\n      this.evaluateHandle.name,\n      pageFunction\n    );\n    return await this.mainFrame().evaluateHandle(pageFunction, ...args);\n  }\n\n  /**\n   * This method iterates the JavaScript heap and finds all objects with the\n   * given prototype.\n   *\n   * @example\n   *\n   * ```ts\n   * // Create a Map object\n   * await page.evaluate(() => (window.map = new Map()));\n   * // Get a handle to the Map object prototype\n   * const mapPrototype = await page.evaluateHandle(() => Map.prototype);\n   * // Query all map instances into an array\n   * const mapInstances = await page.queryObjects(mapPrototype);\n   * // Count amount of map objects in heap\n   * const count = await page.evaluate(maps => maps.length, mapInstances);\n   * await mapInstances.dispose();\n   * await mapPrototype.dispose();\n   * ```\n   *\n   * @param prototypeHandle - a handle to the object prototype.\n   * @returns Promise which resolves to a handle to an array of objects with\n   * this prototype.\n   */\n  abstract queryObjects<Prototype>(\n    prototypeHandle: JSHandle<Prototype>\n  ): Promise<JSHandle<Prototype[]>>;\n\n  /**\n   * This method runs `document.querySelector` within the page and passes the\n   * result as the first argument to the `pageFunction`.\n   *\n   * @remarks\n   *\n   * If no element is found matching `selector`, the method will throw an error.\n   *\n   * If `pageFunction` returns a promise `$eval` will wait for the promise to\n   * resolve and then return its value.\n   *\n   * @example\n   *\n   * ```ts\n   * const searchValue = await page.$eval('#search', el => el.value);\n   * const preloadHref = await page.$eval('link[rel=preload]', el => el.href);\n   * const html = await page.$eval('.main-container', el => el.outerHTML);\n   * ```\n   *\n   * If you are using TypeScript, you may have to provide an explicit type to the\n   * first argument of the `pageFunction`.\n   * By default it is typed as `Element`, but you may need to provide a more\n   * specific sub-type:\n   *\n   * @example\n   *\n   * ```ts\n   * // if you don't provide HTMLInputElement here, TS will error\n   * // as `value` is not on `Element`\n   * const searchValue = await page.$eval(\n   *   '#search',\n   *   (el: HTMLInputElement) => el.value\n   * );\n   * ```\n   *\n   * The compiler should be able to infer the return type\n   * from the `pageFunction` you provide. If it is unable to, you can use the generic\n   * type to tell the compiler what return type you expect from `$eval`:\n   *\n   * @example\n   *\n   * ```ts\n   * // The compiler can infer the return type in this case, but if it can't\n   * // or if you want to be more explicit, provide it as the generic type.\n   * const searchValue = await page.$eval<string>(\n   *   '#search',\n   *   (el: HTMLInputElement) => el.value\n   * );\n   * ```\n   *\n   * @param selector - the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * to query for\n   * @param pageFunction - the function to be evaluated in the page context.\n   * Will be passed the result of `document.querySelector(selector)` as its\n   * first argument.\n   * @param args - any additional arguments to pass through to `pageFunction`.\n   *\n   * @returns The result of calling `pageFunction`. If it returns an element it\n   * is wrapped in an {@link ElementHandle}, else the raw value itself is\n   * returned.\n   */\n  async $eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<NodeFor<Selector>, Params> = EvaluateFuncWith<\n      NodeFor<Selector>,\n      Params\n    >,\n  >(\n    selector: Selector,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$eval.name, pageFunction);\n    return await this.mainFrame().$eval(selector, pageFunction, ...args);\n  }\n\n  /**\n   * This method runs `Array.from(document.querySelectorAll(selector))` within\n   * the page and passes the result as the first argument to the `pageFunction`.\n   *\n   * @remarks\n   * If `pageFunction` returns a promise `$$eval` will wait for the promise to\n   * resolve and then return its value.\n   *\n   * @example\n   *\n   * ```ts\n   * // get the amount of divs on the page\n   * const divCount = await page.$$eval('div', divs => divs.length);\n   *\n   * // get the text content of all the `.options` elements:\n   * const options = await page.$$eval('div > span.options', options => {\n   *   return options.map(option => option.textContent);\n   * });\n   * ```\n   *\n   * If you are using TypeScript, you may have to provide an explicit type to the\n   * first argument of the `pageFunction`.\n   * By default it is typed as `Element[]`, but you may need to provide a more\n   * specific sub-type:\n   *\n   * @example\n   *\n   * ```ts\n   * await page.$$eval('input', elements => {\n   *   return elements.map(e => e.value);\n   * });\n   * ```\n   *\n   * The compiler should be able to infer the return type\n   * from the `pageFunction` you provide. If it is unable to, you can use the generic\n   * type to tell the compiler what return type you expect from `$$eval`:\n   *\n   * @example\n   *\n   * ```ts\n   * const allInputValues = await page.$$eval('input', elements =>\n   *   elements.map(e => e.textContent)\n   * );\n   * ```\n   *\n   * @param selector - the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * to query for\n   * @param pageFunction - the function to be evaluated in the page context.\n   * Will be passed the result of\n   * `Array.from(document.querySelectorAll(selector))` as its first argument.\n   * @param args - any additional arguments to pass through to `pageFunction`.\n   *\n   * @returns The result of calling `pageFunction`. If it returns an element it\n   * is wrapped in an {@link ElementHandle}, else the raw value itself is\n   * returned.\n   */\n  async $$eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<\n      Array<NodeFor<Selector>>,\n      Params\n    > = EvaluateFuncWith<Array<NodeFor<Selector>>, Params>,\n  >(\n    selector: Selector,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$$eval.name, pageFunction);\n    return await this.mainFrame().$$eval(selector, pageFunction, ...args);\n  }\n\n  /**\n   * If no URLs are specified, this method returns cookies for the current page\n   * URL. If URLs are specified, only cookies for those URLs are returned.\n   */\n  abstract cookies(...urls: string[]): Promise<Cookie[]>;\n\n  abstract deleteCookie(...cookies: DeleteCookiesRequest[]): Promise<void>;\n\n  /**\n   * @example\n   *\n   * ```ts\n   * await page.setCookie(cookieObject1, cookieObject2);\n   * ```\n   */\n  abstract setCookie(...cookies: CookieParam[]): Promise<void>;\n\n  /**\n   * Adds a `<script>` tag into the page with the desired URL or content.\n   *\n   * @remarks\n   * Shortcut for\n   * {@link Frame.addScriptTag | page.mainFrame().addScriptTag(options)}.\n   *\n   * @param options - Options for the script.\n   * @returns An {@link ElementHandle | element handle} to the injected\n   * `<script>` element.\n   */\n  async addScriptTag(\n    options: FrameAddScriptTagOptions\n  ): Promise<ElementHandle<HTMLScriptElement>> {\n    return await this.mainFrame().addScriptTag(options);\n  }\n\n  /**\n   * Adds a `<link rel=\"stylesheet\">` tag into the page with the desired URL or\n   * a `<style type=\"text/css\">` tag with the content.\n   *\n   * Shortcut for\n   * {@link Frame.(addStyleTag:2) | page.mainFrame().addStyleTag(options)}.\n   *\n   * @returns An {@link ElementHandle | element handle} to the injected `<link>`\n   * or `<style>` element.\n   */\n  async addStyleTag(\n    options: Omit<FrameAddStyleTagOptions, 'url'>\n  ): Promise<ElementHandle<HTMLStyleElement>>;\n  async addStyleTag(\n    options: FrameAddStyleTagOptions\n  ): Promise<ElementHandle<HTMLLinkElement>>;\n  async addStyleTag(\n    options: FrameAddStyleTagOptions\n  ): Promise<ElementHandle<HTMLStyleElement | HTMLLinkElement>> {\n    return await this.mainFrame().addStyleTag(options);\n  }\n\n  /**\n   * The method adds a function called `name` on the page's `window` object.\n   * When called, the function executes `puppeteerFunction` in node.js and\n   * returns a `Promise` which resolves to the return value of\n   * `puppeteerFunction`.\n   *\n   * If the puppeteerFunction returns a `Promise`, it will be awaited.\n   *\n   * :::note\n   *\n   * Functions installed via `page.exposeFunction` survive navigations.\n   *\n   * :::\n   *\n   * @example\n   * An example of adding an `md5` function into the page:\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   * import crypto from 'crypto';\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   page.on('console', msg => console.log(msg.text()));\n   *   await page.exposeFunction('md5', text =>\n   *     crypto.createHash('md5').update(text).digest('hex')\n   *   );\n   *   await page.evaluate(async () => {\n   *     // use window.md5 to compute hashes\n   *     const myString = 'PUPPETEER';\n   *     const myHash = await window.md5(myString);\n   *     console.log(`md5 of ${myString} is ${myHash}`);\n   *   });\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @example\n   * An example of adding a `window.readfile` function into the page:\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   * import fs from 'fs';\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   page.on('console', msg => console.log(msg.text()));\n   *   await page.exposeFunction('readfile', async filePath => {\n   *     return new Promise((resolve, reject) => {\n   *       fs.readFile(filePath, 'utf8', (err, text) => {\n   *         if (err) reject(err);\n   *         else resolve(text);\n   *       });\n   *     });\n   *   });\n   *   await page.evaluate(async () => {\n   *     // use window.readfile to read contents of a file\n   *     const content = await window.readfile('/etc/hosts');\n   *     console.log(content);\n   *   });\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param name - Name of the function on the window object\n   * @param pptrFunction - Callback function which will be called in Puppeteer's\n   * context.\n   */\n  abstract exposeFunction(\n    name: string,\n    pptrFunction: Function | {default: Function}\n  ): Promise<void>;\n\n  /**\n   * The method removes a previously added function via ${@link Page.exposeFunction}\n   * called `name` from the page's `window` object.\n   */\n  abstract removeExposedFunction(name: string): Promise<void>;\n\n  /**\n   * Provide credentials for `HTTP authentication`.\n   *\n   * @remarks\n   * To disable authentication, pass `null`.\n   */\n  abstract authenticate(credentials: Credentials | null): Promise<void>;\n\n  /**\n   * The extra HTTP headers will be sent with every request the page initiates.\n   *\n   * :::tip\n   *\n   * All HTTP header names are lowercased. (HTTP headers are\n   * case-insensitive, so this shouldn’t impact your server code.)\n   *\n   * :::\n   *\n   * :::note\n   *\n   * page.setExtraHTTPHeaders does not guarantee the order of headers in\n   * the outgoing requests.\n   *\n   * :::\n   *\n   * @param headers - An object containing additional HTTP headers to be sent\n   * with every request. All header values must be strings.\n   */\n  abstract setExtraHTTPHeaders(headers: Record<string, string>): Promise<void>;\n\n  /**\n   * @param userAgent - Specific user agent to use in this page\n   * @param userAgentData - Specific user agent client hint data to use in this\n   * page\n   * @returns Promise which resolves when the user agent is set.\n   */\n  abstract setUserAgent(\n    userAgent: string,\n    userAgentMetadata?: Protocol.Emulation.UserAgentMetadata\n  ): Promise<void>;\n\n  /**\n   * Object containing metrics as key/value pairs.\n   *\n   * @returns\n   *\n   * - `Timestamp` : The timestamp when the metrics sample was taken.\n   *\n   * - `Documents` : Number of documents in the page.\n   *\n   * - `Frames` : Number of frames in the page.\n   *\n   * - `JSEventListeners` : Number of events in the page.\n   *\n   * - `Nodes` : Number of DOM nodes in the page.\n   *\n   * - `LayoutCount` : Total number of full or partial page layout.\n   *\n   * - `RecalcStyleCount` : Total number of page style recalculations.\n   *\n   * - `LayoutDuration` : Combined durations of all page layouts.\n   *\n   * - `RecalcStyleDuration` : Combined duration of all page style\n   *   recalculations.\n   *\n   * - `ScriptDuration` : Combined duration of JavaScript execution.\n   *\n   * - `TaskDuration` : Combined duration of all tasks performed by the browser.\n   *\n   * - `JSHeapUsedSize` : Used JavaScript heap size.\n   *\n   * - `JSHeapTotalSize` : Total JavaScript heap size.\n   *\n   * @remarks\n   * All timestamps are in monotonic time: monotonically increasing time\n   * in seconds since an arbitrary point in the past.\n   */\n  abstract metrics(): Promise<Metrics>;\n\n  /**\n   * The page's URL.\n   *\n   * @remarks\n   *\n   * Shortcut for {@link Frame.url | page.mainFrame().url()}.\n   */\n  url(): string {\n    return this.mainFrame().url();\n  }\n\n  /**\n   * The full HTML contents of the page, including the DOCTYPE.\n   */\n  async content(): Promise<string> {\n    return await this.mainFrame().content();\n  }\n\n  /**\n   * Set the content of the page.\n   *\n   * @param html - HTML markup to assign to the page.\n   * @param options - Parameters that has some properties.\n   *\n   * @remarks\n   *\n   * The parameter `options` might have the following options.\n   *\n   * - `timeout` : Maximum time in milliseconds for resources to load, defaults\n   *   to 30 seconds, pass `0` to disable timeout. The default value can be\n   *   changed by using the {@link Page.setDefaultNavigationTimeout} or\n   *   {@link Page.setDefaultTimeout} methods.\n   *\n   * - `waitUntil`: When to consider setting markup succeeded, defaults to\n   *   `load`. Given an array of event strings, setting content is considered\n   *   to be successful after all events have been fired. Events can be\n   *   either:<br/>\n   * - `load` : consider setting content to be finished when the `load` event\n   *   is fired.<br/>\n   * - `domcontentloaded` : consider setting content to be finished when the\n   *   `DOMContentLoaded` event is fired.<br/>\n   * - `networkidle0` : consider setting content to be finished when there are\n   *   no more than 0 network connections for at least `500` ms.<br/>\n   * - `networkidle2` : consider setting content to be finished when there are\n   *   no more than 2 network connections for at least `500` ms.\n   */\n  async setContent(html: string, options?: WaitForOptions): Promise<void> {\n    await this.mainFrame().setContent(html, options);\n  }\n\n  /**\n   * Navigates the page to the given `url`.\n   *\n   * @remarks\n   *\n   * Navigation to `about:blank` or navigation to the same URL with a different\n   * hash will succeed and return `null`.\n   *\n   * :::warning\n   *\n   * Headless mode doesn't support navigation to a PDF document. See the {@link\n   * https://bugs.chromium.org/p/chromium/issues/detail?id=761295 | upstream\n   * issue}.\n   *\n   * :::\n   *\n   * Shortcut for {@link Frame.goto | page.mainFrame().goto(url, options)}.\n   *\n   * @param url - URL to navigate page to. The URL should include scheme, e.g.\n   * `https://`\n   * @param options - Options to configure waiting behavior.\n   * @returns A promise which resolves to the main resource response. In case of\n   * multiple redirects, the navigation will resolve with the response of the\n   * last redirect.\n   * @throws If:\n   *\n   * - there's an SSL error (e.g. in case of self-signed certificates).\n   * - target URL is invalid.\n   * - the timeout is exceeded during navigation.\n   * - the remote server does not respond or is unreachable.\n   * - the main resource failed to load.\n   *\n   * This method will not throw an error when any valid HTTP status code is\n   * returned by the remote server, including 404 \"Not Found\" and 500 \"Internal\n   * Server Error\". The status code for such responses can be retrieved by\n   * calling {@link HTTPResponse.status}.\n   */\n  async goto(url: string, options?: GoToOptions): Promise<HTTPResponse | null> {\n    return await this.mainFrame().goto(url, options);\n  }\n\n  /**\n   * Reloads the page.\n   *\n   * @param options - Options to configure waiting behavior.\n   * @returns A promise which resolves to the main resource response. In case of\n   * multiple redirects, the navigation will resolve with the response of the\n   * last redirect.\n   */\n  abstract reload(options?: WaitForOptions): Promise<HTTPResponse | null>;\n\n  /**\n   * Waits for the page to navigate to a new URL or to reload. It is useful when\n   * you run code that will indirectly cause the page to navigate.\n   *\n   * @example\n   *\n   * ```ts\n   * const [response] = await Promise.all([\n   *   page.waitForNavigation(), // The promise resolves after navigation has finished\n   *   page.click('a.my-link'), // Clicking the link will indirectly cause a navigation\n   * ]);\n   * ```\n   *\n   * @remarks\n   *\n   * Usage of the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/History_API | History API}\n   * to change the URL is considered a navigation.\n   *\n   * @param options - Navigation parameters which might have the following\n   * properties:\n   * @returns A `Promise` which resolves to the main resource response.\n   *\n   * - In case of multiple redirects, the navigation will resolve with the\n   *   response of the last redirect.\n   * - In case of navigation to a different anchor or navigation due to History\n   *   API usage, the navigation will resolve with `null`.\n   */\n  async waitForNavigation(\n    options: WaitForOptions = {}\n  ): Promise<HTTPResponse | null> {\n    return await this.mainFrame().waitForNavigation(options);\n  }\n\n  /**\n   * @param urlOrPredicate - A URL or predicate to wait for\n   * @param options - Optional waiting parameters\n   * @returns Promise which resolves to the matched request\n   * @example\n   *\n   * ```ts\n   * const firstRequest = await page.waitForRequest(\n   *   'https://example.com/resource'\n   * );\n   * const finalRequest = await page.waitForRequest(\n   *   request => request.url() === 'https://example.com'\n   * );\n   * return finalRequest.response()?.ok();\n   * ```\n   *\n   * @remarks\n   * Optional Waiting Parameters have:\n   *\n   * - `timeout`: Maximum wait time in milliseconds, defaults to `30` seconds, pass\n   *   `0` to disable the timeout. The default value can be changed by using the\n   *   {@link Page.setDefaultTimeout} method.\n   */\n  waitForRequest(\n    urlOrPredicate: string | AwaitablePredicate<HTTPRequest>,\n    options: WaitTimeoutOptions = {}\n  ): Promise<HTTPRequest> {\n    const {timeout: ms = this._timeoutSettings.timeout()} = options;\n    if (typeof urlOrPredicate === 'string') {\n      const url = urlOrPredicate;\n      urlOrPredicate = (request: HTTPRequest) => {\n        return request.url() === url;\n      };\n    }\n    const observable$ = fromEmitterEvent(this, PageEvent.Request).pipe(\n      filterAsync(urlOrPredicate),\n      raceWith(\n        timeout(ms),\n        fromEmitterEvent(this, PageEvent.Close).pipe(\n          map(() => {\n            throw new TargetCloseError('Page closed!');\n          })\n        )\n      )\n    );\n    return firstValueFrom(observable$);\n  }\n\n  /**\n   * @param urlOrPredicate - A URL or predicate to wait for.\n   * @param options - Optional waiting parameters\n   * @returns Promise which resolves to the matched response.\n   * @example\n   *\n   * ```ts\n   * const firstResponse = await page.waitForResponse(\n   *   'https://example.com/resource'\n   * );\n   * const finalResponse = await page.waitForResponse(\n   *   response =>\n   *     response.url() === 'https://example.com' && response.status() === 200\n   * );\n   * const finalResponse = await page.waitForResponse(async response => {\n   *   return (await response.text()).includes('<html>');\n   * });\n   * return finalResponse.ok();\n   * ```\n   *\n   * @remarks\n   * Optional Parameter have:\n   *\n   * - `timeout`: Maximum wait time in milliseconds, defaults to `30` seconds,\n   *   pass `0` to disable the timeout. The default value can be changed by using\n   *   the {@link Page.setDefaultTimeout} method.\n   */\n  waitForResponse(\n    urlOrPredicate: string | AwaitablePredicate<HTTPResponse>,\n    options: WaitTimeoutOptions = {}\n  ): Promise<HTTPResponse> {\n    const {timeout: ms = this._timeoutSettings.timeout()} = options;\n    if (typeof urlOrPredicate === 'string') {\n      const url = urlOrPredicate;\n      urlOrPredicate = (response: HTTPResponse) => {\n        return response.url() === url;\n      };\n    }\n    const observable$ = fromEmitterEvent(this, PageEvent.Response).pipe(\n      filterAsync(urlOrPredicate),\n      raceWith(\n        timeout(ms),\n        fromEmitterEvent(this, PageEvent.Close).pipe(\n          map(() => {\n            throw new TargetCloseError('Page closed!');\n          })\n        )\n      )\n    );\n    return firstValueFrom(observable$);\n  }\n\n  /**\n   * Waits for the network to be idle.\n   *\n   * @param options - Options to configure waiting behavior.\n   * @returns A promise which resolves once the network is idle.\n   */\n  waitForNetworkIdle(options: WaitForNetworkIdleOptions = {}): Promise<void> {\n    return firstValueFrom(this.waitForNetworkIdle$(options));\n  }\n\n  /**\n   * @internal\n   */\n  waitForNetworkIdle$(\n    options: WaitForNetworkIdleOptions = {}\n  ): Observable<void> {\n    const {\n      timeout: ms = this._timeoutSettings.timeout(),\n      idleTime = NETWORK_IDLE_TIME,\n      concurrency = 0,\n    } = options;\n\n    return this.#inflight$.pipe(\n      switchMap(inflight => {\n        if (inflight > concurrency) {\n          return EMPTY;\n        }\n        return timer(idleTime);\n      }),\n      map(() => {}),\n      raceWith(\n        timeout(ms),\n        fromEmitterEvent(this, PageEvent.Close).pipe(\n          map(() => {\n            throw new TargetCloseError('Page closed!');\n          })\n        )\n      )\n    );\n  }\n\n  /**\n   * Waits for a frame matching the given conditions to appear.\n   *\n   * @example\n   *\n   * ```ts\n   * const frame = await page.waitForFrame(async frame => {\n   *   return frame.name() === 'Test';\n   * });\n   * ```\n   */\n  async waitForFrame(\n    urlOrPredicate: string | ((frame: Frame) => Awaitable<boolean>),\n    options: WaitTimeoutOptions = {}\n  ): Promise<Frame> {\n    const {timeout: ms = this.getDefaultTimeout()} = options;\n\n    if (isString(urlOrPredicate)) {\n      urlOrPredicate = (frame: Frame) => {\n        return urlOrPredicate === frame.url();\n      };\n    }\n\n    return await firstValueFrom(\n      merge(\n        fromEmitterEvent(this, PageEvent.FrameAttached),\n        fromEmitterEvent(this, PageEvent.FrameNavigated),\n        from(this.frames())\n      ).pipe(\n        filterAsync(urlOrPredicate),\n        first(),\n        raceWith(\n          timeout(ms),\n          fromEmitterEvent(this, PageEvent.Close).pipe(\n            map(() => {\n              throw new TargetCloseError('Page closed.');\n            })\n          )\n        )\n      )\n    );\n  }\n\n  /**\n   * This method navigate to the previous page in history.\n   * @param options - Navigation parameters\n   * @returns Promise which resolves to the main resource response. In case of\n   * multiple redirects, the navigation will resolve with the response of the\n   * last redirect. If can not go back, resolves to `null`.\n   * @remarks\n   * The argument `options` might have the following properties:\n   *\n   * - `timeout` : Maximum navigation time in milliseconds, defaults to 30\n   *   seconds, pass 0 to disable timeout. The default value can be changed by\n   *   using the {@link Page.setDefaultNavigationTimeout} or\n   *   {@link Page.setDefaultTimeout} methods.\n   *\n   * - `waitUntil` : When to consider navigation succeeded, defaults to `load`.\n   *   Given an array of event strings, navigation is considered to be\n   *   successful after all events have been fired. Events can be either:<br/>\n   * - `load` : consider navigation to be finished when the load event is\n   *   fired.<br/>\n   * - `domcontentloaded` : consider navigation to be finished when the\n   *   DOMContentLoaded event is fired.<br/>\n   * - `networkidle0` : consider navigation to be finished when there are no\n   *   more than 0 network connections for at least `500` ms.<br/>\n   * - `networkidle2` : consider navigation to be finished when there are no\n   *   more than 2 network connections for at least `500` ms.\n   */\n  abstract goBack(options?: WaitForOptions): Promise<HTTPResponse | null>;\n\n  /**\n   * This method navigate to the next page in history.\n   * @param options - Navigation Parameter\n   * @returns Promise which resolves to the main resource response. In case of\n   * multiple redirects, the navigation will resolve with the response of the\n   * last redirect. If can not go forward, resolves to `null`.\n   * @remarks\n   * The argument `options` might have the following properties:\n   *\n   * - `timeout` : Maximum navigation time in milliseconds, defaults to 30\n   *   seconds, pass 0 to disable timeout. The default value can be changed by\n   *   using the {@link Page.setDefaultNavigationTimeout} or\n   *   {@link Page.setDefaultTimeout} methods.\n   *\n   * - `waitUntil`: When to consider navigation succeeded, defaults to `load`.\n   *   Given an array of event strings, navigation is considered to be\n   *   successful after all events have been fired. Events can be either:<br/>\n   * - `load` : consider navigation to be finished when the load event is\n   *   fired.<br/>\n   * - `domcontentloaded` : consider navigation to be finished when the\n   *   DOMContentLoaded event is fired.<br/>\n   * - `networkidle0` : consider navigation to be finished when there are no\n   *   more than 0 network connections for at least `500` ms.<br/>\n   * - `networkidle2` : consider navigation to be finished when there are no\n   *   more than 2 network connections for at least `500` ms.\n   */\n  abstract goForward(options?: WaitForOptions): Promise<HTTPResponse | null>;\n\n  /**\n   * Brings page to front (activates tab).\n   */\n  abstract bringToFront(): Promise<void>;\n\n  /**\n   * Emulates a given device's metrics and user agent.\n   *\n   * To aid emulation, Puppeteer provides a list of known devices that can be\n   * via {@link KnownDevices}.\n   *\n   * @remarks\n   * This method is a shortcut for calling two methods:\n   * {@link Page.setUserAgent} and {@link Page.setViewport}.\n   *\n   * This method will resize the page. A lot of websites don't expect phones to\n   * change size, so you should emulate before navigating to the page.\n   *\n   * @example\n   *\n   * ```ts\n   * import {KnownDevices} from 'puppeteer';\n   * const iPhone = KnownDevices['iPhone 6'];\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   await page.emulate(iPhone);\n   *   await page.goto('https://www.google.com');\n   *   // other actions...\n   *   await browser.close();\n   * })();\n   * ```\n   */\n  async emulate(device: Device): Promise<void> {\n    await Promise.all([\n      this.setUserAgent(device.userAgent),\n      this.setViewport(device.viewport),\n    ]);\n  }\n\n  /**\n   * @param enabled - Whether or not to enable JavaScript on the page.\n   * @remarks\n   * NOTE: changing this value won't affect scripts that have already been run.\n   * It will take full effect on the next navigation.\n   */\n  abstract setJavaScriptEnabled(enabled: boolean): Promise<void>;\n\n  /**\n   * Toggles bypassing page's Content-Security-Policy.\n   * @param enabled - sets bypassing of page's Content-Security-Policy.\n   * @remarks\n   * NOTE: CSP bypassing happens at the moment of CSP initialization rather than\n   * evaluation. Usually, this means that `page.setBypassCSP` should be called\n   * before navigating to the domain.\n   */\n  abstract setBypassCSP(enabled: boolean): Promise<void>;\n\n  /**\n   * @param type - Changes the CSS media type of the page. The only allowed\n   * values are `screen`, `print` and `null`. Passing `null` disables CSS media\n   * emulation.\n   * @example\n   *\n   * ```ts\n   * await page.evaluate(() => matchMedia('screen').matches);\n   * // → true\n   * await page.evaluate(() => matchMedia('print').matches);\n   * // → false\n   *\n   * await page.emulateMediaType('print');\n   * await page.evaluate(() => matchMedia('screen').matches);\n   * // → false\n   * await page.evaluate(() => matchMedia('print').matches);\n   * // → true\n   *\n   * await page.emulateMediaType(null);\n   * await page.evaluate(() => matchMedia('screen').matches);\n   * // → true\n   * await page.evaluate(() => matchMedia('print').matches);\n   * // → false\n   * ```\n   */\n  abstract emulateMediaType(type?: string): Promise<void>;\n\n  /**\n   * Enables CPU throttling to emulate slow CPUs.\n   * @param factor - slowdown factor (1 is no throttle, 2 is 2x slowdown, etc).\n   */\n  abstract emulateCPUThrottling(factor: number | null): Promise<void>;\n\n  /**\n   * @param features - `<?Array<Object>>` Given an array of media feature\n   * objects, emulates CSS media features on the page. Each media feature object\n   * must have the following properties:\n   * @example\n   *\n   * ```ts\n   * await page.emulateMediaFeatures([\n   *   {name: 'prefers-color-scheme', value: 'dark'},\n   * ]);\n   * await page.evaluate(\n   *   () => matchMedia('(prefers-color-scheme: dark)').matches\n   * );\n   * // → true\n   * await page.evaluate(\n   *   () => matchMedia('(prefers-color-scheme: light)').matches\n   * );\n   * // → false\n   *\n   * await page.emulateMediaFeatures([\n   *   {name: 'prefers-reduced-motion', value: 'reduce'},\n   * ]);\n   * await page.evaluate(\n   *   () => matchMedia('(prefers-reduced-motion: reduce)').matches\n   * );\n   * // → true\n   * await page.evaluate(\n   *   () => matchMedia('(prefers-reduced-motion: no-preference)').matches\n   * );\n   * // → false\n   *\n   * await page.emulateMediaFeatures([\n   *   {name: 'prefers-color-scheme', value: 'dark'},\n   *   {name: 'prefers-reduced-motion', value: 'reduce'},\n   * ]);\n   * await page.evaluate(\n   *   () => matchMedia('(prefers-color-scheme: dark)').matches\n   * );\n   * // → true\n   * await page.evaluate(\n   *   () => matchMedia('(prefers-color-scheme: light)').matches\n   * );\n   * // → false\n   * await page.evaluate(\n   *   () => matchMedia('(prefers-reduced-motion: reduce)').matches\n   * );\n   * // → true\n   * await page.evaluate(\n   *   () => matchMedia('(prefers-reduced-motion: no-preference)').matches\n   * );\n   * // → false\n   *\n   * await page.emulateMediaFeatures([{name: 'color-gamut', value: 'p3'}]);\n   * await page.evaluate(() => matchMedia('(color-gamut: srgb)').matches);\n   * // → true\n   * await page.evaluate(() => matchMedia('(color-gamut: p3)').matches);\n   * // → true\n   * await page.evaluate(() => matchMedia('(color-gamut: rec2020)').matches);\n   * // → false\n   * ```\n   */\n  abstract emulateMediaFeatures(features?: MediaFeature[]): Promise<void>;\n\n  /**\n   * @param timezoneId - Changes the timezone of the page. See\n   * {@link https://source.chromium.org/chromium/chromium/deps/icu.git/+/faee8bc70570192d82d2978a71e2a615788597d1:source/data/misc/metaZones.txt | ICU’s metaZones.txt}\n   * for a list of supported timezone IDs. Passing\n   * `null` disables timezone emulation.\n   */\n  abstract emulateTimezone(timezoneId?: string): Promise<void>;\n\n  /**\n   * Emulates the idle state.\n   * If no arguments set, clears idle state emulation.\n   *\n   * @example\n   *\n   * ```ts\n   * // set idle emulation\n   * await page.emulateIdleState({isUserActive: true, isScreenUnlocked: false});\n   *\n   * // do some checks here\n   * ...\n   *\n   * // clear idle emulation\n   * await page.emulateIdleState();\n   * ```\n   *\n   * @param overrides - Mock idle state. If not set, clears idle overrides\n   */\n  abstract emulateIdleState(overrides?: {\n    isUserActive: boolean;\n    isScreenUnlocked: boolean;\n  }): Promise<void>;\n\n  /**\n   * Simulates the given vision deficiency on the page.\n   *\n   * @example\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   await page.goto('https://v8.dev/blog/10-years');\n   *\n   *   await page.emulateVisionDeficiency('achromatopsia');\n   *   await page.screenshot({path: 'achromatopsia.png'});\n   *\n   *   await page.emulateVisionDeficiency('deuteranopia');\n   *   await page.screenshot({path: 'deuteranopia.png'});\n   *\n   *   await page.emulateVisionDeficiency('blurredVision');\n   *   await page.screenshot({path: 'blurred-vision.png'});\n   *\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param type - the type of deficiency to simulate, or `'none'` to reset.\n   */\n  abstract emulateVisionDeficiency(\n    type?: Protocol.Emulation.SetEmulatedVisionDeficiencyRequest['type']\n  ): Promise<void>;\n\n  /**\n   * `page.setViewport` will resize the page. A lot of websites don't expect\n   * phones to change size, so you should set the viewport before navigating to\n   * the page.\n   *\n   * In the case of multiple pages in a single browser, each page can have its\n   * own viewport size.\n   * @example\n   *\n   * ```ts\n   * const page = await browser.newPage();\n   * await page.setViewport({\n   *   width: 640,\n   *   height: 480,\n   *   deviceScaleFactor: 1,\n   * });\n   * await page.goto('https://example.com');\n   * ```\n   *\n   * @param viewport -\n   * @remarks\n   * NOTE: in certain cases, setting viewport will reload the page in order to\n   * set the isMobile or hasTouch properties.\n   */\n  abstract setViewport(viewport: Viewport): Promise<void>;\n\n  /**\n   * Returns the current page viewport settings without checking the actual page\n   * viewport.\n   *\n   * This is either the viewport set with the previous {@link Page.setViewport}\n   * call or the default viewport set via\n   * {@link BrowserConnectOptions.defaultViewport |\n   * BrowserConnectOptions.defaultViewport}.\n   */\n  abstract viewport(): Viewport | null;\n\n  /**\n   * Evaluates a function in the page's context and returns the result.\n   *\n   * If the function passed to `page.evaluate` returns a Promise, the\n   * function will wait for the promise to resolve and return its value.\n   *\n   * @example\n   *\n   * ```ts\n   * const result = await frame.evaluate(() => {\n   *   return Promise.resolve(8 * 7);\n   * });\n   * console.log(result); // prints \"56\"\n   * ```\n   *\n   * You can pass a string instead of a function (although functions are\n   * recommended as they are easier to debug and use with TypeScript):\n   *\n   * @example\n   *\n   * ```ts\n   * const aHandle = await page.evaluate('1 + 2');\n   * ```\n   *\n   * To get the best TypeScript experience, you should pass in as the\n   * generic the type of `pageFunction`:\n   *\n   * ```ts\n   * const aHandle = await page.evaluate(() => 2);\n   * ```\n   *\n   * @example\n   *\n   * {@link ElementHandle} instances (including {@link JSHandle}s) can be passed\n   * as arguments to the `pageFunction`:\n   *\n   * ```ts\n   * const bodyHandle = await page.$('body');\n   * const html = await page.evaluate(body => body.innerHTML, bodyHandle);\n   * await bodyHandle.dispose();\n   * ```\n   *\n   * @param pageFunction - a function that is run within the page\n   * @param args - arguments to be passed to the pageFunction\n   *\n   * @returns the return value of `pageFunction`.\n   */\n  async evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>,\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(\n      this.evaluate.name,\n      pageFunction\n    );\n    return await this.mainFrame().evaluate(pageFunction, ...args);\n  }\n\n  /**\n   * Adds a function which would be invoked in one of the following scenarios:\n   *\n   * - whenever the page is navigated\n   *\n   * - whenever the child frame is attached or navigated. In this case, the\n   *   function is invoked in the context of the newly attached frame.\n   *\n   * The function is invoked after the document was created but before any of\n   * its scripts were run. This is useful to amend the JavaScript environment,\n   * e.g. to seed `Math.random`.\n   * @param pageFunction - Function to be evaluated in browser context\n   * @param args - Arguments to pass to `pageFunction`\n   * @example\n   * An example of overriding the navigator.languages property before the page loads:\n   *\n   * ```ts\n   * // preload.js\n   *\n   * // overwrite the `languages` property to use a custom getter\n   * Object.defineProperty(navigator, 'languages', {\n   *   get: function () {\n   *     return ['en-US', 'en', 'bn'];\n   *   },\n   * });\n   *\n   * // In your puppeteer script, assuming the preload.js file is\n   * // in same folder of our script.\n   * const preloadFile = fs.readFileSync('./preload.js', 'utf8');\n   * await page.evaluateOnNewDocument(preloadFile);\n   * ```\n   */\n  abstract evaluateOnNewDocument<\n    Params extends unknown[],\n    Func extends (...args: Params) => unknown = (...args: Params) => unknown,\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<NewDocumentScriptEvaluation>;\n\n  /**\n   * Removes script that injected into page by Page.evaluateOnNewDocument.\n   *\n   * @param identifier - script identifier\n   */\n  abstract removeScriptToEvaluateOnNewDocument(\n    identifier: string\n  ): Promise<void>;\n\n  /**\n   * Toggles ignoring cache for each request based on the enabled state. By\n   * default, caching is enabled.\n   * @param enabled - sets the `enabled` state of cache\n   * @defaultValue `true`\n   */\n  abstract setCacheEnabled(enabled?: boolean): Promise<void>;\n\n  /**\n   * @internal\n   */\n  async _maybeWriteBufferToFile(\n    path: string | undefined,\n    buffer: Buffer\n  ): Promise<void> {\n    if (!path) {\n      return;\n    }\n\n    const fs = await importFSPromises();\n\n    await fs.writeFile(path, buffer);\n  }\n\n  /**\n   * Captures a screencast of this {@link Page | page}.\n   *\n   * @example\n   * Recording a {@link Page | page}:\n   *\n   * ```\n   * import puppeteer from 'puppeteer';\n   *\n   * // Launch a browser\n   * const browser = await puppeteer.launch();\n   *\n   * // Create a new page\n   * const page = await browser.newPage();\n   *\n   * // Go to your site.\n   * await page.goto(\"https://www.example.com\");\n   *\n   * // Start recording.\n   * const recorder = await page.screencast({path: 'recording.webm'});\n   *\n   * // Do something.\n   *\n   * // Stop recording.\n   * await recorder.stop();\n   *\n   * browser.close();\n   * ```\n   *\n   * @param options - Configures screencast behavior.\n   *\n   * @experimental\n   *\n   * @remarks\n   *\n   * All recordings will be {@link https://www.webmproject.org/ | WebM} format using\n   * the {@link https://www.webmproject.org/vp9/ | VP9} video codec. The FPS is 30.\n   *\n   * You must have {@link https://ffmpeg.org/ | ffmpeg} installed on your system.\n   */\n  async screencast(\n    options: Readonly<ScreencastOptions> = {}\n  ): Promise<ScreenRecorder> {\n    const [{ScreenRecorder}, [width, height, devicePixelRatio]] =\n      await Promise.all([\n        import('../node/ScreenRecorder.js'),\n        this.#getNativePixelDimensions(),\n      ]);\n\n    let crop: BoundingBox | undefined;\n    if (options.crop) {\n      const {\n        x,\n        y,\n        width: cropWidth,\n        height: cropHeight,\n      } = roundRectangle(normalizeRectangle(options.crop));\n      if (x < 0 || y < 0) {\n        throw new Error(\n          `\\`crop.x\\` and \\`crop.y\\` must be greater than or equal to 0.`\n        );\n      }\n      if (cropWidth <= 0 || cropHeight <= 0) {\n        throw new Error(\n          `\\`crop.height\\` and \\`crop.width\\` must be greater than or equal to 0.`\n        );\n      }\n\n      const viewportWidth = width / devicePixelRatio;\n      const viewportHeight = height / devicePixelRatio;\n      if (x + cropWidth > viewportWidth) {\n        throw new Error(\n          `\\`crop.width\\` cannot be larger than the viewport width (${viewportWidth}).`\n        );\n      }\n      if (y + cropHeight > viewportHeight) {\n        throw new Error(\n          `\\`crop.height\\` cannot be larger than the viewport height (${viewportHeight}).`\n        );\n      }\n\n      crop = {\n        x: x * devicePixelRatio,\n        y: y * devicePixelRatio,\n        width: cropWidth * devicePixelRatio,\n        height: cropHeight * devicePixelRatio,\n      };\n    }\n    if (options.speed !== undefined && options.speed <= 0) {\n      throw new Error(`\\`speed\\` must be greater than 0.`);\n    }\n    if (options.scale !== undefined && options.scale <= 0) {\n      throw new Error(`\\`scale\\` must be greater than 0.`);\n    }\n\n    const recorder = new ScreenRecorder(this, width, height, {\n      ...options,\n      path: options.ffmpegPath,\n      crop,\n    });\n    try {\n      await this._startScreencast();\n    } catch (error) {\n      void recorder.stop();\n      throw error;\n    }\n    if (options.path) {\n      const {createWriteStream} = await import('fs');\n      const stream = createWriteStream(options.path, 'binary');\n      recorder.pipe(stream);\n    }\n    return recorder;\n  }\n\n  #screencastSessionCount = 0;\n  #startScreencastPromise: Promise<void> | undefined;\n\n  /**\n   * @internal\n   */\n  async _startScreencast(): Promise<void> {\n    ++this.#screencastSessionCount;\n    if (!this.#startScreencastPromise) {\n      this.#startScreencastPromise = this.mainFrame()\n        .client.send('Page.startScreencast', {format: 'png'})\n        .then(() => {\n          // Wait for the first frame.\n          return new Promise(resolve => {\n            return this.mainFrame().client.once('Page.screencastFrame', () => {\n              return resolve();\n            });\n          });\n        });\n    }\n    await this.#startScreencastPromise;\n  }\n\n  /**\n   * @internal\n   */\n  async _stopScreencast(): Promise<void> {\n    --this.#screencastSessionCount;\n    if (!this.#startScreencastPromise) {\n      return;\n    }\n    this.#startScreencastPromise = undefined;\n    if (this.#screencastSessionCount === 0) {\n      await this.mainFrame().client.send('Page.stopScreencast');\n    }\n  }\n\n  /**\n   * Gets the native, non-emulated dimensions of the viewport.\n   */\n  async #getNativePixelDimensions(): Promise<\n    readonly [width: number, height: number, devicePixelRatio: number]\n  > {\n    const viewport = this.viewport();\n    using stack = new DisposableStack();\n    if (viewport && viewport.deviceScaleFactor !== 0) {\n      await this.setViewport({...viewport, deviceScaleFactor: 0});\n      stack.defer(() => {\n        void this.setViewport(viewport).catch(debugError);\n      });\n    }\n    return await this.mainFrame()\n      .isolatedRealm()\n      .evaluate(() => {\n        return [\n          window.visualViewport!.width * window.devicePixelRatio,\n          window.visualViewport!.height * window.devicePixelRatio,\n          window.devicePixelRatio,\n        ] as const;\n      });\n  }\n\n  /**\n   * Captures a screenshot of this {@link Page | page}.\n   *\n   * @param options - Configures screenshot behavior.\n   */\n  async screenshot(\n    options: Readonly<ScreenshotOptions> & {encoding: 'base64'}\n  ): Promise<string>;\n  async screenshot(options?: Readonly<ScreenshotOptions>): Promise<Buffer>;\n  @guarded(function () {\n    return this.browser();\n  })\n  async screenshot(\n    userOptions: Readonly<ScreenshotOptions> = {}\n  ): Promise<Buffer | string> {\n    await this.bringToFront();\n\n    // TODO: use structuredClone after Node 16 support is dropped.\n    const options = {\n      ...userOptions,\n      clip: userOptions.clip\n        ? {\n            ...userOptions.clip,\n          }\n        : undefined,\n    };\n    if (options.type === undefined && options.path !== undefined) {\n      const filePath = options.path;\n      // Note we cannot use Node.js here due to browser compatibility.\n      const extension = filePath\n        .slice(filePath.lastIndexOf('.') + 1)\n        .toLowerCase();\n      switch (extension) {\n        case 'png':\n          options.type = 'png';\n          break;\n        case 'jpeg':\n        case 'jpg':\n          options.type = 'jpeg';\n          break;\n        case 'webp':\n          options.type = 'webp';\n          break;\n      }\n    }\n    if (options.quality !== undefined) {\n      if (options.quality < 0 && options.quality > 100) {\n        throw new Error(\n          `Expected 'quality' (${options.quality}) to be between 0 and 100, inclusive.`\n        );\n      }\n      if (\n        options.type === undefined ||\n        !['jpeg', 'webp'].includes(options.type)\n      ) {\n        throw new Error(\n          `${options.type ?? 'png'} screenshots do not support 'quality'.`\n        );\n      }\n    }\n    if (options.clip) {\n      if (options.clip.width <= 0) {\n        throw new Error(\"'width' in 'clip' must be positive.\");\n      }\n      if (options.clip.height <= 0) {\n        throw new Error(\"'height' in 'clip' must be positive.\");\n      }\n    }\n\n    setDefaultScreenshotOptions(options);\n\n    await using stack = new AsyncDisposableStack();\n    if (options.clip) {\n      if (options.fullPage) {\n        throw new Error(\"'clip' and 'fullPage' are mutually exclusive\");\n      }\n\n      options.clip = roundRectangle(normalizeRectangle(options.clip));\n    } else {\n      if (options.fullPage) {\n        // If `captureBeyondViewport` is `false`, then we set the viewport to\n        // capture the full page. Note this may be affected by on-page CSS and\n        // JavaScript.\n        if (!options.captureBeyondViewport) {\n          const scrollDimensions = await this.mainFrame()\n            .isolatedRealm()\n            .evaluate(() => {\n              const element = document.documentElement;\n              return {\n                width: element.scrollWidth,\n                height: element.scrollHeight,\n              };\n            });\n          const viewport = this.viewport();\n          await this.setViewport({\n            ...viewport,\n            ...scrollDimensions,\n          });\n          stack.defer(async () => {\n            if (viewport) {\n              await this.setViewport(viewport).catch(debugError);\n            } else {\n              await this.setViewport({\n                width: 0,\n                height: 0,\n              }).catch(debugError);\n            }\n          });\n        }\n      } else {\n        options.captureBeyondViewport = false;\n      }\n    }\n\n    const data = await this._screenshot(options);\n    if (options.encoding === 'base64') {\n      return data;\n    }\n    const buffer = Buffer.from(data, 'base64');\n    await this._maybeWriteBufferToFile(options.path, buffer);\n    return buffer;\n  }\n\n  /**\n   * @internal\n   */\n  abstract _screenshot(options: Readonly<ScreenshotOptions>): Promise<string>;\n\n  /**\n   * Generates a PDF of the page with the `print` CSS media type.\n   *\n   * @param options - options for generating the PDF.\n   *\n   * @remarks\n   *\n   * To generate a PDF with the `screen` media type, call\n   * {@link Page.emulateMediaType | `page.emulateMediaType('screen')`} before\n   * calling `page.pdf()`.\n   *\n   * By default, `page.pdf()` generates a pdf with modified colors for printing.\n   * Use the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-print-color-adjust | `-webkit-print-color-adjust`}\n   * property to force rendering of exact colors.\n   */\n  abstract createPDFStream(\n    options?: PDFOptions\n  ): Promise<ReadableStream<Uint8Array>>;\n\n  /**\n   * {@inheritDoc Page.createPDFStream}\n   */\n  abstract pdf(options?: PDFOptions): Promise<Buffer>;\n\n  /**\n   * The page's title\n   *\n   * @remarks\n   *\n   * Shortcut for {@link Frame.title | page.mainFrame().title()}.\n   */\n  async title(): Promise<string> {\n    return await this.mainFrame().title();\n  }\n\n  abstract close(options?: {runBeforeUnload?: boolean}): Promise<void>;\n\n  /**\n   * Indicates that the page has been closed.\n   * @returns\n   */\n  abstract isClosed(): boolean;\n\n  /**\n   * {@inheritDoc Mouse}\n   */\n  abstract get mouse(): Mouse;\n\n  /**\n   * This method fetches an element with `selector`, scrolls it into view if\n   * needed, and then uses {@link Page.mouse} to click in the center of the\n   * element. If there's no element matching `selector`, the method throws an\n   * error.\n   *\n   * @remarks\n   *\n   * Bear in mind that if `click()` triggers a navigation event and\n   * there's a separate `page.waitForNavigation()` promise to be resolved, you\n   * may end up with a race condition that yields unexpected results. The\n   * correct pattern for click and wait for navigation is the following:\n   *\n   * ```ts\n   * const [response] = await Promise.all([\n   *   page.waitForNavigation(waitOptions),\n   *   page.click(selector, clickOptions),\n   * ]);\n   * ```\n   *\n   * Shortcut for {@link Frame.click | page.mainFrame().click(selector[, options]) }.\n   * @param selector - A `selector` to search for element to click. If there are\n   * multiple elements satisfying the `selector`, the first will be clicked\n   * @param options - `Object`\n   * @returns Promise which resolves when the element matching `selector` is\n   * successfully clicked. The Promise will be rejected if there is no element\n   * matching `selector`.\n   */\n  click(selector: string, options?: Readonly<ClickOptions>): Promise<void> {\n    return this.mainFrame().click(selector, options);\n  }\n\n  /**\n   * This method fetches an element with `selector` and focuses it. If there's no\n   * element matching `selector`, the method throws an error.\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector }\n   * of an element to focus. If there are multiple elements satisfying the\n   * selector, the first will be focused.\n   * @returns Promise which resolves when the element matching selector is\n   * successfully focused. The promise will be rejected if there is no element\n   * matching selector.\n   *\n   * @remarks\n   *\n   * Shortcut for {@link Frame.focus | page.mainFrame().focus(selector)}.\n   */\n  focus(selector: string): Promise<void> {\n    return this.mainFrame().focus(selector);\n  }\n\n  /**\n   * This method fetches an element with `selector`, scrolls it into view if\n   * needed, and then uses {@link Page.mouse}\n   * to hover over the center of the element.\n   * If there's no element matching `selector`, the method throws an error.\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * to search for element to hover. If there are multiple elements satisfying\n   * the selector, the first will be hovered.\n   * @returns Promise which resolves when the element matching `selector` is\n   * successfully hovered. Promise gets rejected if there's no element matching\n   * `selector`.\n   *\n   * @remarks\n   *\n   * Shortcut for {@link Page.hover | page.mainFrame().hover(selector)}.\n   */\n  hover(selector: string): Promise<void> {\n    return this.mainFrame().hover(selector);\n  }\n\n  /**\n   * Triggers a `change` and `input` event once all the provided options have been\n   * selected. If there's no `<select>` element matching `selector`, the method\n   * throws an error.\n   *\n   * @example\n   *\n   * ```ts\n   * page.select('select#colors', 'blue'); // single selection\n   * page.select('select#colors', 'red', 'green', 'blue'); // multiple selections\n   * ```\n   *\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | Selector}\n   * to query the page for\n   * @param values - Values of options to select. If the `<select>` has the\n   * `multiple` attribute, all values are considered, otherwise only the first one\n   * is taken into account.\n   * @returns\n   *\n   * @remarks\n   *\n   * Shortcut for {@link Frame.select | page.mainFrame().select()}\n   */\n  select(selector: string, ...values: string[]): Promise<string[]> {\n    return this.mainFrame().select(selector, ...values);\n  }\n\n  /**\n   * This method fetches an element with `selector`, scrolls it into view if\n   * needed, and then uses {@link Page.touchscreen}\n   * to tap in the center of the element.\n   * If there's no element matching `selector`, the method throws an error.\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | Selector}\n   * to search for element to tap. If there are multiple elements satisfying the\n   * selector, the first will be tapped.\n   *\n   * @remarks\n   *\n   * Shortcut for {@link Frame.tap | page.mainFrame().tap(selector)}.\n   */\n  tap(selector: string): Promise<void> {\n    return this.mainFrame().tap(selector);\n  }\n\n  /**\n   * Sends a `keydown`, `keypress/input`, and `keyup` event for each character\n   * in the text.\n   *\n   * To press a special key, like `Control` or `ArrowDown`, use {@link Keyboard.press}.\n   * @example\n   *\n   * ```ts\n   * await page.type('#mytextarea', 'Hello');\n   * // Types instantly\n   * await page.type('#mytextarea', 'World', {delay: 100});\n   * // Types slower, like a user\n   * ```\n   *\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * of an element to type into. If there are multiple elements satisfying the\n   * selector, the first will be used.\n   * @param text - A text to type into a focused element.\n   * @param options - have property `delay` which is the Time to wait between\n   * key presses in milliseconds. Defaults to `0`.\n   * @returns\n   */\n  type(\n    selector: string,\n    text: string,\n    options?: Readonly<KeyboardTypeOptions>\n  ): Promise<void> {\n    return this.mainFrame().type(selector, text, options);\n  }\n\n  /**\n   * Wait for the `selector` to appear in page. If at the moment of calling the\n   * method the `selector` already exists, the method will return immediately. If\n   * the `selector` doesn't appear after the `timeout` milliseconds of waiting, the\n   * function will throw.\n   *\n   * @example\n   * This method works across navigations:\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   let currentURL;\n   *   page\n   *     .waitForSelector('img')\n   *     .then(() => console.log('First URL with image: ' + currentURL));\n   *   for (currentURL of [\n   *     'https://example.com',\n   *     'https://google.com',\n   *     'https://bbc.com',\n   *   ]) {\n   *     await page.goto(currentURL);\n   *   }\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * of an element to wait for\n   * @param options - Optional waiting parameters\n   * @returns Promise which resolves when element specified by selector string\n   * is added to DOM. Resolves to `null` if waiting for hidden: `true` and\n   * selector is not found in DOM.\n   *\n   * @remarks\n   * The optional Parameter in Arguments `options` are:\n   *\n   * - `visible`: A boolean wait for element to be present in DOM and to be\n   *   visible, i.e. to not have `display: none` or `visibility: hidden` CSS\n   *   properties. Defaults to `false`.\n   *\n   * - `hidden`: Wait for element to not be found in the DOM or to be hidden,\n   *   i.e. have `display: none` or `visibility: hidden` CSS properties. Defaults to\n   *   `false`.\n   *\n   * - `timeout`: maximum time to wait for in milliseconds. Defaults to `30000`\n   *   (30 seconds). Pass `0` to disable timeout. The default value can be changed\n   *   by using the {@link Page.setDefaultTimeout} method.\n   */\n  async waitForSelector<Selector extends string>(\n    selector: Selector,\n    options: WaitForSelectorOptions = {}\n  ): Promise<ElementHandle<NodeFor<Selector>> | null> {\n    return await this.mainFrame().waitForSelector(selector, options);\n  }\n\n  /**\n   * Waits for the provided function, `pageFunction`, to return a truthy value when\n   * evaluated in the page's context.\n   *\n   * @example\n   * {@link Page.waitForFunction} can be used to observe a viewport size change:\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   const watchDog = page.waitForFunction('window.innerWidth < 100');\n   *   await page.setViewport({width: 50, height: 50});\n   *   await watchDog;\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @example\n   * Arguments can be passed from Node.js to `pageFunction`:\n   *\n   * ```ts\n   * const selector = '.foo';\n   * await page.waitForFunction(\n   *   selector => !!document.querySelector(selector),\n   *   {},\n   *   selector\n   * );\n   * ```\n   *\n   * @example\n   * The provided `pageFunction` can be asynchronous:\n   *\n   * ```ts\n   * const username = 'github-username';\n   * await page.waitForFunction(\n   *   async username => {\n   *     const githubResponse = await fetch(\n   *       `https://api.github.com/users/${username}`\n   *     );\n   *     const githubUser = await githubResponse.json();\n   *     // show the avatar\n   *     const img = document.createElement('img');\n   *     img.src = githubUser.avatar_url;\n   *     // wait 3 seconds\n   *     await new Promise((resolve, reject) => setTimeout(resolve, 3000));\n   *     img.remove();\n   *   },\n   *   {},\n   *   username\n   * );\n   * ```\n   *\n   * @param pageFunction - Function to be evaluated in browser context until it returns a\n   * truthy value.\n   * @param options - Options for configuring waiting behavior.\n   */\n  waitForFunction<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>,\n  >(\n    pageFunction: Func | string,\n    options?: FrameWaitForFunctionOptions,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    return this.mainFrame().waitForFunction(pageFunction, options, ...args);\n  }\n\n  /**\n   * This method is typically coupled with an action that triggers a device\n   * request from an api such as WebBluetooth.\n   *\n   * :::caution\n   *\n   * This must be called before the device request is made. It will not return a\n   * currently active device prompt.\n   *\n   * :::\n   *\n   * @example\n   *\n   * ```ts\n   * const [devicePrompt] = Promise.all([\n   *   page.waitForDevicePrompt(),\n   *   page.click('#connect-bluetooth'),\n   * ]);\n   * await devicePrompt.select(\n   *   await devicePrompt.waitForDevice(({name}) => name.includes('My Device'))\n   * );\n   * ```\n   */\n  abstract waitForDevicePrompt(\n    options?: WaitTimeoutOptions\n  ): Promise<DeviceRequestPrompt>;\n\n  /** @internal */\n  [disposeSymbol](): void {\n    return void this.close().catch(debugError);\n  }\n\n  /** @internal */\n  [asyncDisposeSymbol](): Promise<void> {\n    return this.close();\n  }\n}\n\n/**\n * @internal\n */\nexport const supportedMetrics = new Set<string>([\n  'Timestamp',\n  'Documents',\n  'Frames',\n  'JSEventListeners',\n  'Nodes',\n  'LayoutCount',\n  'RecalcStyleCount',\n  'LayoutDuration',\n  'RecalcStyleDuration',\n  'ScriptDuration',\n  'TaskDuration',\n  'JSHeapUsedSize',\n  'JSHeapTotalSize',\n]);\n\n/** @see https://w3c.github.io/webdriver-bidi/#normalize-rect */\nfunction normalizeRectangle<BoundingBoxType extends BoundingBox>(\n  clip: Readonly<BoundingBoxType>\n): BoundingBoxType {\n  return {\n    ...clip,\n    ...(clip.width < 0\n      ? {\n          x: clip.x + clip.width,\n          width: -clip.width,\n        }\n      : {\n          x: clip.x,\n          width: clip.width,\n        }),\n    ...(clip.height < 0\n      ? {\n          y: clip.y + clip.height,\n          height: -clip.height,\n        }\n      : {\n          y: clip.y,\n          height: clip.height,\n        }),\n  };\n}\n\nfunction roundRectangle<BoundingBoxType extends BoundingBox>(\n  clip: Readonly<BoundingBoxType>\n): BoundingBoxType {\n  const x = Math.round(clip.x);\n  const y = Math.round(clip.y);\n  const width = Math.round(clip.width + clip.x - x);\n  const height = Math.round(clip.height + clip.y - y);\n  return {...clip, x, y, width, height};\n}\n", "/**\n * @license\n * Copyright 2022 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {ElementHandle} from '../api/ElementHandle.js';\nimport type {JSHandle} from '../api/JSHandle.js';\nimport type {Realm} from '../api/Realm.js';\nimport type {Poller} from '../injected/Poller.js';\nimport {Deferred} from '../util/Deferred.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\nimport {stringifyFunction} from '../util/Function.js';\n\nimport {TimeoutError} from './Errors.js';\nimport {LazyArg} from './LazyArg.js';\nimport type {HandleFor} from './types.js';\n\n/**\n * @internal\n */\nexport interface WaitTaskOptions {\n  polling: 'raf' | 'mutation' | number;\n  root?: ElementHandle<Node>;\n  timeout: number;\n  signal?: AbortSignal;\n}\n\n/**\n * @internal\n */\nexport class WaitTask<T = unknown> {\n  #world: Realm;\n  #polling: 'raf' | 'mutation' | number;\n  #root?: ElementHandle<Node>;\n\n  #fn: string;\n  #args: unknown[];\n\n  #timeout?: NodeJS.Timeout;\n  #timeoutError?: TimeoutError;\n\n  #result = Deferred.create<HandleFor<T>>();\n\n  #poller?: JSHandle<Poller<T>>;\n  #signal?: AbortSignal;\n  #reruns: AbortController[] = [];\n\n  constructor(\n    world: Realm,\n    options: WaitTaskOptions,\n    fn: ((...args: unknown[]) => Promise<T>) | string,\n    ...args: unknown[]\n  ) {\n    this.#world = world;\n    this.#polling = options.polling;\n    this.#root = options.root;\n    this.#signal = options.signal;\n    this.#signal?.addEventListener(\n      'abort',\n      () => {\n        void this.terminate(this.#signal?.reason);\n      },\n      {\n        once: true,\n      }\n    );\n\n    switch (typeof fn) {\n      case 'string':\n        this.#fn = `() => {return (${fn});}`;\n        break;\n      default:\n        this.#fn = stringifyFunction(fn);\n        break;\n    }\n    this.#args = args;\n\n    this.#world.taskManager.add(this);\n\n    if (options.timeout) {\n      this.#timeoutError = new TimeoutError(\n        `Waiting failed: ${options.timeout}ms exceeded`\n      );\n      this.#timeout = setTimeout(() => {\n        void this.terminate(this.#timeoutError);\n      }, options.timeout);\n    }\n\n    void this.rerun();\n  }\n\n  get result(): Promise<HandleFor<T>> {\n    return this.#result.valueOrThrow();\n  }\n\n  async rerun(): Promise<void> {\n    for (const prev of this.#reruns) {\n      prev.abort();\n    }\n    this.#reruns.length = 0;\n    const controller = new AbortController();\n    this.#reruns.push(controller);\n    try {\n      switch (this.#polling) {\n        case 'raf':\n          this.#poller = await this.#world.evaluateHandle(\n            ({RAFPoller, createFunction}, fn, ...args) => {\n              const fun = createFunction(fn);\n              return new RAFPoller(() => {\n                return fun(...args) as Promise<T>;\n              });\n            },\n            LazyArg.create(context => {\n              return context.puppeteerUtil;\n            }),\n            this.#fn,\n            ...this.#args\n          );\n          break;\n        case 'mutation':\n          this.#poller = await this.#world.evaluateHandle(\n            ({MutationPoller, createFunction}, root, fn, ...args) => {\n              const fun = createFunction(fn);\n              return new MutationPoller(() => {\n                return fun(...args) as Promise<T>;\n              }, root || document);\n            },\n            LazyArg.create(context => {\n              return context.puppeteerUtil;\n            }),\n            this.#root,\n            this.#fn,\n            ...this.#args\n          );\n          break;\n        default:\n          this.#poller = await this.#world.evaluateHandle(\n            ({IntervalPoller, createFunction}, ms, fn, ...args) => {\n              const fun = createFunction(fn);\n              return new IntervalPoller(() => {\n                return fun(...args) as Promise<T>;\n              }, ms);\n            },\n            LazyArg.create(context => {\n              return context.puppeteerUtil;\n            }),\n            this.#polling,\n            this.#fn,\n            ...this.#args\n          );\n          break;\n      }\n\n      await this.#poller.evaluate(poller => {\n        void poller.start();\n      });\n\n      const result = await this.#poller.evaluateHandle(poller => {\n        return poller.result();\n      });\n      this.#result.resolve(result);\n\n      await this.terminate();\n    } catch (error) {\n      if (controller.signal.aborted) {\n        return;\n      }\n      const badError = this.getBadError(error);\n      if (badError) {\n        await this.terminate(badError);\n      }\n    }\n  }\n\n  async terminate(error?: Error): Promise<void> {\n    this.#world.taskManager.delete(this);\n\n    clearTimeout(this.#timeout);\n\n    if (error && !this.#result.finished()) {\n      this.#result.reject(error);\n    }\n\n    if (this.#poller) {\n      try {\n        await this.#poller.evaluateHandle(async poller => {\n          await poller.stop();\n        });\n        if (this.#poller) {\n          await this.#poller.dispose();\n          this.#poller = undefined;\n        }\n      } catch {\n        // Ignore errors since they most likely come from low-level cleanup.\n      }\n    }\n  }\n\n  /**\n   * Not all errors lead to termination. They usually imply we need to rerun the task.\n   */\n  getBadError(error: unknown): Error | undefined {\n    if (isErrorLike(error)) {\n      // When frame is detached the task should have been terminated by the IsolatedWorld.\n      // This can fail if we were adding this task while the frame was detached,\n      // so we terminate here instead.\n      if (\n        error.message.includes(\n          'Execution context is not available in detached frame'\n        )\n      ) {\n        return new Error('Waiting failed: Frame detached');\n      }\n\n      // When the page is navigated, the promise is rejected.\n      // We will try again in the new execution context.\n      if (error.message.includes('Execution context was destroyed')) {\n        return;\n      }\n\n      // We could have tried to evaluate in a context which was already\n      // destroyed.\n      if (error.message.includes('Cannot find context with specified id')) {\n        return;\n      }\n\n      // Errors coming from WebDriver BiDi. TODO: Adjust messages after\n      // https://github.com/w3c/webdriver-bidi/issues/540 is resolved.\n      if (\n        error.message.includes(\n          \"AbortError: Actor 'MessageHandlerFrame' destroyed\"\n        )\n      ) {\n        return;\n      }\n\n      return error;\n    }\n\n    return new Error('WaitTask failed with an error', {\n      cause: error,\n    });\n  }\n}\n\n/**\n * @internal\n */\nexport class TaskManager {\n  #tasks: Set<WaitTask> = new Set<WaitTask>();\n\n  add(task: WaitTask<any>): void {\n    this.#tasks.add(task);\n  }\n\n  delete(task: WaitTask<any>): void {\n    this.#tasks.delete(task);\n  }\n\n  terminateAll(error?: Error): void {\n    for (const task of this.#tasks) {\n      void task.terminate(error);\n    }\n    this.#tasks.clear();\n  }\n\n  async rerunAll(): Promise<void> {\n    await Promise.all(\n      [...this.#tasks].map(task => {\n        return task.rerun();\n      })\n    );\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {TimeoutSettings} from '../common/TimeoutSettings.js';\nimport type {\n  EvaluateFunc,\n  HandleFor,\n  InnerLazyParams,\n} from '../common/types.js';\nimport {TaskManager, WaitTask} from '../common/WaitTask.js';\nimport {disposeSymbol} from '../util/disposable.js';\n\nimport type {ElementHandle} from './ElementHandle.js';\nimport type {Environment} from './Environment.js';\nimport type {JSHandle} from './JSHandle.js';\n\n/**\n * @internal\n */\nexport abstract class Realm implements Disposable {\n  protected readonly timeoutSettings: TimeoutSettings;\n  readonly taskManager = new TaskManager();\n\n  constructor(timeoutSettings: TimeoutSettings) {\n    this.timeoutSettings = timeoutSettings;\n  }\n\n  abstract get environment(): Environment;\n\n  abstract adoptHandle<T extends JSHandle<Node>>(handle: T): Promise<T>;\n  abstract transferHandle<T extends JSHandle<Node>>(handle: T): Promise<T>;\n  abstract evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>,\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>>;\n  abstract evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>,\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>>;\n\n  async waitForFunction<\n    Params extends unknown[],\n    Func extends EvaluateFunc<InnerLazyParams<Params>> = EvaluateFunc<\n      InnerLazyParams<Params>\n    >,\n  >(\n    pageFunction: Func | string,\n    options: {\n      polling?: 'raf' | 'mutation' | number;\n      timeout?: number;\n      root?: ElementHandle<Node>;\n      signal?: AbortSignal;\n    } = {},\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    const {\n      polling = 'raf',\n      timeout = this.timeoutSettings.timeout(),\n      root,\n      signal,\n    } = options;\n    if (typeof polling === 'number' && polling < 0) {\n      throw new Error('Cannot poll with non-positive interval');\n    }\n    const waitTask = new WaitTask(\n      this,\n      {\n        polling,\n        root,\n        timeout,\n        signal,\n      },\n      pageFunction as unknown as\n        | ((...args: unknown[]) => Promise<Awaited<ReturnType<Func>>>)\n        | string,\n      ...args\n    );\n    return await waitTask.result;\n  }\n\n  abstract adoptBackendNode(backendNodeId?: number): Promise<JSHandle<Node>>;\n\n  get disposed(): boolean {\n    return this.#disposed;\n  }\n\n  #disposed = false;\n  /** @internal */\n  dispose(): void {\n    this.#disposed = true;\n    this.taskManager.terminateAll(\n      new Error('waitForFunction failed: frame got detached.')\n    );\n  }\n  /** @internal */\n  [disposeSymbol](): void {\n    this.dispose();\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {Browser} from './Browser.js';\nimport type {BrowserContext} from './BrowserContext.js';\nimport type {CDPSession} from './CDPSession.js';\nimport type {Page} from './Page.js';\nimport type {WebWorker} from './WebWorker.js';\n\n/**\n * @public\n */\nexport enum TargetType {\n  PAGE = 'page',\n  BACKGROUND_PAGE = 'background_page',\n  SERVICE_WORKER = 'service_worker',\n  SHARED_WORKER = 'shared_worker',\n  BROWSER = 'browser',\n  WEBVIEW = 'webview',\n  OTHER = 'other',\n  /**\n   * @internal\n   */\n  TAB = 'tab',\n}\n\n/**\n * Target represents a\n * {@link https://chromedevtools.github.io/devtools-protocol/tot/Target/ | CDP target}.\n * In CDP a target is something that can be debugged such a frame, a page or a\n * worker.\n * @public\n */\nexport abstract class Target {\n  /**\n   * @internal\n   */\n  protected constructor() {}\n\n  /**\n   * If the target is not of type `\"service_worker\"` or `\"shared_worker\"`, returns `null`.\n   */\n  async worker(): Promise<WebWorker | null> {\n    return null;\n  }\n\n  /**\n   * If the target is not of type `\"page\"`, `\"webview\"` or `\"background_page\"`,\n   * returns `null`.\n   */\n  async page(): Promise<Page | null> {\n    return null;\n  }\n\n  /**\n   * Forcefully creates a page for a target of any type. It is useful if you\n   * want to handle a CDP target of type `other` as a page. If you deal with a\n   * regular page target, use {@link Target.page}.\n   */\n  abstract asPage(): Promise<Page>;\n\n  abstract url(): string;\n\n  /**\n   * Creates a Chrome Devtools Protocol session attached to the target.\n   */\n  abstract createCDPSession(): Promise<CDPSession>;\n\n  /**\n   * Identifies what kind of target this is.\n   *\n   * @remarks\n   *\n   * See {@link https://developer.chrome.com/extensions/background_pages | docs} for more info about background pages.\n   */\n  abstract type(): TargetType;\n\n  /**\n   * Get the browser the target belongs to.\n   */\n  abstract browser(): Browser;\n\n  /**\n   * Get the browser context the target belongs to.\n   */\n  abstract browserContext(): BrowserContext;\n\n  /**\n   * Get the target that opened this target. Top-level targets return `null`.\n   */\n  abstract opener(): Target | undefined;\n}\n", "/**\n * @license\n * Copyright 2018 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {UnsupportedOperation} from '../common/Errors.js';\nimport {EventEmitter, type EventType} from '../common/EventEmitter.js';\nimport {TimeoutSettings} from '../common/TimeoutSettings.js';\nimport type {EvaluateFunc, HandleFor} from '../common/types.js';\nimport {withSourcePuppeteerURLIfNone} from '../common/util.js';\n\nimport type {CDPSession} from './CDPSession.js';\nimport type {Realm} from './Realm.js';\n\n/**\n * This class represents a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API | WebWorker}.\n *\n * @remarks\n * The events `workercreated` and `workerdestroyed` are emitted on the page\n * object to signal the worker lifecycle.\n *\n * @example\n *\n * ```ts\n * page.on('workercreated', worker =>\n *   console.log('Worker created: ' + worker.url())\n * );\n * page.on('workerdestroyed', worker =>\n *   console.log('Worker destroyed: ' + worker.url())\n * );\n *\n * console.log('Current workers:');\n * for (const worker of page.workers()) {\n *   console.log('  ' + worker.url());\n * }\n * ```\n *\n * @public\n */\nexport abstract class WebWorker extends EventEmitter<\n  Record<EventType, unknown>\n> {\n  /**\n   * @internal\n   */\n  readonly timeoutSettings = new TimeoutSettings();\n\n  readonly #url: string;\n\n  /**\n   * @internal\n   */\n  constructor(url: string) {\n    super();\n\n    this.#url = url;\n  }\n\n  /**\n   * @internal\n   */\n  abstract mainRealm(): Realm;\n\n  /**\n   * The URL of this web worker.\n   */\n  url(): string {\n    return this.#url;\n  }\n\n  /**\n   * The CDP session client the WebWorker belongs to.\n   */\n  abstract get client(): CDPSession;\n\n  /**\n   * Evaluates a given function in the {@link WebWorker | worker}.\n   *\n   * @remarks If the given function returns a promise,\n   * {@link WebWorker.evaluate | evaluate} will wait for the promise to resolve.\n   *\n   * As a rule of thumb, if the return value of the given function is more\n   * complicated than a JSON object (e.g. most classes), then\n   * {@link WebWorker.evaluate | evaluate} will _likely_ return some truncated\n   * value (or `{}`). This is because we are not returning the actual return\n   * value, but a deserialized version as a result of transferring the return\n   * value through a protocol to Puppeteer.\n   *\n   * In general, you should use\n   * {@link WebWorker.evaluateHandle | evaluateHandle} if\n   * {@link WebWorker.evaluate | evaluate} cannot serialize the return value\n   * properly or you need a mutable {@link JSHandle | handle} to the return\n   * object.\n   *\n   * @param func - Function to be evaluated.\n   * @param args - Arguments to pass into `func`.\n   * @returns The result of `func`.\n   */\n  async evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>,\n  >(func: Func | string, ...args: Params): Promise<Awaited<ReturnType<Func>>> {\n    func = withSourcePuppeteerURLIfNone(this.evaluate.name, func);\n    return await this.mainRealm().evaluate(func, ...args);\n  }\n\n  /**\n   * Evaluates a given function in the {@link WebWorker | worker}.\n   *\n   * @remarks If the given function returns a promise,\n   * {@link WebWorker.evaluate | evaluate} will wait for the promise to resolve.\n   *\n   * In general, you should use\n   * {@link WebWorker.evaluateHandle | evaluateHandle} if\n   * {@link WebWorker.evaluate | evaluate} cannot serialize the return value\n   * properly or you need a mutable {@link JSHandle | handle} to the return\n   * object.\n   *\n   * @param func - Function to be evaluated.\n   * @param args - Arguments to pass into `func`.\n   * @returns A {@link JSHandle | handle} to the return value of `func`.\n   */\n  async evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>,\n  >(\n    func: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    func = withSourcePuppeteerURLIfNone(this.evaluateHandle.name, func);\n    return await this.mainRealm().evaluateHandle(func, ...args);\n  }\n\n  async close(): Promise<void> {\n    throw new UnsupportedOperation('WebWorker.close() is not supported');\n  }\n}\n", "/**\n * @license\n * Copyright 2018 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {Protocol} from 'devtools-protocol';\n\nimport type {CDPSession} from '../api/CDPSession.js';\nimport type {ElementHandle} from '../api/ElementHandle.js';\n\n/**\n * Represents a Node and the properties of it that are relevant to Accessibility.\n * @public\n */\nexport interface SerializedAXNode {\n  /**\n   * The {@link https://www.w3.org/TR/wai-aria/#usage_intro | role} of the node.\n   */\n  role: string;\n  /**\n   * A human readable name for the node.\n   */\n  name?: string;\n  /**\n   * The current value of the node.\n   */\n  value?: string | number;\n  /**\n   * An additional human readable description of the node.\n   */\n  description?: string;\n  /**\n   * Any keyboard shortcuts associated with this node.\n   */\n  keyshortcuts?: string;\n  /**\n   * A human readable alternative to the role.\n   */\n  roledescription?: string;\n  /**\n   * A description of the current value.\n   */\n  valuetext?: string;\n  disabled?: boolean;\n  expanded?: boolean;\n  focused?: boolean;\n  modal?: boolean;\n  multiline?: boolean;\n  /**\n   * Whether more than one child can be selected.\n   */\n  multiselectable?: boolean;\n  readonly?: boolean;\n  required?: boolean;\n  selected?: boolean;\n  /**\n   * Whether the checkbox is checked, or in a\n   * {@link https://www.w3.org/TR/wai-aria-practices/examples/checkbox/checkbox-2/checkbox-2.html | mixed state}.\n   */\n  checked?: boolean | 'mixed';\n  /**\n   * Whether the node is checked or in a mixed state.\n   */\n  pressed?: boolean | 'mixed';\n  /**\n   * The level of a heading.\n   */\n  level?: number;\n  valuemin?: number;\n  valuemax?: number;\n  autocomplete?: string;\n  haspopup?: string;\n  /**\n   * Whether and in what way this node's value is invalid.\n   */\n  invalid?: string;\n  orientation?: string;\n  /**\n   * Children of this node, if there are any.\n   */\n  children?: SerializedAXNode[];\n}\n\n/**\n * @public\n */\nexport interface SnapshotOptions {\n  /**\n   * Prune uninteresting nodes from the tree.\n   * @defaultValue `true`\n   */\n  interestingOnly?: boolean;\n  /**\n   * Root node to get the accessibility tree for\n   * @defaultValue The root node of the entire page.\n   */\n  root?: ElementHandle<Node>;\n}\n\n/**\n * The Accessibility class provides methods for inspecting the browser's\n * accessibility tree. The accessibility tree is used by assistive technology\n * such as {@link https://en.wikipedia.org/wiki/Screen_reader | screen readers} or\n * {@link https://en.wikipedia.org/wiki/Switch_access | switches}.\n *\n * @remarks\n *\n * Accessibility is a very platform-specific thing. On different platforms,\n * there are different screen readers that might have wildly different output.\n *\n * Blink - Chrome's rendering engine - has a concept of \"accessibility tree\",\n * which is then translated into different platform-specific APIs. Accessibility\n * namespace gives users access to the Blink Accessibility Tree.\n *\n * Most of the accessibility tree gets filtered out when converting from Blink\n * AX Tree to Platform-specific AX-Tree or by assistive technologies themselves.\n * By default, Puppeteer tries to approximate this filtering, exposing only\n * the \"interesting\" nodes of the tree.\n *\n * @public\n */\nexport class Accessibility {\n  #client: CDPSession;\n\n  /**\n   * @internal\n   */\n  constructor(client: CDPSession) {\n    this.#client = client;\n  }\n\n  /**\n   * @internal\n   */\n  updateClient(client: CDPSession): void {\n    this.#client = client;\n  }\n\n  /**\n   * Captures the current state of the accessibility tree.\n   * The returned object represents the root accessible node of the page.\n   *\n   * @remarks\n   *\n   * **NOTE** The Chrome accessibility tree contains nodes that go unused on\n   * most platforms and by most screen readers. Puppeteer will discard them as\n   * well for an easier to process tree, unless `interestingOnly` is set to\n   * `false`.\n   *\n   * @example\n   * An example of dumping the entire accessibility tree:\n   *\n   * ```ts\n   * const snapshot = await page.accessibility.snapshot();\n   * console.log(snapshot);\n   * ```\n   *\n   * @example\n   * An example of logging the focused node's name:\n   *\n   * ```ts\n   * const snapshot = await page.accessibility.snapshot();\n   * const node = findFocusedNode(snapshot);\n   * console.log(node && node.name);\n   *\n   * function findFocusedNode(node) {\n   *   if (node.focused) return node;\n   *   for (const child of node.children || []) {\n   *     const foundNode = findFocusedNode(child);\n   *     return foundNode;\n   *   }\n   *   return null;\n   * }\n   * ```\n   *\n   * @returns An AXNode object representing the snapshot.\n   */\n  public async snapshot(\n    options: SnapshotOptions = {}\n  ): Promise<SerializedAXNode | null> {\n    const {interestingOnly = true, root = null} = options;\n    const {nodes} = await this.#client.send('Accessibility.getFullAXTree');\n    let backendNodeId: number | undefined;\n    if (root) {\n      const {node} = await this.#client.send('DOM.describeNode', {\n        objectId: root.id,\n      });\n      backendNodeId = node.backendNodeId;\n    }\n    const defaultRoot = AXNode.createTree(nodes);\n    let needle: AXNode | null = defaultRoot;\n    if (backendNodeId) {\n      needle = defaultRoot.find(node => {\n        return node.payload.backendDOMNodeId === backendNodeId;\n      });\n      if (!needle) {\n        return null;\n      }\n    }\n    if (!interestingOnly) {\n      return this.serializeTree(needle)[0] ?? null;\n    }\n\n    const interestingNodes = new Set<AXNode>();\n    this.collectInterestingNodes(interestingNodes, defaultRoot, false);\n    if (!interestingNodes.has(needle)) {\n      return null;\n    }\n    return this.serializeTree(needle, interestingNodes)[0] ?? null;\n  }\n\n  private serializeTree(\n    node: AXNode,\n    interestingNodes?: Set<AXNode>\n  ): SerializedAXNode[] {\n    const children: SerializedAXNode[] = [];\n    for (const child of node.children) {\n      children.push(...this.serializeTree(child, interestingNodes));\n    }\n\n    if (interestingNodes && !interestingNodes.has(node)) {\n      return children;\n    }\n\n    const serializedNode = node.serialize();\n    if (children.length) {\n      serializedNode.children = children;\n    }\n    return [serializedNode];\n  }\n\n  private collectInterestingNodes(\n    collection: Set<AXNode>,\n    node: AXNode,\n    insideControl: boolean\n  ): void {\n    if (node.isInteresting(insideControl)) {\n      collection.add(node);\n    }\n    if (node.isLeafNode()) {\n      return;\n    }\n    insideControl = insideControl || node.isControl();\n    for (const child of node.children) {\n      this.collectInterestingNodes(collection, child, insideControl);\n    }\n  }\n}\n\nclass AXNode {\n  public payload: Protocol.Accessibility.AXNode;\n  public children: AXNode[] = [];\n\n  #richlyEditable = false;\n  #editable = false;\n  #focusable = false;\n  #hidden = false;\n  #name: string;\n  #role: string;\n  #ignored: boolean;\n  #cachedHasFocusableChild?: boolean;\n\n  constructor(payload: Protocol.Accessibility.AXNode) {\n    this.payload = payload;\n    this.#name = this.payload.name ? this.payload.name.value : '';\n    this.#role = this.payload.role ? this.payload.role.value : 'Unknown';\n    this.#ignored = this.payload.ignored;\n\n    for (const property of this.payload.properties || []) {\n      if (property.name === 'editable') {\n        this.#richlyEditable = property.value.value === 'richtext';\n        this.#editable = true;\n      }\n      if (property.name === 'focusable') {\n        this.#focusable = property.value.value;\n      }\n      if (property.name === 'hidden') {\n        this.#hidden = property.value.value;\n      }\n    }\n  }\n\n  #isPlainTextField(): boolean {\n    if (this.#richlyEditable) {\n      return false;\n    }\n    if (this.#editable) {\n      return true;\n    }\n    return this.#role === 'textbox' || this.#role === 'searchbox';\n  }\n\n  #isTextOnlyObject(): boolean {\n    const role = this.#role;\n    return (\n      role === 'LineBreak' ||\n      role === 'text' ||\n      role === 'InlineTextBox' ||\n      role === 'StaticText'\n    );\n  }\n\n  #hasFocusableChild(): boolean {\n    if (this.#cachedHasFocusableChild === undefined) {\n      this.#cachedHasFocusableChild = false;\n      for (const child of this.children) {\n        if (child.#focusable || child.#hasFocusableChild()) {\n          this.#cachedHasFocusableChild = true;\n          break;\n        }\n      }\n    }\n    return this.#cachedHasFocusableChild;\n  }\n\n  public find(predicate: (x: AXNode) => boolean): AXNode | null {\n    if (predicate(this)) {\n      return this;\n    }\n    for (const child of this.children) {\n      const result = child.find(predicate);\n      if (result) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  public isLeafNode(): boolean {\n    if (!this.children.length) {\n      return true;\n    }\n\n    // These types of objects may have children that we use as internal\n    // implementation details, but we want to expose them as leaves to platform\n    // accessibility APIs because screen readers might be confused if they find\n    // any children.\n    if (this.#isPlainTextField() || this.#isTextOnlyObject()) {\n      return true;\n    }\n\n    // Roles whose children are only presentational according to the ARIA and\n    // HTML5 Specs should be hidden from screen readers.\n    // (Note that whilst ARIA buttons can have only presentational children, HTML5\n    // buttons are allowed to have content.)\n    switch (this.#role) {\n      case 'doc-cover':\n      case 'graphics-symbol':\n      case 'img':\n      case 'image':\n      case 'Meter':\n      case 'scrollbar':\n      case 'slider':\n      case 'separator':\n      case 'progressbar':\n        return true;\n      default:\n        break;\n    }\n\n    // Here and below: Android heuristics\n    if (this.#hasFocusableChild()) {\n      return false;\n    }\n    if (this.#focusable && this.#name) {\n      return true;\n    }\n    if (this.#role === 'heading' && this.#name) {\n      return true;\n    }\n    return false;\n  }\n\n  public isControl(): boolean {\n    switch (this.#role) {\n      case 'button':\n      case 'checkbox':\n      case 'ColorWell':\n      case 'combobox':\n      case 'DisclosureTriangle':\n      case 'listbox':\n      case 'menu':\n      case 'menubar':\n      case 'menuitem':\n      case 'menuitemcheckbox':\n      case 'menuitemradio':\n      case 'radio':\n      case 'scrollbar':\n      case 'searchbox':\n      case 'slider':\n      case 'spinbutton':\n      case 'switch':\n      case 'tab':\n      case 'textbox':\n      case 'tree':\n      case 'treeitem':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  public isInteresting(insideControl: boolean): boolean {\n    const role = this.#role;\n    if (role === 'Ignored' || this.#hidden || this.#ignored) {\n      return false;\n    }\n\n    if (this.#focusable || this.#richlyEditable) {\n      return true;\n    }\n\n    // If it's not focusable but has a control role, then it's interesting.\n    if (this.isControl()) {\n      return true;\n    }\n\n    // A non focusable child of a control is not interesting\n    if (insideControl) {\n      return false;\n    }\n\n    return this.isLeafNode() && !!this.#name;\n  }\n\n  public serialize(): SerializedAXNode {\n    const properties = new Map<string, number | string | boolean>();\n    for (const property of this.payload.properties || []) {\n      properties.set(property.name.toLowerCase(), property.value.value);\n    }\n    if (this.payload.name) {\n      properties.set('name', this.payload.name.value);\n    }\n    if (this.payload.value) {\n      properties.set('value', this.payload.value.value);\n    }\n    if (this.payload.description) {\n      properties.set('description', this.payload.description.value);\n    }\n\n    const node: SerializedAXNode = {\n      role: this.#role,\n    };\n\n    type UserStringProperty =\n      | 'name'\n      | 'value'\n      | 'description'\n      | 'keyshortcuts'\n      | 'roledescription'\n      | 'valuetext';\n\n    const userStringProperties: UserStringProperty[] = [\n      'name',\n      'value',\n      'description',\n      'keyshortcuts',\n      'roledescription',\n      'valuetext',\n    ];\n    const getUserStringPropertyValue = (key: UserStringProperty): string => {\n      return properties.get(key) as string;\n    };\n\n    for (const userStringProperty of userStringProperties) {\n      if (!properties.has(userStringProperty)) {\n        continue;\n      }\n\n      node[userStringProperty] = getUserStringPropertyValue(userStringProperty);\n    }\n\n    type BooleanProperty =\n      | 'disabled'\n      | 'expanded'\n      | 'focused'\n      | 'modal'\n      | 'multiline'\n      | 'multiselectable'\n      | 'readonly'\n      | 'required'\n      | 'selected';\n    const booleanProperties: BooleanProperty[] = [\n      'disabled',\n      'expanded',\n      'focused',\n      'modal',\n      'multiline',\n      'multiselectable',\n      'readonly',\n      'required',\n      'selected',\n    ];\n    const getBooleanPropertyValue = (key: BooleanProperty): boolean => {\n      return properties.get(key) as boolean;\n    };\n\n    for (const booleanProperty of booleanProperties) {\n      // RootWebArea's treat focus differently than other nodes. They report whether\n      // their frame  has focus, not whether focus is specifically on the root\n      // node.\n      if (booleanProperty === 'focused' && this.#role === 'RootWebArea') {\n        continue;\n      }\n      const value = getBooleanPropertyValue(booleanProperty);\n      if (!value) {\n        continue;\n      }\n      node[booleanProperty] = getBooleanPropertyValue(booleanProperty);\n    }\n\n    type TristateProperty = 'checked' | 'pressed';\n    const tristateProperties: TristateProperty[] = ['checked', 'pressed'];\n    for (const tristateProperty of tristateProperties) {\n      if (!properties.has(tristateProperty)) {\n        continue;\n      }\n      const value = properties.get(tristateProperty);\n      node[tristateProperty] =\n        value === 'mixed' ? 'mixed' : value === 'true' ? true : false;\n    }\n\n    type NumbericalProperty = 'level' | 'valuemax' | 'valuemin';\n    const numericalProperties: NumbericalProperty[] = [\n      'level',\n      'valuemax',\n      'valuemin',\n    ];\n    const getNumericalPropertyValue = (key: NumbericalProperty): number => {\n      return properties.get(key) as number;\n    };\n    for (const numericalProperty of numericalProperties) {\n      if (!properties.has(numericalProperty)) {\n        continue;\n      }\n      node[numericalProperty] = getNumericalPropertyValue(numericalProperty);\n    }\n\n    type TokenProperty =\n      | 'autocomplete'\n      | 'haspopup'\n      | 'invalid'\n      | 'orientation';\n    const tokenProperties: TokenProperty[] = [\n      'autocomplete',\n      'haspopup',\n      'invalid',\n      'orientation',\n    ];\n    const getTokenPropertyValue = (key: TokenProperty): string => {\n      return properties.get(key) as string;\n    };\n    for (const tokenProperty of tokenProperties) {\n      const value = getTokenPropertyValue(tokenProperty);\n      if (!value || value === 'false') {\n        continue;\n      }\n      node[tokenProperty] = getTokenPropertyValue(tokenProperty);\n    }\n    return node;\n  }\n\n  public static createTree(payloads: Protocol.Accessibility.AXNode[]): AXNode {\n    const nodeById = new Map<string, AXNode>();\n    for (const payload of payloads) {\n      nodeById.set(payload.nodeId, new AXNode(payload));\n    }\n    for (const node of nodeById.values()) {\n      for (const childId of node.payload.childIds || []) {\n        const child = nodeById.get(childId);\n        if (child) {\n          node.children.push(child);\n        }\n      }\n    }\n    return nodeById.values().next().value;\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {Deferred} from '../util/Deferred.js';\nimport {rewriteError} from '../util/ErrorLike.js';\n\nimport {ProtocolError, TargetCloseError} from './Errors.js';\nimport {debugError} from './util.js';\n\n/**\n * Manages callbacks and their IDs for the protocol request/response communication.\n *\n * @internal\n */\nexport class CallbackRegistry {\n  #callbacks = new Map<number, Callback>();\n  #idGenerator = createIncrementalIdGenerator();\n\n  create(\n    label: string,\n    timeout: number | undefined,\n    request: (id: number) => void\n  ): Promise<unknown> {\n    const callback = new Callback(this.#idGenerator(), label, timeout);\n    this.#callbacks.set(callback.id, callback);\n    try {\n      request(callback.id);\n    } catch (error) {\n      // We still throw sync errors synchronously and clean up the scheduled\n      // callback.\n      callback.promise.catch(debugError).finally(() => {\n        this.#callbacks.delete(callback.id);\n      });\n      callback.reject(error as Error);\n      throw error;\n    }\n    // Must only have sync code up until here.\n    return callback.promise.finally(() => {\n      this.#callbacks.delete(callback.id);\n    });\n  }\n\n  reject(id: number, message: string, originalMessage?: string): void {\n    const callback = this.#callbacks.get(id);\n    if (!callback) {\n      return;\n    }\n    this._reject(callback, message, originalMessage);\n  }\n\n  _reject(\n    callback: Callback,\n    errorMessage: string | ProtocolError,\n    originalMessage?: string\n  ): void {\n    let error: ProtocolError;\n    let message: string;\n    if (errorMessage instanceof ProtocolError) {\n      error = errorMessage;\n      error.cause = callback.error;\n      message = errorMessage.message;\n    } else {\n      error = callback.error;\n      message = errorMessage;\n    }\n\n    callback.reject(\n      rewriteError(\n        error,\n        `Protocol error (${callback.label}): ${message}`,\n        originalMessage\n      )\n    );\n  }\n\n  resolve(id: number, value: unknown): void {\n    const callback = this.#callbacks.get(id);\n    if (!callback) {\n      return;\n    }\n    callback.resolve(value);\n  }\n\n  clear(): void {\n    for (const callback of this.#callbacks.values()) {\n      // TODO: probably we can accept error messages as params.\n      this._reject(callback, new TargetCloseError('Target closed'));\n    }\n    this.#callbacks.clear();\n  }\n\n  /**\n   * @internal\n   */\n  getPendingProtocolErrors(): Error[] {\n    const result: Error[] = [];\n    for (const callback of this.#callbacks.values()) {\n      result.push(\n        new Error(`${callback.label} timed out. Trace: ${callback.error.stack}`)\n      );\n    }\n    return result;\n  }\n}\n/**\n * @internal\n */\n\nexport class Callback {\n  #id: number;\n  #error = new ProtocolError();\n  #deferred = Deferred.create<unknown>();\n  #timer?: ReturnType<typeof setTimeout>;\n  #label: string;\n\n  constructor(id: number, label: string, timeout?: number) {\n    this.#id = id;\n    this.#label = label;\n    if (timeout) {\n      this.#timer = setTimeout(() => {\n        this.#deferred.reject(\n          rewriteError(\n            this.#error,\n            `${label} timed out. Increase the 'protocolTimeout' setting in launch/connect calls for a higher timeout if needed.`\n          )\n        );\n      }, timeout);\n    }\n  }\n\n  resolve(value: unknown): void {\n    clearTimeout(this.#timer);\n    this.#deferred.resolve(value);\n  }\n\n  reject(error: Error): void {\n    clearTimeout(this.#timer);\n    this.#deferred.reject(error);\n  }\n\n  get id(): number {\n    return this.#id;\n  }\n\n  get promise(): Promise<unknown> {\n    return this.#deferred.valueOrThrow();\n  }\n\n  get error(): ProtocolError {\n    return this.#error;\n  }\n\n  get label(): string {\n    return this.#label;\n  }\n}\n\n/**\n * @internal\n */\nexport function createIncrementalIdGenerator(): GetIdFn {\n  let id = 0;\n  return (): number => {\n    return ++id;\n  };\n}\n\n/**\n * @internal\n */\nexport type GetIdFn = () => number;\n", "/**\n * @license\n * Copyright 2020 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {JSHandle} from '../api/JSHandle.js';\n\n/**\n * @public\n */\nexport interface ConsoleMessageLocation {\n  /**\n   * URL of the resource if known or `undefined` otherwise.\n   */\n  url?: string;\n\n  /**\n   * 0-based line number in the resource if known or `undefined` otherwise.\n   */\n  lineNumber?: number;\n\n  /**\n   * 0-based column number in the resource if known or `undefined` otherwise.\n   */\n  columnNumber?: number;\n}\n\n/**\n * The supported types for console messages.\n * @public\n */\nexport type ConsoleMessageType =\n  | 'log'\n  | 'debug'\n  | 'info'\n  | 'error'\n  | 'warn'\n  | 'dir'\n  | 'dirxml'\n  | 'table'\n  | 'trace'\n  | 'clear'\n  | 'startGroup'\n  | 'startGroupCollapsed'\n  | 'endGroup'\n  | 'assert'\n  | 'profile'\n  | 'profileEnd'\n  | 'count'\n  | 'timeEnd'\n  | 'verbose';\n\n/**\n * ConsoleMessage objects are dispatched by page via the 'console' event.\n * @public\n */\nexport class ConsoleMessage {\n  #type: ConsoleMessageType;\n  #text: string;\n  #args: JSHandle[];\n  #stackTraceLocations: ConsoleMessageLocation[];\n\n  /**\n   * @public\n   */\n  constructor(\n    type: ConsoleMessageType,\n    text: string,\n    args: JSHandle[],\n    stackTraceLocations: ConsoleMessageLocation[]\n  ) {\n    this.#type = type;\n    this.#text = text;\n    this.#args = args;\n    this.#stackTraceLocations = stackTraceLocations;\n  }\n\n  /**\n   * The type of the console message.\n   */\n  type(): ConsoleMessageType {\n    return this.#type;\n  }\n\n  /**\n   * The text of the console message.\n   */\n  text(): string {\n    return this.#text;\n  }\n\n  /**\n   * An array of arguments passed to the console.\n   */\n  args(): JSHandle[] {\n    return this.#args;\n  }\n\n  /**\n   * The location of the console message.\n   */\n  location(): ConsoleMessageLocation {\n    return this.#stackTraceLocations[0] ?? {};\n  }\n\n  /**\n   * The array of locations on the stack of the console message.\n   */\n  stackTrace(): ConsoleMessageLocation[] {\n    return this.#stackTraceLocations;\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {Protocol} from 'devtools-protocol';\n\nimport type {CDPSession} from '../api/CDPSession.js';\nimport {EventEmitter} from '../common/EventEmitter.js';\nimport {debugError, PuppeteerURL} from '../common/util.js';\nimport {assert} from '../util/assert.js';\nimport {DisposableStack} from '../util/disposable.js';\n\n/**\n * The CoverageEntry class represents one entry of the coverage report.\n * @public\n */\nexport interface CoverageEntry {\n  /**\n   * The URL of the style sheet or script.\n   */\n  url: string;\n  /**\n   * The content of the style sheet or script.\n   */\n  text: string;\n  /**\n   * The covered range as start and end positions.\n   */\n  ranges: Array<{start: number; end: number}>;\n}\n\n/**\n * The CoverageEntry class for JavaScript\n * @public\n */\nexport interface JSCoverageEntry extends CoverageEntry {\n  /**\n   * Raw V8 script coverage entry.\n   */\n  rawScriptCoverage?: Protocol.Profiler.ScriptCoverage;\n}\n\n/**\n * Set of configurable options for JS coverage.\n * @public\n */\nexport interface JSCoverageOptions {\n  /**\n   * Whether to reset coverage on every navigation.\n   */\n  resetOnNavigation?: boolean;\n  /**\n   * Whether anonymous scripts generated by the page should be reported.\n   */\n  reportAnonymousScripts?: boolean;\n  /**\n   * Whether the result includes raw V8 script coverage entries.\n   */\n  includeRawScriptCoverage?: boolean;\n  /**\n   * Whether to collect coverage information at the block level.\n   * If true, coverage will be collected at the block level (this is the default).\n   * If false, coverage will be collected at the function level.\n   */\n  useBlockCoverage?: boolean;\n}\n\n/**\n * Set of configurable options for CSS coverage.\n * @public\n */\nexport interface CSSCoverageOptions {\n  /**\n   * Whether to reset coverage on every navigation.\n   */\n  resetOnNavigation?: boolean;\n}\n\n/**\n * The Coverage class provides methods to gather information about parts of\n * JavaScript and CSS that were used by the page.\n *\n * @remarks\n * To output coverage in a form consumable by {@link https://github.com/istanbuljs | Istanbul},\n * see {@link https://github.com/istanbuljs/puppeteer-to-istanbul | puppeteer-to-istanbul}.\n *\n * @example\n * An example of using JavaScript and CSS coverage to get percentage of initially\n * executed code:\n *\n * ```ts\n * // Enable both JavaScript and CSS coverage\n * await Promise.all([\n *   page.coverage.startJSCoverage(),\n *   page.coverage.startCSSCoverage(),\n * ]);\n * // Navigate to page\n * await page.goto('https://example.com');\n * // Disable both JavaScript and CSS coverage\n * const [jsCoverage, cssCoverage] = await Promise.all([\n *   page.coverage.stopJSCoverage(),\n *   page.coverage.stopCSSCoverage(),\n * ]);\n * let totalBytes = 0;\n * let usedBytes = 0;\n * const coverage = [...jsCoverage, ...cssCoverage];\n * for (const entry of coverage) {\n *   totalBytes += entry.text.length;\n *   for (const range of entry.ranges) usedBytes += range.end - range.start - 1;\n * }\n * console.log(`Bytes used: ${(usedBytes / totalBytes) * 100}%`);\n * ```\n *\n * @public\n */\nexport class Coverage {\n  #jsCoverage: JSCoverage;\n  #cssCoverage: CSSCoverage;\n\n  constructor(client: CDPSession) {\n    this.#jsCoverage = new JSCoverage(client);\n    this.#cssCoverage = new CSSCoverage(client);\n  }\n\n  /**\n   * @internal\n   */\n  updateClient(client: CDPSession): void {\n    this.#jsCoverage.updateClient(client);\n    this.#cssCoverage.updateClient(client);\n  }\n\n  /**\n   * @param options - Set of configurable options for coverage defaults to\n   * `resetOnNavigation : true, reportAnonymousScripts : false,`\n   * `includeRawScriptCoverage : false, useBlockCoverage : true`\n   * @returns Promise that resolves when coverage is started.\n   *\n   * @remarks\n   * Anonymous scripts are ones that don't have an associated url. These are\n   * scripts that are dynamically created on the page using `eval` or\n   * `new Function`. If `reportAnonymousScripts` is set to `true`, anonymous\n   * scripts URL will start with `debugger://VM` (unless a magic //# sourceURL\n   * comment is present, in which case that will the be URL).\n   */\n  async startJSCoverage(options: JSCoverageOptions = {}): Promise<void> {\n    return await this.#jsCoverage.start(options);\n  }\n\n  /**\n   * Promise that resolves to the array of coverage reports for\n   * all scripts.\n   *\n   * @remarks\n   * JavaScript Coverage doesn't include anonymous scripts by default.\n   * However, scripts with sourceURLs are reported.\n   */\n  async stopJSCoverage(): Promise<JSCoverageEntry[]> {\n    return await this.#jsCoverage.stop();\n  }\n\n  /**\n   * @param options - Set of configurable options for coverage, defaults to\n   * `resetOnNavigation : true`\n   * @returns Promise that resolves when coverage is started.\n   */\n  async startCSSCoverage(options: CSSCoverageOptions = {}): Promise<void> {\n    return await this.#cssCoverage.start(options);\n  }\n\n  /**\n   * Promise that resolves to the array of coverage reports\n   * for all stylesheets.\n   *\n   * @remarks\n   * CSS Coverage doesn't include dynamically injected style tags\n   * without sourceURLs.\n   */\n  async stopCSSCoverage(): Promise<CoverageEntry[]> {\n    return await this.#cssCoverage.stop();\n  }\n}\n\n/**\n * @public\n */\nexport class JSCoverage {\n  #client: CDPSession;\n  #enabled = false;\n  #scriptURLs = new Map<string, string>();\n  #scriptSources = new Map<string, string>();\n  #subscriptions?: DisposableStack;\n  #resetOnNavigation = false;\n  #reportAnonymousScripts = false;\n  #includeRawScriptCoverage = false;\n\n  constructor(client: CDPSession) {\n    this.#client = client;\n  }\n\n  /**\n   * @internal\n   */\n  updateClient(client: CDPSession): void {\n    this.#client = client;\n  }\n\n  async start(\n    options: {\n      resetOnNavigation?: boolean;\n      reportAnonymousScripts?: boolean;\n      includeRawScriptCoverage?: boolean;\n      useBlockCoverage?: boolean;\n    } = {}\n  ): Promise<void> {\n    assert(!this.#enabled, 'JSCoverage is already enabled');\n    const {\n      resetOnNavigation = true,\n      reportAnonymousScripts = false,\n      includeRawScriptCoverage = false,\n      useBlockCoverage = true,\n    } = options;\n    this.#resetOnNavigation = resetOnNavigation;\n    this.#reportAnonymousScripts = reportAnonymousScripts;\n    this.#includeRawScriptCoverage = includeRawScriptCoverage;\n    this.#enabled = true;\n    this.#scriptURLs.clear();\n    this.#scriptSources.clear();\n    this.#subscriptions = new DisposableStack();\n    const clientEmitter = this.#subscriptions.use(\n      new EventEmitter(this.#client)\n    );\n    clientEmitter.on('Debugger.scriptParsed', this.#onScriptParsed.bind(this));\n    clientEmitter.on(\n      'Runtime.executionContextsCleared',\n      this.#onExecutionContextsCleared.bind(this)\n    );\n    await Promise.all([\n      this.#client.send('Profiler.enable'),\n      this.#client.send('Profiler.startPreciseCoverage', {\n        callCount: this.#includeRawScriptCoverage,\n        detailed: useBlockCoverage,\n      }),\n      this.#client.send('Debugger.enable'),\n      this.#client.send('Debugger.setSkipAllPauses', {skip: true}),\n    ]);\n  }\n\n  #onExecutionContextsCleared(): void {\n    if (!this.#resetOnNavigation) {\n      return;\n    }\n    this.#scriptURLs.clear();\n    this.#scriptSources.clear();\n  }\n\n  async #onScriptParsed(\n    event: Protocol.Debugger.ScriptParsedEvent\n  ): Promise<void> {\n    // Ignore puppeteer-injected scripts\n    if (PuppeteerURL.isPuppeteerURL(event.url)) {\n      return;\n    }\n    // Ignore other anonymous scripts unless the reportAnonymousScripts option is true.\n    if (!event.url && !this.#reportAnonymousScripts) {\n      return;\n    }\n    try {\n      const response = await this.#client.send('Debugger.getScriptSource', {\n        scriptId: event.scriptId,\n      });\n      this.#scriptURLs.set(event.scriptId, event.url);\n      this.#scriptSources.set(event.scriptId, response.scriptSource);\n    } catch (error) {\n      // This might happen if the page has already navigated away.\n      debugError(error);\n    }\n  }\n\n  async stop(): Promise<JSCoverageEntry[]> {\n    assert(this.#enabled, 'JSCoverage is not enabled');\n    this.#enabled = false;\n\n    const result = await Promise.all([\n      this.#client.send('Profiler.takePreciseCoverage'),\n      this.#client.send('Profiler.stopPreciseCoverage'),\n      this.#client.send('Profiler.disable'),\n      this.#client.send('Debugger.disable'),\n    ]);\n\n    this.#subscriptions?.dispose();\n\n    const coverage = [];\n    const profileResponse = result[0];\n\n    for (const entry of profileResponse.result) {\n      let url = this.#scriptURLs.get(entry.scriptId);\n      if (!url && this.#reportAnonymousScripts) {\n        url = 'debugger://VM' + entry.scriptId;\n      }\n      const text = this.#scriptSources.get(entry.scriptId);\n      if (text === undefined || url === undefined) {\n        continue;\n      }\n      const flattenRanges = [];\n      for (const func of entry.functions) {\n        flattenRanges.push(...func.ranges);\n      }\n      const ranges = convertToDisjointRanges(flattenRanges);\n      if (!this.#includeRawScriptCoverage) {\n        coverage.push({url, ranges, text});\n      } else {\n        coverage.push({url, ranges, text, rawScriptCoverage: entry});\n      }\n    }\n    return coverage;\n  }\n}\n\n/**\n * @public\n */\nexport class CSSCoverage {\n  #client: CDPSession;\n  #enabled = false;\n  #stylesheetURLs = new Map<string, string>();\n  #stylesheetSources = new Map<string, string>();\n  #eventListeners?: DisposableStack;\n  #resetOnNavigation = false;\n\n  constructor(client: CDPSession) {\n    this.#client = client;\n  }\n\n  /**\n   * @internal\n   */\n  updateClient(client: CDPSession): void {\n    this.#client = client;\n  }\n\n  async start(options: {resetOnNavigation?: boolean} = {}): Promise<void> {\n    assert(!this.#enabled, 'CSSCoverage is already enabled');\n    const {resetOnNavigation = true} = options;\n    this.#resetOnNavigation = resetOnNavigation;\n    this.#enabled = true;\n    this.#stylesheetURLs.clear();\n    this.#stylesheetSources.clear();\n    this.#eventListeners = new DisposableStack();\n    const clientEmitter = this.#eventListeners.use(\n      new EventEmitter(this.#client)\n    );\n    clientEmitter.on('CSS.styleSheetAdded', this.#onStyleSheet.bind(this));\n    clientEmitter.on(\n      'Runtime.executionContextsCleared',\n      this.#onExecutionContextsCleared.bind(this)\n    );\n\n    await Promise.all([\n      this.#client.send('DOM.enable'),\n      this.#client.send('CSS.enable'),\n      this.#client.send('CSS.startRuleUsageTracking'),\n    ]);\n  }\n\n  #onExecutionContextsCleared(): void {\n    if (!this.#resetOnNavigation) {\n      return;\n    }\n    this.#stylesheetURLs.clear();\n    this.#stylesheetSources.clear();\n  }\n\n  async #onStyleSheet(event: Protocol.CSS.StyleSheetAddedEvent): Promise<void> {\n    const header = event.header;\n    // Ignore anonymous scripts\n    if (!header.sourceURL) {\n      return;\n    }\n    try {\n      const response = await this.#client.send('CSS.getStyleSheetText', {\n        styleSheetId: header.styleSheetId,\n      });\n      this.#stylesheetURLs.set(header.styleSheetId, header.sourceURL);\n      this.#stylesheetSources.set(header.styleSheetId, response.text);\n    } catch (error) {\n      // This might happen if the page has already navigated away.\n      debugError(error);\n    }\n  }\n\n  async stop(): Promise<CoverageEntry[]> {\n    assert(this.#enabled, 'CSSCoverage is not enabled');\n    this.#enabled = false;\n    const ruleTrackingResponse = await this.#client.send(\n      'CSS.stopRuleUsageTracking'\n    );\n    await Promise.all([\n      this.#client.send('CSS.disable'),\n      this.#client.send('DOM.disable'),\n    ]);\n    this.#eventListeners?.dispose();\n\n    // aggregate by styleSheetId\n    const styleSheetIdToCoverage = new Map();\n    for (const entry of ruleTrackingResponse.ruleUsage) {\n      let ranges = styleSheetIdToCoverage.get(entry.styleSheetId);\n      if (!ranges) {\n        ranges = [];\n        styleSheetIdToCoverage.set(entry.styleSheetId, ranges);\n      }\n      ranges.push({\n        startOffset: entry.startOffset,\n        endOffset: entry.endOffset,\n        count: entry.used ? 1 : 0,\n      });\n    }\n\n    const coverage: CoverageEntry[] = [];\n    for (const styleSheetId of this.#stylesheetURLs.keys()) {\n      const url = this.#stylesheetURLs.get(styleSheetId);\n      assert(\n        typeof url !== 'undefined',\n        `Stylesheet URL is undefined (styleSheetId=${styleSheetId})`\n      );\n      const text = this.#stylesheetSources.get(styleSheetId);\n      assert(\n        typeof text !== 'undefined',\n        `Stylesheet text is undefined (styleSheetId=${styleSheetId})`\n      );\n      const ranges = convertToDisjointRanges(\n        styleSheetIdToCoverage.get(styleSheetId) || []\n      );\n      coverage.push({url, ranges, text});\n    }\n\n    return coverage;\n  }\n}\n\nfunction convertToDisjointRanges(\n  nestedRanges: Array<{startOffset: number; endOffset: number; count: number}>\n): Array<{start: number; end: number}> {\n  const points = [];\n  for (const range of nestedRanges) {\n    points.push({offset: range.startOffset, type: 0, range});\n    points.push({offset: range.endOffset, type: 1, range});\n  }\n  // Sort points to form a valid parenthesis sequence.\n  points.sort((a, b) => {\n    // Sort with increasing offsets.\n    if (a.offset !== b.offset) {\n      return a.offset - b.offset;\n    }\n    // All \"end\" points should go before \"start\" points.\n    if (a.type !== b.type) {\n      return b.type - a.type;\n    }\n    const aLength = a.range.endOffset - a.range.startOffset;\n    const bLength = b.range.endOffset - b.range.startOffset;\n    // For two \"start\" points, the one with longer range goes first.\n    if (a.type === 0) {\n      return bLength - aLength;\n    }\n    // For two \"end\" points, the one with shorter range goes first.\n    return aLength - bLength;\n  });\n\n  const hitCountStack = [];\n  const results: Array<{\n    start: number;\n    end: number;\n  }> = [];\n  let lastOffset = 0;\n  // Run scanning line to intersect all ranges.\n  for (const point of points) {\n    if (\n      hitCountStack.length &&\n      lastOffset < point.offset &&\n      hitCountStack[hitCountStack.length - 1]! > 0\n    ) {\n      const lastResult = results[results.length - 1];\n      if (lastResult && lastResult.end === lastOffset) {\n        lastResult.end = point.offset;\n      } else {\n        results.push({start: lastOffset, end: point.offset});\n      }\n    }\n    lastOffset = point.offset;\n    if (point.type === 0) {\n      hitCountStack.push(point.range.count);\n    } else {\n      hitCountStack.pop();\n    }\n  }\n  // Filter out empty ranges.\n  return results.filter(range => {\n    return range.end - range.start > 0;\n  });\n}\n", "/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport type {Protocol} from 'devtools-protocol';\n\nimport {type CDPSession, CDPSessionEvent} from '../api/CDPSession.js';\nimport type {GeolocationOptions, MediaFeature} from '../api/Page.js';\nimport {debugError} from '../common/util.js';\nimport type {Viewport} from '../common/Viewport.js';\nimport {assert} from '../util/assert.js';\nimport {invokeAtMostOnceForArguments} from '../util/decorators.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\n\ninterface ViewportState {\n  viewport?: Viewport;\n  active: boolean;\n}\n\ninterface IdleOverridesState {\n  overrides?: {\n    isUserActive: boolean;\n    isScreenUnlocked: boolean;\n  };\n  active: boolean;\n}\n\ninterface TimezoneState {\n  timezoneId?: string;\n  active: boolean;\n}\n\ninterface VisionDeficiencyState {\n  visionDeficiency?: Protocol.Emulation.SetEmulatedVisionDeficiencyRequest['type'];\n  active: boolean;\n}\n\ninterface CpuThrottlingState {\n  factor?: number;\n  active: boolean;\n}\n\ninterface MediaFeaturesState {\n  mediaFeatures?: MediaFeature[];\n  active: boolean;\n}\n\ninterface MediaTypeState {\n  type?: string;\n  active: boolean;\n}\n\ninterface GeoLocationState {\n  geoLocation?: GeolocationOptions;\n  active: boolean;\n}\n\ninterface DefaultBackgroundColorState {\n  color?: Protocol.DOM.RGBA;\n  active: boolean;\n}\n\ninterface JavascriptEnabledState {\n  javaScriptEnabled: boolean;\n  active: boolean;\n}\n\n/**\n * @internal\n */\nexport interface ClientProvider {\n  clients(): CDPSession[];\n  registerState(state: EmulatedState<any>): void;\n}\n\n/**\n * @internal\n */\nexport class EmulatedState<T extends {active: boolean}> {\n  #state: T;\n  #clientProvider: ClientProvider;\n  #updater: (client: CDPSession, state: T) => Promise<void>;\n\n  constructor(\n    initialState: T,\n    clientProvider: ClientProvider,\n    updater: (client: CDPSession, state: T) => Promise<void>\n  ) {\n    this.#state = initialState;\n    this.#clientProvider = clientProvider;\n    this.#updater = updater;\n    this.#clientProvider.registerState(this);\n  }\n\n  async setState(state: T): Promise<void> {\n    this.#state = state;\n    await this.sync();\n  }\n\n  get state(): T {\n    return this.#state;\n  }\n\n  async sync(): Promise<void> {\n    await Promise.all(\n      this.#clientProvider.clients().map(client => {\n        return this.#updater(client, this.#state);\n      })\n    );\n  }\n}\n\n/**\n * @internal\n */\nexport class EmulationManager {\n  #client: CDPSession;\n\n  #emulatingMobile = false;\n  #hasTouch = false;\n\n  #states: Array<EmulatedState<any>> = [];\n\n  #viewportState = new EmulatedState<ViewportState>(\n    {\n      active: false,\n    },\n    this,\n    this.#applyViewport\n  );\n  #idleOverridesState = new EmulatedState<IdleOverridesState>(\n    {\n      active: false,\n    },\n    this,\n    this.#emulateIdleState\n  );\n  #timezoneState = new EmulatedState<TimezoneState>(\n    {\n      active: false,\n    },\n    this,\n    this.#emulateTimezone\n  );\n  #visionDeficiencyState = new EmulatedState<VisionDeficiencyState>(\n    {\n      active: false,\n    },\n    this,\n    this.#emulateVisionDeficiency\n  );\n  #cpuThrottlingState = new EmulatedState<CpuThrottlingState>(\n    {\n      active: false,\n    },\n    this,\n    this.#emulateCpuThrottling\n  );\n  #mediaFeaturesState = new EmulatedState<MediaFeaturesState>(\n    {\n      active: false,\n    },\n    this,\n    this.#emulateMediaFeatures\n  );\n  #mediaTypeState = new EmulatedState<MediaTypeState>(\n    {\n      active: false,\n    },\n    this,\n    this.#emulateMediaType\n  );\n  #geoLocationState = new EmulatedState<GeoLocationState>(\n    {\n      active: false,\n    },\n    this,\n    this.#setGeolocation\n  );\n  #defaultBackgroundColorState = new EmulatedState<DefaultBackgroundColorState>(\n    {\n      active: false,\n    },\n    this,\n    this.#setDefaultBackgroundColor\n  );\n  #javascriptEnabledState = new EmulatedState<JavascriptEnabledState>(\n    {\n      javaScriptEnabled: true,\n      active: false,\n    },\n    this,\n    this.#setJavaScriptEnabled\n  );\n\n  #secondaryClients = new Set<CDPSession>();\n\n  constructor(client: CDPSession) {\n    this.#client = client;\n  }\n\n  updateClient(client: CDPSession): void {\n    this.#client = client;\n    this.#secondaryClients.delete(client);\n  }\n\n  registerState(state: EmulatedState<any>): void {\n    this.#states.push(state);\n  }\n\n  clients(): CDPSession[] {\n    return [this.#client, ...Array.from(this.#secondaryClients)];\n  }\n\n  async registerSpeculativeSession(client: CDPSession): Promise<void> {\n    this.#secondaryClients.add(client);\n    client.once(CDPSessionEvent.Disconnected, () => {\n      this.#secondaryClients.delete(client);\n    });\n    // We don't await here because we want to register all state changes before\n    // the target is unpaused.\n    void Promise.all(\n      this.#states.map(s => {\n        return s.sync().catch(debugError);\n      })\n    );\n  }\n\n  get javascriptEnabled(): boolean {\n    return this.#javascriptEnabledState.state.javaScriptEnabled;\n  }\n\n  async emulateViewport(viewport: Viewport): Promise<boolean> {\n    await this.#viewportState.setState({\n      viewport,\n      active: true,\n    });\n\n    const mobile = viewport.isMobile || false;\n    const hasTouch = viewport.hasTouch || false;\n    const reloadNeeded =\n      this.#emulatingMobile !== mobile || this.#hasTouch !== hasTouch;\n    this.#emulatingMobile = mobile;\n    this.#hasTouch = hasTouch;\n\n    return reloadNeeded;\n  }\n\n  @invokeAtMostOnceForArguments\n  async #applyViewport(\n    client: CDPSession,\n    viewportState: ViewportState\n  ): Promise<void> {\n    if (!viewportState.viewport) {\n      return;\n    }\n    const {viewport} = viewportState;\n    const mobile = viewport.isMobile || false;\n    const width = viewport.width;\n    const height = viewport.height;\n    const deviceScaleFactor = viewport.deviceScaleFactor ?? 1;\n    const screenOrientation: Protocol.Emulation.ScreenOrientation =\n      viewport.isLandscape\n        ? {angle: 90, type: 'landscapePrimary'}\n        : {angle: 0, type: 'portraitPrimary'};\n    const hasTouch = viewport.hasTouch || false;\n\n    await Promise.all([\n      client\n        .send('Emulation.setDeviceMetricsOverride', {\n          mobile,\n          width,\n          height,\n          deviceScaleFactor,\n          screenOrientation,\n        })\n        .catch(err => {\n          if (\n            err.message.includes('Target does not support metrics override')\n          ) {\n            debugError(err);\n            return;\n          }\n          throw err;\n        }),\n      client.send('Emulation.setTouchEmulationEnabled', {\n        enabled: hasTouch,\n      }),\n    ]);\n  }\n\n  async emulateIdleState(overrides?: {\n    isUserActive: boolean;\n    isScreenUnlocked: boolean;\n  }): Promise<void> {\n    await this.#idleOverridesState.setState({\n      active: true,\n      overrides,\n    });\n  }\n\n  @invokeAtMostOnceForArguments\n  async #emulateIdleState(\n    client: CDPSession,\n    idleStateState: IdleOverridesState\n  ): Promise<void> {\n    if (!idleStateState.active) {\n      return;\n    }\n    if (idleStateState.overrides) {\n      await client.send('Emulation.setIdleOverride', {\n        isUserActive: idleStateState.overrides.isUserActive,\n        isScreenUnlocked: idleStateState.overrides.isScreenUnlocked,\n      });\n    } else {\n      await client.send('Emulation.clearIdleOverride');\n    }\n  }\n\n  @invokeAtMostOnceForArguments\n  async #emulateTimezone(\n    client: CDPSession,\n    timezoneState: TimezoneState\n  ): Promise<void> {\n    if (!timezoneState.active) {\n      return;\n    }\n    try {\n      await client.send('Emulation.setTimezoneOverride', {\n        timezoneId: timezoneState.timezoneId || '',\n      });\n    } catch (error) {\n      if (isErrorLike(error) && error.message.includes('Invalid timezone')) {\n        throw new Error(`Invalid timezone ID: ${timezoneState.timezoneId}`);\n      }\n      throw error;\n    }\n  }\n\n  async emulateTimezone(timezoneId?: string): Promise<void> {\n    await this.#timezoneState.setState({\n      timezoneId,\n      active: true,\n    });\n  }\n\n  @invokeAtMostOnceForArguments\n  async #emulateVisionDeficiency(\n    client: CDPSession,\n    visionDeficiency: VisionDeficiencyState\n  ): Promise<void> {\n    if (!visionDeficiency.active) {\n      return;\n    }\n    await client.send('Emulation.setEmulatedVisionDeficiency', {\n      type: visionDeficiency.visionDeficiency || 'none',\n    });\n  }\n\n  async emulateVisionDeficiency(\n    type?: Protocol.Emulation.SetEmulatedVisionDeficiencyRequest['type']\n  ): Promise<void> {\n    const visionDeficiencies = new Set<\n      Protocol.Emulation.SetEmulatedVisionDeficiencyRequest['type']\n    >([\n      'none',\n      'achromatopsia',\n      'blurredVision',\n      'deuteranopia',\n      'protanopia',\n      'tritanopia',\n    ]);\n    assert(\n      !type || visionDeficiencies.has(type),\n      `Unsupported vision deficiency: ${type}`\n    );\n    await this.#visionDeficiencyState.setState({\n      active: true,\n      visionDeficiency: type,\n    });\n  }\n\n  @invokeAtMostOnceForArguments\n  async #emulateCpuThrottling(\n    client: CDPSession,\n    state: CpuThrottlingState\n  ): Promise<void> {\n    if (!state.active) {\n      return;\n    }\n    await client.send('Emulation.setCPUThrottlingRate', {\n      rate: state.factor ?? 1,\n    });\n  }\n\n  async emulateCPUThrottling(factor: number | null): Promise<void> {\n    assert(\n      factor === null || factor >= 1,\n      'Throttling rate should be greater or equal to 1'\n    );\n    await this.#cpuThrottlingState.setState({\n      active: true,\n      factor: factor ?? undefined,\n    });\n  }\n\n  @invokeAtMostOnceForArguments\n  async #emulateMediaFeatures(\n    client: CDPSession,\n    state: MediaFeaturesState\n  ): Promise<void> {\n    if (!state.active) {\n      return;\n    }\n    await client.send('Emulation.setEmulatedMedia', {\n      features: state.mediaFeatures,\n    });\n  }\n\n  async emulateMediaFeatures(features?: MediaFeature[]): Promise<void> {\n    if (Array.isArray(features)) {\n      for (const mediaFeature of features) {\n        const name = mediaFeature.name;\n        assert(\n          /^(?:prefers-(?:color-scheme|reduced-motion)|color-gamut)$/.test(\n            name\n          ),\n          'Unsupported media feature: ' + name\n        );\n      }\n    }\n    await this.#mediaFeaturesState.setState({\n      active: true,\n      mediaFeatures: features,\n    });\n  }\n\n  @invokeAtMostOnceForArguments\n  async #emulateMediaType(\n    client: CDPSession,\n    state: MediaTypeState\n  ): Promise<void> {\n    if (!state.active) {\n      return;\n    }\n    await client.send('Emulation.setEmulatedMedia', {\n      media: state.type || '',\n    });\n  }\n\n  async emulateMediaType(type?: string): Promise<void> {\n    assert(\n      type === 'screen' ||\n        type === 'print' ||\n        (type ?? undefined) === undefined,\n      'Unsupported media type: ' + type\n    );\n    await this.#mediaTypeState.setState({\n      type,\n      active: true,\n    });\n  }\n\n  @invokeAtMostOnceForArguments\n  async #setGeolocation(\n    client: CDPSession,\n    state: GeoLocationState\n  ): Promise<void> {\n    if (!state.active) {\n      return;\n    }\n    await client.send(\n      'Emulation.setGeolocationOverride',\n      state.geoLocation\n        ? {\n            longitude: state.geoLocation.longitude,\n            latitude: state.geoLocation.latitude,\n            accuracy: state.geoLocation.accuracy,\n          }\n        : undefined\n    );\n  }\n\n  async setGeolocation(options: GeolocationOptions): Promise<void> {\n    const {longitude, latitude, accuracy = 0} = options;\n    if (longitude < -180 || longitude > 180) {\n      throw new Error(\n        `Invalid longitude \"${longitude}\": precondition -180 <= LONGITUDE <= 180 failed.`\n      );\n    }\n    if (latitude < -90 || latitude > 90) {\n      throw new Error(\n        `Invalid latitude \"${latitude}\": precondition -90 <= LATITUDE <= 90 failed.`\n      );\n    }\n    if (accuracy < 0) {\n      throw new Error(\n        `Invalid accuracy \"${accuracy}\": precondition 0 <= ACCURACY failed.`\n      );\n    }\n    await this.#geoLocationState.setState({\n      active: true,\n      geoLocation: {\n        longitude,\n        latitude,\n        accuracy,\n      },\n    });\n  }\n\n  @invokeAtMostOnceForArguments\n  async #setDefaultBackgroundColor(\n    client: CDPSession,\n    state: DefaultBackgroundColorState\n  ): Promise<void> {\n    if (!state.active) {\n      return;\n    }\n    await client.send('Emulation.setDefaultBackgroundColorOverride', {\n      color: state.color,\n    });\n  }\n\n  /**\n   * Resets default white background\n   */\n  async resetDefaultBackgroundColor(): Promise<void> {\n    await this.#defaultBackgroundColorState.setState({\n      active: true,\n      color: undefined,\n    });\n  }\n\n  /**\n   * Hides default white background\n   */\n  async setTransparentBackgroundColor(): Promise<void> {\n    await this.#defaultBackgroundColorState.setState({\n      active: true,\n      color: {r: 0, g: 0, b: 0, a: 0},\n    });\n  }\n\n  @invokeAtMostOnceForArguments\n  async #setJavaScriptEnabled(\n    client: CDPSession,\n    state: JavascriptEnabledState\n  ): Promise<void> {\n    if (!state.active) {\n      return;\n    }\n    await client.send('Emulation.setScriptExecutionDisabled', {\n      value: !state.javaScriptEnabled,\n    });\n  }\n\n  async setJavaScriptEnabled(enabled: boolean): Promise<void> {\n    await this.#javascriptEnabledState.setState({\n      active: true,\n      javaScriptEnabled: enabled,\n    });\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport type {CDPSession} from '../api/CDPSession.js';\nimport {\n  getReadableAsBuffer,\n  getReadableFromProtocolStream,\n} from '../common/util.js';\nimport {assert} from '../util/assert.js';\nimport {Deferred} from '../util/Deferred.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\n\n/**\n * @public\n */\nexport interface TracingOptions {\n  path?: string;\n  screenshots?: boolean;\n  categories?: string[];\n}\n\n/**\n * The Tracing class exposes the tracing audit interface.\n * @remarks\n * You can use `tracing.start` and `tracing.stop` to create a trace file\n * which can be opened in Chrome DevTools or {@link https://chromedevtools.github.io/timeline-viewer/ | timeline viewer}.\n *\n * @example\n *\n * ```ts\n * await page.tracing.start({path: 'trace.json'});\n * await page.goto('https://www.google.com');\n * await page.tracing.stop();\n * ```\n *\n * @public\n */\nexport class Tracing {\n  #client: CDPSession;\n  #recording = false;\n  #path?: string;\n\n  /**\n   * @internal\n   */\n  constructor(client: CDPSession) {\n    this.#client = client;\n  }\n\n  /**\n   * @internal\n   */\n  updateClient(client: CDPSession): void {\n    this.#client = client;\n  }\n\n  /**\n   * Starts a trace for the current page.\n   * @remarks\n   * Only one trace can be active at a time per browser.\n   *\n   * @param options - Optional `TracingOptions`.\n   */\n  async start(options: TracingOptions = {}): Promise<void> {\n    assert(\n      !this.#recording,\n      'Cannot start recording trace while already recording trace.'\n    );\n\n    const defaultCategories = [\n      '-*',\n      'devtools.timeline',\n      'v8.execute',\n      'disabled-by-default-devtools.timeline',\n      'disabled-by-default-devtools.timeline.frame',\n      'toplevel',\n      'blink.console',\n      'blink.user_timing',\n      'latencyInfo',\n      'disabled-by-default-devtools.timeline.stack',\n      'disabled-by-default-v8.cpu_profiler',\n    ];\n    const {path, screenshots = false, categories = defaultCategories} = options;\n\n    if (screenshots) {\n      categories.push('disabled-by-default-devtools.screenshot');\n    }\n\n    const excludedCategories = categories\n      .filter(cat => {\n        return cat.startsWith('-');\n      })\n      .map(cat => {\n        return cat.slice(1);\n      });\n    const includedCategories = categories.filter(cat => {\n      return !cat.startsWith('-');\n    });\n\n    this.#path = path;\n    this.#recording = true;\n    await this.#client.send('Tracing.start', {\n      transferMode: 'ReturnAsStream',\n      traceConfig: {\n        excludedCategories,\n        includedCategories,\n      },\n    });\n  }\n\n  /**\n   * Stops a trace started with the `start` method.\n   * @returns Promise which resolves to buffer with trace data.\n   */\n  async stop(): Promise<Buffer | undefined> {\n    const contentDeferred = Deferred.create<Buffer | undefined>();\n    this.#client.once('Tracing.tracingComplete', async event => {\n      try {\n        assert(event.stream, 'Missing \"stream\"');\n        const readable = await getReadableFromProtocolStream(\n          this.#client,\n          event.stream\n        );\n        const buffer = await getReadableAsBuffer(readable, this.#path);\n        contentDeferred.resolve(buffer ?? undefined);\n      } catch (error) {\n        if (isErrorLike(error)) {\n          contentDeferred.reject(error);\n        } else {\n          contentDeferred.reject(new Error(`Unknown error: ${error}`));\n        }\n      }\n    });\n    await this.#client.send('Tracing.end');\n    this.#recording = false;\n    return await contentDeferred.valueOrThrow();\n  }\n}\n"],
  "mappings": "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",
  "names": ["iterator", "size", "__addDisposableResource", "timeout", "selector", "visible", "map", "_get", "QueryHandler", "propertyName", "_a", "map", "__addDisposableResource", "_a", "__runInitializers", "result", "QueryHandler", "__addDisposableResource", "elements", "results", "tagName", "source", "values", "offsets", "visibility", "box", "__esDecorate", "LocatorEvent", "timeout", "__addDisposableResource", "value", "_pageOrFrame", "FrameEvent", "__runInitializers", "__addDisposableResource", "document", "QueryHandler", "type", "content", "__esDecorate", "InterceptResolutionAction", "value", "timeout", "__runInitializers", "__addDisposableResource", "__esDecorate", "_a", "createFunction", "timeout", "TargetType", "timeout", "_type", "_args", "_client", "_enabled", "_resetOnNavigation", "_onExecutionContextsCleared", "onExecutionContextsCleared_fn", "_client", "__runInitializers", "__esDecorate", "_client"]
}
