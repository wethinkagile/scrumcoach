import{fileURLToPath as R}from"url";import{globbySync as v}from"globby";import l from"kleur";import y from"path";import $ from"slash";const O=/\.astro$/,g="__";function D(){return{name:"astro-dev-only-routes",hooks:{"astro:config:setup":({injectRoute:e,config:n,command:o})=>{if(o==="build")return;let t=new URL("./src/pages",n.root);const r=v([`**/${g}*.astro`,`**/${g}*/**/*.astro`],{cwd:t});if(r.length===0){m("warn","No dev-only routes found.");return}const c=r.map(s=>{const a=s.indexOf(g),f=s.slice(0,a);return{routePath:s.slice(a+g.length).replace(O,""),pagesDirRelativePath:f}});for(let{routePath:s,pagesDirRelativePath:a}of c){const f=$(y.join(R(t),`${g}${s}.astro`)),d=$(y.join(a,s));e({entryPoint:f,pattern:d})}const i=c.length,u=b(w(r));m("info",`Found ${i} dev-only route${i>1?"s":""}. Here they are:
${l.bold(u)}`)}}}}function m(e,n,o=!1){if(o)return;const t=new Date().toLocaleTimeString(),r=e==="error"?l.bgRed:e==="warn"?l.bgYellow:l.bgMagenta;console.log(`${l.gray(t)}
${r(l.bold("[astro-dev-only-routes]"))} ${n}`)}function w(e){const n={};for(let o of e){const t=o.split(y.sep),r=t.shift();r&&C(n,[r,...t])}return n}function C(e,n){let o=e;for(let t of n)o[t]=o[t]||{},o=o[t]}function b(e,n=0){const o=l.magenta("\u251C\u2500"),t=l.magenta("\u2514\u2500"),r="\u25BC";let c="";const i=Object.keys(e);for(let u=0;u<i.length;u++){const s=i[u],a=e[s],f=u===i.length-1,d=T(a)?r:" ",p="   ".repeat(n),h=f?t:o;c+=`${p} ${h} ${d} ${s}
`,typeof a=="object"?c+=b(a,n+1):c+=`${p}${h} ${a}
`}return c}function T(e){return Object.keys(e).length>0}export{D as default};
